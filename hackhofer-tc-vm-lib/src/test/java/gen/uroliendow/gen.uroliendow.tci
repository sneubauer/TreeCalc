.calcs size=225
.calc calc=0 name=LICENSENAME nargs=0 computenode=3
.calc calc=1 name=COMPILERVERSION nargs=0 computenode=3
.calc calc=2 name=PX_LI_VERSION nargs=0 computenode=4
.calc calc=3 name=PX_LI_CHECK nargs=0 computenode=5
.calc calc=4 name=P_LI_AGE nargs=0 computenode=5
.calc calc=5 name=P_LI_IRATE nargs=0 computenode=5
.calc calc=6 name=P_LI_RISK nargs=0 computenode=5
.calc calc=7 name=P_LI_GEN nargs=0 computenode=5
.calc calc=8 name=P_LI_INTERESTRATE nargs=0 computenode=5
.calc calc=9 name=P_LI_ALPHA nargs=1 computenode=5
.calc calc=10 name=P_LI_ALPHAZILLMER nargs=1 computenode=5
.calc calc=11 name=P_LI_BETA nargs=0 computenode=5
.calc calc=12 name=P_LI_GAMMA nargs=0 computenode=5
.calc calc=13 name=P_LI_GAMMADASH nargs=0 computenode=5
.calc calc=14 name=P_LI_DELTA nargs=0 computenode=5
.calc calc=15 name=P_LI_IFL nargs=0 computenode=5
.calc calc=16 name=P_LI_SL nargs=0 computenode=5
.calc calc=17 name=P_LI_GFC nargs=0 computenode=5
.calc calc=18 name=P_LI_TAXFACT nargs=0 computenode=5
.calc calc=19 name=P_LI_QX nargs=1 computenode=5
.calc calc=20 name=P_LI_LX nargs=1 computenode=5
.calc calc=21 name=P_LI_DX nargs=1 computenode=5
.calc calc=22 name=P_LI_NX nargs=1 computenode=5
.calc calc=23 name=P_LI_MX nargs=1 computenode=5
.calc calc=24 name=P_LI_ZILLMERPREMIUM nargs=1 computenode=5
.calc calc=25 name=P_LI_NAX nargs=1 computenode=5
.calc calc=26 name=P_LI_NEX nargs=1 computenode=5
.calc calc=27 name=P_LI_AXN nargs=1 computenode=5
.calc calc=28 name=P_LI_AEXK nargs=1 computenode=5
.calc calc=29 name=P_LI_AEXN nargs=1 computenode=5
.calc calc=30 name=P_LI_AEXN_K nargs=1 computenode=5
.calc calc=31 name=P_LI_SUMALPHA nargs=0 computenode=5
.calc calc=32 name=P_LI_AEX3_2 nargs=0 computenode=5
.calc calc=33 name=P_LI_AEX5_5 nargs=0 computenode=5
.calc calc=34 name=P_LI_NEX_ALPHA nargs=1 computenode=5
.calc calc=35 name=P_LI_PREMIUMOIP nargs=2 computenode=5
.calc calc=36 name=P_LI_GROSSPREMIUM nargs=0 computenode=5
.calc calc=37 name=P_LI_NETPREMIUM nargs=0 computenode=5
.calc calc=38 name=P_LI_PREMIUMALPHA nargs=0 computenode=5
.calc calc=39 name=P_LI_PREMIUMBETA nargs=0 computenode=5
.calc calc=40 name=P_LI_PREMIUMGAMMA nargs=0 computenode=5
.calc calc=41 name=P_LI_RESERVENET nargs=1 computenode=5
.calc calc=42 name=P_LI_RESERVEZILLMER nargs=1 computenode=5
.calc calc=43 name=P_LI_RESERVEGAMMA nargs=1 computenode=5
.calc calc=44 name=P_LI_RESERVETECHNICAL nargs=1 computenode=5
.calc calc=45 name=P_LI_SURRENDERVALUE nargs=1 computenode=5
.calc calc=46 name=P_LI_ACCRUALFACT nargs=1 computenode=5
.calc calc=47 name=P_LI_PROFITBASE nargs=1 computenode=5
.calc calc=48 name=P_LI_PROFITNEW nargs=1 computenode=5
.calc calc=49 name=P_LI_PROFITSUM nargs=1 computenode=5
.calc calc=50 name=P_LI_PROFIT nargs=0 computenode=5
.calc calc=51 name=P_LI_PROFITRATE nargs=1 computenode=5
.calc calc=52 name=P_LI_PROFITINTERESTRATE nargs=0 computenode=5
.calc calc=53 name=PX_LI_PREMIUMSUMMED nargs=1 computenode=6
.calc calc=54 name=PX_LI_SURRENDERVALUE nargs=1 computenode=6
.calc calc=55 name=PX_LI_DEATHBENEFIT nargs=1 computenode=6
.calc calc=56 name=PX_LI_DEATHBENEFITPLUSPROFIT nargs=1 computenode=6
.calc calc=57 name=PX_LI_PROFITYEAR nargs=1 computenode=6
.calc calc=58 name=PX_LI_SURRENDERVALUEPLUSPROFIT nargs=1 computenode=6
.calc calc=59 name=PX_LI_REDUCEDSUM nargs=1 computenode=6
.calc calc=60 name=PX_LI_TARIFFGENERATION nargs=0 computestartnode=6
.calc calc=61 name=PX_LI_SUM nargs=0 computestartnode=6
.calc calc=62 name=PX_LI_PREMIUMOIP nargs=0 computestartnode=6
.calc calc=63 name=PX_LI_PREMIUMCONTRACTFREQ nargs=0 computestartnode=6
.calc calc=64 name=PX_LI_PREMIUMCONTRACTYEAR nargs=0 computestartnode=6
.calc calc=65 name=PX_LI_PREMIUMFREQ nargs=0 computestartnode=6
.calc calc=66 name=PX_LI_PREMIUMFREQBASE nargs=0 computestartnode=6
.calc calc=67 name=PX_LI_RIDERPREMIUMFREQTOTAL nargs=0 computestartnode=6
.calc calc=68 name=PX_LI_RIDERPREMIUMYEARTOTAL nargs=0 computestartnode=6
.calc calc=69 name=PX_LI_YEARCOUNTER nargs=1 computestartnode=6
.calc calc=70 name=PX_LI_YEAR nargs=1 computestartnode=6
.calc calc=71 name=PX_LI_PREMIUMSUMMEDNOINDEX nargs=1 computestartnode=6
.calc calc=72 name=PX_LI_SURRENDERVALUENOINDEX nargs=1 computestartnode=6
.calc calc=73 name=PX_LI_SURRENDERVALUEPLUSPROFITNOINDEX nargs=1 computestartnode=6
.calc calc=74 name=PX_LI_DEATHBENEFITNOINDEX nargs=1 computestartnode=6
.calc calc=75 name=PX_LI_DEATHBENEFITPLUSPROFITNOINDEX nargs=1 computestartnode=6
.calc calc=76 name=PX_LI_PROFITYEARNOINDEX nargs=1 computestartnode=6
.calc calc=77 name=PX_LI_REDUCEDSUMNOINDEX nargs=1 computestartnode=6
.calc calc=78 name=PX_LI_PREMIUMSUMMEDWITHINDEX nargs=1 computestartnode=6
.calc calc=79 name=PX_LI_SURRENDERVALUEWITHINDEX nargs=1 computestartnode=6
.calc calc=80 name=PX_LI_SURRENDERVALUEPLUSPROFITWITHINDEX nargs=1 computestartnode=6
.calc calc=81 name=PX_LI_DEATHBENEFITWITHINDEX nargs=1 computestartnode=6
.calc calc=82 name=PX_LI_DEATHBENEFITPLUSPROFITWITHINDEX nargs=1 computestartnode=6
.calc calc=83 name=PX_LI_PROFITYEARWITHINDEX nargs=1 computestartnode=6
.calc calc=84 name=PX_LI_REDUCEDSUMWITHINDEX nargs=1 computestartnode=6
.calc calc=85 name=PX_LI_RIDERPRODUCT nargs=1 computestartnode=6
.calc calc=86 name=PX_LI_RIDERSUM nargs=1 computestartnode=6
.calc calc=87 name=PX_LI_RIDERPREMIUMYEAR nargs=1 computestartnode=6
.calc calc=88 name=PX_LI_RIDERPREMIUMFREQ nargs=1 computestartnode=6
.calc calc=89 name=PX_LI_RIDERPREMIUMFREQBASE nargs=1 computestartnode=6
.calc calc=90 name=PX_LI_INDEXATION_PERC nargs=0 computestartnode=8
.calc calc=91 name=PX_LI_DURATION nargs=0 computestartnode=8
.calc calc=92 name=PX_LI_PAYMENTPERIOD nargs=0 computestartnode=8
.calc calc=93 name=PX_LI_AGEATBEGIN nargs=0 computestartnode=8
.calc calc=94 name=PX_LI_AGEATEND nargs=0 computestartnode=8
.calc calc=95 name=PX_LI_PREMIUMCONTRACTFREQFIRST nargs=0 computestartnode=8
.calc calc=96 name=PX_LI_PREMIUMCONTRACTYEARTAX nargs=0 computestartnode=8
.calc calc=97 name=PX_LI_MAINLAYERS nargs=0 computestartnode=8
.calc calc=98 name=PX_LI_TARIFFBEGINLAYER nargs=1 computestartnode=8
.calc calc=99 name=PX_LI_DURATIONLAYER nargs=1 computestartnode=8
.calc calc=100 name=P_LI_TOTALSUMLAYER_UNROUNDED nargs=2 computestartnode=8
.calc calc=101 name=P_LI_SUMLAYER_UNROUNDED nargs=2 computestartnode=8
.calc calc=102 name=P_LI_TOTALSUMLAYER nargs=2 computestartnode=8
.calc calc=103 name=P_LI_SUMLAYER nargs=2 computestartnode=8
.calc calc=104 name=PX_LI_SUMLAYER nargs=1 computestartnode=8
.calc calc=105 name=PX_LI_TOTALSUMLAYER nargs=1 computestartnode=8
.calc calc=106 name=PX_LI_PREMIUMOIP_UNROUNDED nargs=0 computestartnode=8
.calc calc=107 name=PX_LI_PREMIUMOIPLAYER_UNROUNDED nargs=1 computestartnode=8
.calc calc=108 name=PX_LI_PREMIUMOIPLAYER nargs=1 computestartnode=8
.calc calc=109 name=PX_LI_PREMIUMFREQBASELAYER nargs=1 computestartnode=8
.calc calc=110 name=PX_LI_PREMIUMFREQLAYER nargs=1 computestartnode=8
.calc calc=111 name=P_LI_PREMIUMFREQ nargs=1 computestartnode=8
.calc calc=112 name=P_LI_PREMIUMFREQLAYER nargs=2 computestartnode=8
.calc calc=113 name=PX_LI_PREMIUMYEAR nargs=0 computestartnode=8
.calc calc=114 name=PX_LI_PREMIUMYEARLAYER nargs=1 computestartnode=8
.calc calc=115 name=PX_LI_PREMIUMYEARLAYER_ nargs=2 computestartnode=8
.calc calc=116 name=PX_LI_PREMIUMYEARALLLAYERS nargs=1 computestartnode=8
.calc calc=117 name=PX_LI_PREMIUMPOLICYFEE nargs=0 computestartnode=8
.calc calc=118 name=PX_LI_PREMIUMYEARTAX nargs=0 computestartnode=8
.calc calc=119 name=PX_LI_PROFIT nargs=0 computestartnode=8
.calc calc=120 name=PX_LI_SUMPLUSPROFIT nargs=0 computestartnode=8
.calc calc=121 name=PX_LI_RIDERPREMIUMYEARALLLAYERS nargs=1 computestartnode=8
.calc calc=122 name=PX_LI_TOTALRIDERPREMIUMYEARLAYER nargs=1 computestartnode=8
.calc calc=123 name=PX_LI_YEARS nargs=0 computestartnode=8
.calc calc=124 name=PX_LI_RIDERSUM_ nargs=2 computestartnode=8
.calc calc=125 name=P_LI_SUMRIDERPREMIUM nargs=1 computestartnode=8
.calc calc=126 name=P_LI_SUMRIDERPREMIUM_ROUNDED nargs=1 computestartnode=8
.calc calc=127 name=PX_LI_RIDERPREMIUMYEARTAXTOTAL nargs=0 computestartnode=8
.calc calc=128 name=PX_LI_RIDERPREMIUMFREQTOTAL_UNROUNDED nargs=0 computestartnode=8
.calc calc=129 name=P_LI_RIDERPREMIUMYEARUNROUNDED nargs=1 computestartnode=8
.calc calc=130 name=P_LI_RIDERPREMIUMYEARUNROUNDED_ nargs=2 computestartnode=8
.calc calc=131 name=PX_LI_RIDERPREMIUMFREQUNROUNDED nargs=1 computestartnode=8
.calc calc=132 name=P_LI_RIDERPREMIUMFREQUNROUNDED nargs=2 computestartnode=8
.calc calc=133 name=P_LI_RIDERPREMIUMFREQ nargs=2 computestartnode=8
.calc calc=134 name=PX_LI_RIDERPREMIUMFREQ_ nargs=2 computestartnode=8
.calc calc=135 name=PX_LI_RIDERPREMIUMYEAR_ nargs=2 computestartnode=8
.calc calc=136 name=PX_LI_RIDERPREMIUMFREQBASE_ nargs=2 computestartnode=8
.calc calc=137 name=PX_LI_RIDERPREMIUMYEARTAX nargs=1 computestartnode=8
.calc calc=138 name=PX_LI_RIDERPREMIUMYEARTAX_ nargs=2 computestartnode=8
.calc calc=139 name=PX_LI_RIDERDATA_LEN nargs=1 computestartnode=8
.calc calc=140 name=PX_LI_RIDERDATA_KEY nargs=2 computestartnode=8
.calc calc=141 name=PX_LI_RIDERDATA_VALUE nargs=2 computestartnode=8
.calc calc=142 name=PX_LI_RIDERDATA_VECX nargs=1 computestartnode=8
.calc calc=143 name=P_LI_SUM nargs=0 computestartnode=8
.calc calc=144 name=P_LI_SUMFROMPREMIUMANAL nargs=0 computestartnode=8
.calc calc=145 name=P_LI_SUMFROMPREMIUMITER nargs=0 computestartnode=8
.calc calc=146 name=P_LI_SUMFROMPREMIUMITER1 nargs=0 computestartnode=8
.calc calc=147 name=P_LI_SUMFROMPREMIUMITERSELECT nargs=4 computestartnode=8
.calc calc=148 name=P_LI_SUMFROMPREMIUMITERSELECT1 nargs=7 computestartnode=8
.calc calc=149 name=P_LI_SOLVE_SEC_PREM nargs=5 computestartnode=8
.calc calc=150 name=P_LI_SOLVE_SEC0_PREM nargs=8 computestartnode=8
.calc calc=151 name=P_LI_SOLVE_CALLF_PREM nargs=1 computestartnode=8
.calc calc=152 name=P_LI_SOLVE_CALLF_ROUNDED_PREM nargs=1 computestartnode=8
.calc calc=153 name=P_LI_SUMFROMSUMWITHINDEXITER nargs=0 computestartnode=8
.calc calc=154 name=P_LI_SOLVE_SEC_SUMWITHINDEX nargs=5 computestartnode=8
.calc calc=155 name=P_LI_SOLVE_SEC0_SUMWITHINDEX nargs=8 computestartnode=8
.calc calc=156 name=P_LI_SOLVE_CALLF_SUMWITHINDEX nargs=1 computestartnode=8
.calc calc=157 name=P_LI_SUMFROMSUMPROFITWITHINDEXITER nargs=0 computestartnode=8
.calc calc=158 name=P_LI_SOLVE_SEC_SUMPROFITWITHINDEX nargs=5 computestartnode=8
.calc calc=159 name=P_LI_SOLVE_SEC0_SUMPROFITWITHINDEX nargs=8 computestartnode=8
.calc calc=160 name=P_LI_SOLVE_CALLF_SUMPROFITWITHINDEX nargs=1 computestartnode=8
.calc calc=161 name=P_LI_PROFITBASE_ nargs=2 computestartnode=8
.calc calc=162 name=P_LI_PROFITNEW_ nargs=2 computestartnode=8
.calc calc=163 name=P_LI_PROFITSUM_ nargs=2 computestartnode=8
.calc calc=164 name=P_LI_PROFIT_ nargs=1 computestartnode=8
.calc calc=165 name=P_LI_PROFITRATE_ nargs=2 computestartnode=8
.calc calc=166 name=P_LI_PROFITINTERESTRATE_ nargs=1 computestartnode=8
.calc calc=167 name=P_LI_RESERVENET_ nargs=2 computestartnode=8
.calc calc=168 name=P_LI_RESERVEZILLMER_ nargs=2 computestartnode=8
.calc calc=169 name=P_LI_RESERVEGAMMA_ nargs=2 computestartnode=8
.calc calc=170 name=P_LI_RESERVETECHNICAL_ nargs=2 computestartnode=8
.calc calc=171 name=P_LI_SURRENDERVALUE_ nargs=2 computestartnode=8
.calc calc=172 name=P_LI_ACCRUALFACT_ nargs=2 computestartnode=8
.calc calc=173 name=P_LI_PREMIUMOIP_ nargs=3 computestartnode=8
.calc calc=174 name=P_LI_GROSSPREMIUM_ nargs=1 computestartnode=8
.calc calc=175 name=P_LI_NETPREMIUM_ nargs=1 computestartnode=8
.calc calc=176 name=P_LI_PREMIUMALPHA_ nargs=1 computestartnode=8
.calc calc=177 name=P_LI_PREMIUMBETA_ nargs=1 computestartnode=8
.calc calc=178 name=P_LI_PREMIUMGAMMA_ nargs=1 computestartnode=8
.calc calc=179 name=P_LI_INTERESTRATE_ nargs=1 computestartnode=8
.calc calc=180 name=P_LI_ALPHA_ nargs=2 computestartnode=8
.calc calc=181 name=P_LI_ALPHAZILLMER_ nargs=2 computestartnode=8
.calc calc=182 name=P_LI_BETA_ nargs=1 computestartnode=8
.calc calc=183 name=P_LI_GAMMA_ nargs=1 computestartnode=8
.calc calc=184 name=P_LI_GAMMADASH_ nargs=1 computestartnode=8
.calc calc=185 name=P_LI_DELTA_ nargs=1 computestartnode=8
.calc calc=186 name=P_LI_IFL_ nargs=1 computestartnode=8
.calc calc=187 name=P_LI_SL_ nargs=1 computestartnode=8
.calc calc=188 name=P_LI_GFC_ nargs=1 computestartnode=8
.calc calc=189 name=P_LI_TAXFACT_ nargs=1 computestartnode=8
.calc calc=190 name=P_LI_QX_ nargs=2 computestartnode=8
.calc calc=191 name=P_LI_DX_ nargs=2 computestartnode=8
.calc calc=192 name=P_LI_LX_ nargs=2 computestartnode=8
.calc calc=193 name=P_LI_NX_ nargs=2 computestartnode=8
.calc calc=194 name=P_LI_MX_ nargs=2 computestartnode=8
.calc calc=195 name=P_LI_ZILLMERPREMIUM_ nargs=2 computestartnode=8
.calc calc=196 name=P_LI_NAX_ nargs=2 computestartnode=8
.calc calc=197 name=P_LI_NEX_ nargs=2 computestartnode=8
.calc calc=198 name=P_LI_AXN_ nargs=2 computestartnode=8
.calc calc=199 name=P_LI_AEXK_ nargs=2 computestartnode=8
.calc calc=200 name=P_LI_AEXN_ nargs=2 computestartnode=8
.calc calc=201 name=P_LI_AEXN_K_ nargs=2 computestartnode=8
.calc calc=202 name=P_LI_SUMALPHA_ nargs=1 computestartnode=8
.calc calc=203 name=P_LI_AEX3_2_ nargs=1 computestartnode=8
.calc calc=204 name=P_LI_AEX5_5_ nargs=1 computestartnode=8
.calc calc=205 name=P_LI_NEX_ALPHA_ nargs=2 computestartnode=8
.calc calc=206 name=P_LI_AGE_ nargs=1 computestartnode=8
.calc calc=207 name=P_LI_IRATE_ nargs=1 computestartnode=8
.calc calc=208 name=P_LI_RISK_ nargs=1 computestartnode=8
.calc calc=209 name=P_LI_GEN_ nargs=1 computestartnode=8
.calc calc=210 name=P_LI_AGEMAINLAYER nargs=0 computestartnode=8
.calc calc=211 name=PX_LI_RIDERS nargs=0 computestartnode=8
.calc calc=212 name=PX_LI_RIDERCODE nargs=1 computestartnode=8
.calc calc=213 name=PX_LI_RIDERSPARTE nargs=1 computestartnode=8
.calc calc=214 name=P_LI_RIDERDATA_LEN nargs=2 computestartnode=8
.calc calc=215 name=P_LI_RIDERDATA_KEY nargs=3 computestartnode=8
.calc calc=216 name=P_LI_RIDERDATA_VALUE nargs=3 computestartnode=8
.calc calc=217 name=P_LI_RIDERDATA_VEC nargs=2 computestartnode=8
.calc calc=218 name=P_LI_RIDERDATA_VEC1 nargs=2 computestartnode=8
.calc calc=219 name=P_LI_RIDERPREMIUMYEAR nargs=2 computestartnode=8
.calc calc=220 name=P_LI_RIDERPREMIUMYEARBASE nargs=2 computestartnode=8
.calc calc=221 name=P_LI_RIDERSUM nargs=2 computestartnode=8
.calc calc=222 name=P_LI_RIDERDATA nargs=2 computestartnode=8
.calc calc=223 name=P_LI_RIDERPREMIUMTAXFACT nargs=2 computestartnode=8
.calc calc=224 name=P_LI_CHECKRIDER nargs=2 computestartnode=8
.nodes size=24
.node node=0 id=maintree ;maintree
.calctotal node=0 calc_rangestart=0 calc_rangeend=224
.edges from=0 size=1
.edge ind=0 from=0 to=1
.node node=1 id=URO_LI_ENDOW ;URO_LI_ENDOW
.calctotal node=1 calc_rangestart=0 calc_rangeend=224
.edges from=1 size=1
.edge ind=0 from=1 to=2
.node node=2 id=product ;URO_LI_ENDOW.product
.calctotal node=2 calc_rangestart=0 calc_rangeend=224
.edges from=2 size=1
.edge ind=0 from=2 to=3
.node node=3 id=root name="" ;URO_LI_ENDOW.product.root
.nodecalc node=3 calc=0 formula=2
.nodecalc node=3 calc=1 formula=3
.calcdef node=3 calc_rangestart=0 calc_rangeend=1
.calctotal node=3 calc_rangestart=0 calc_rangeend=224
.edges from=3 size=1
.edge ind=0 from=3 to=4
.node node=4 id=Endowment_RO name="Endowment RO" ;URO_LI_ENDOW.product.root.Endowment_RO
.nodecalc node=4 calc=2 formula=4
.calcdef node=4 calc=2
.calctotal node=4 calc_rangestart=2 calc_rangeend=224
.edges from=4 size=1
.edge ind=0 from=4 to=5
.node node=5 id=Checks_etc name="Checks etc" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc
.nodecalc node=5 calc=3 formula=5
.nodecalc node=5 calc=4 formula=6
.nodecalc node=5 calc=5 formula=7
.nodecalc node=5 calc=6 formula=8
.nodecalc node=5 calc=7 formula=9
.nodecalc node=5 calc=8 formula=10
.nodecalc node=5 calc=9 formula=11
.nodecalc node=5 calc=10 formula=12
.nodecalc node=5 calc=11 formula=13
.nodecalc node=5 calc=12 formula=14
.nodecalc node=5 calc=13 formula=15
.nodecalc node=5 calc=14 formula=16
.nodecalc node=5 calc=15 formula=17
.nodecalc node=5 calc=16 formula=18
.nodecalc node=5 calc=17 formula=19
.nodecalc node=5 calc=18 formula=20
.nodecalc node=5 calc=19 formula=21
.nodecalc node=5 calc=20 formula=22
.nodecalc node=5 calc=21 formula=23
.nodecalc node=5 calc=22 formula=24
.nodecalc node=5 calc=23 formula=25
.nodecalc node=5 calc=24 formula=26
.nodecalc node=5 calc=25 formula=27
.nodecalc node=5 calc=26 formula=28
.nodecalc node=5 calc=27 formula=29
.nodecalc node=5 calc=28 formula=30
.nodecalc node=5 calc=29 formula=31
.nodecalc node=5 calc=30 formula=32
.nodecalc node=5 calc=31 formula=33
.nodecalc node=5 calc=32 formula=34
.nodecalc node=5 calc=33 formula=35
.nodecalc node=5 calc=34 formula=36
.nodecalc node=5 calc=35 formula=37
.nodecalc node=5 calc=36 formula=38
.nodecalc node=5 calc=37 formula=39
.nodecalc node=5 calc=38 formula=40
.nodecalc node=5 calc=39 formula=41
.nodecalc node=5 calc=40 formula=42
.nodecalc node=5 calc=41 formula=43
.nodecalc node=5 calc=42 formula=44
.nodecalc node=5 calc=43 formula=45
.nodecalc node=5 calc=44 formula=46
.nodecalc node=5 calc=45 formula=47
.nodecalc node=5 calc=46 formula=48
.nodecalc node=5 calc=47 formula=49
.nodecalc node=5 calc=48 formula=50
.nodecalc node=5 calc=49 formula=51
.nodecalc node=5 calc=50 formula=52
.nodecalc node=5 calc=51 formula=53
.nodecalc node=5 calc=52 formula=54
.calcdef node=5 calc_rangestart=3 calc_rangeend=52
.calctotal node=5 calc_rangestart=3 calc_rangeend=224
.edges from=5 size=1
.edge ind=0 from=5 to=6
.node node=6 id=Indexation_results name="Indexation results" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results
.nodecalc node=6 calc=53 formula=55
.nodecalc node=6 calc=54 formula=56
.nodecalc node=6 calc=55 formula=57
.nodecalc node=6 calc=56 formula=58
.nodecalc node=6 calc=57 formula=59
.nodecalc node=6 calc=58 formula=60
.nodecalc node=6 calc=59 formula=61
.calcdef node=6 calc_rangestart=53 calc_rangeend=59
.calctotal node=6 calc_rangestart=4 calc_rangeend=224
.edges from=6 size=2
.edge ind=0 from=6 to=7
.edge ind=1 from=6 to=8
.node node=7 id=Initialization ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Initialization
.nodecalc node=7 calc=60 formula=62
.nodecalc node=7 calc=61 formula=63
.nodecalc node=7 calc=62 formula=64
.nodecalc node=7 calc=63 formula=65
.nodecalc node=7 calc=64 formula=66
.nodecalc node=7 calc=65 formula=67
.nodecalc node=7 calc=66 formula=68
.nodecalc node=7 calc=67 formula=69
.nodecalc node=7 calc=68 formula=70
.nodecalc node=7 calc=69 formula=71
.nodecalc node=7 calc=70 formula=72
.nodecalc node=7 calc=71 formula=73
.nodecalc node=7 calc=72 formula=74
.nodecalc node=7 calc=73 formula=75
.nodecalc node=7 calc=74 formula=76
.nodecalc node=7 calc=75 formula=77
.nodecalc node=7 calc=76 formula=78
.nodecalc node=7 calc=77 formula=79
.nodecalc node=7 calc=78 formula=80
.nodecalc node=7 calc=79 formula=81
.nodecalc node=7 calc=80 formula=82
.nodecalc node=7 calc=81 formula=83
.nodecalc node=7 calc=82 formula=84
.nodecalc node=7 calc=83 formula=85
.nodecalc node=7 calc=84 formula=86
.nodecalc node=7 calc=85 formula=87
.nodecalc node=7 calc=86 formula=88
.nodecalc node=7 calc=87 formula=89
.nodecalc node=7 calc=88 formula=90
.nodecalc node=7 calc=89 formula=91
.calcdef node=7 calc_rangestart=60 calc_rangeend=89
.calctotal node=7 calc_rangestart=60 calc_rangeend=89
.edges from=7 size=0
.node node=8 id=Main_results name="Main results" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results
.nodeformulas node=8 inclusion=92
.nodecalc node=8 calc=60 formula=93
.nodecalc node=8 calc=90 formula=94
.nodecalc node=8 calc=91 formula=95
.nodecalc node=8 calc=92 formula=96
.nodecalc node=8 calc=93 formula=97
.nodecalc node=8 calc=94 formula=98
.nodecalc node=8 calc=63 formula=99
.nodecalc node=8 calc=95 formula=100
.nodecalc node=8 calc=64 formula=101
.nodecalc node=8 calc=96 formula=102
.nodecalc node=8 calc=61 formula=103
.nodecalc node=8 calc=97 formula=104
.nodecalc node=8 calc=98 formula=105
.nodecalc node=8 calc=99 formula=106
.nodecalc node=8 calc=100 formula=107
.nodecalc node=8 calc=101 formula=108
.nodecalc node=8 calc=102 formula=109
.nodecalc node=8 calc=103 formula=110
.nodecalc node=8 calc=104 formula=111
.nodecalc node=8 calc=105 formula=112
.nodecalc node=8 calc=106 formula=113
.nodecalc node=8 calc=107 formula=114
.nodecalc node=8 calc=62 formula=115
.nodecalc node=8 calc=108 formula=116
.nodecalc node=8 calc=66 formula=117
.nodecalc node=8 calc=109 formula=118
.nodecalc node=8 calc=65 formula=119
.nodecalc node=8 calc=110 formula=120
.nodecalc node=8 calc=111 formula=121
.nodecalc node=8 calc=112 formula=122
.nodecalc node=8 calc=113 formula=123
.nodecalc node=8 calc=114 formula=124
.nodecalc node=8 calc=115 formula=125
.nodecalc node=8 calc=116 formula=126
.nodecalc node=8 calc=117 formula=127
.nodecalc node=8 calc=118 formula=128
.nodecalc node=8 calc=119 formula=129
.nodecalc node=8 calc=120 formula=130
.nodecalc node=8 calc=121 formula=131
.nodecalc node=8 calc=122 formula=132
.nodecalc node=8 calc=123 formula=133
.nodecalc node=8 calc=69 formula=134
.nodecalc node=8 calc=70 formula=135
.nodecalc node=8 calc=71 formula=136
.nodecalc node=8 calc=72 formula=137
.nodecalc node=8 calc=74 formula=138
.nodecalc node=8 calc=75 formula=139
.nodecalc node=8 calc=76 formula=140
.nodecalc node=8 calc=73 formula=141
.nodecalc node=8 calc=77 formula=142
.nodecalc node=8 calc=78 formula=143
.nodecalc node=8 calc=79 formula=144
.nodecalc node=8 calc=81 formula=145
.nodecalc node=8 calc=82 formula=146
.nodecalc node=8 calc=83 formula=147
.nodecalc node=8 calc=80 formula=148
.nodecalc node=8 calc=84 formula=149
.nodecalc node=8 calc=86 formula=150
.nodecalc node=8 calc=124 formula=151
.nodecalc node=8 calc=125 formula=152
.nodecalc node=8 calc=126 formula=153
.nodecalc node=8 calc=68 formula=154
.nodecalc node=8 calc=127 formula=155
.nodecalc node=8 calc=128 formula=156
.nodecalc node=8 calc=67 formula=157
.nodecalc node=8 calc=129 formula=158
.nodecalc node=8 calc=130 formula=159
.nodecalc node=8 calc=131 formula=160
.nodecalc node=8 calc=132 formula=161
.nodecalc node=8 calc=133 formula=162
.nodecalc node=8 calc=88 formula=163
.nodecalc node=8 calc=134 formula=164
.nodecalc node=8 calc=87 formula=165
.nodecalc node=8 calc=135 formula=166
.nodecalc node=8 calc=89 formula=167
.nodecalc node=8 calc=136 formula=168
.nodecalc node=8 calc=137 formula=169
.nodecalc node=8 calc=138 formula=170
.nodecalc node=8 calc=139 formula=171
.nodecalc node=8 calc=140 formula=172
.nodecalc node=8 calc=141 formula=173
.nodecalc node=8 calc=142 formula=174
.nodecalc node=8 calc=143 formula=175
.nodecalc node=8 calc=144 formula=176
.nodecalc node=8 calc=145 formula=177
.nodecalc node=8 calc=146 formula=178
.nodecalc node=8 calc=147 formula=179
.nodecalc node=8 calc=148 formula=180
.nodecalc node=8 calc=149 formula=181
.nodecalc node=8 calc=150 formula=182
.nodecalc node=8 calc=151 formula=183
.nodecalc node=8 calc=152 formula=184
.nodecalc node=8 calc=153 formula=185
.nodecalc node=8 calc=154 formula=186
.nodecalc node=8 calc=155 formula=187
.nodecalc node=8 calc=156 formula=188
.nodecalc node=8 calc=157 formula=189
.nodecalc node=8 calc=158 formula=190
.nodecalc node=8 calc=159 formula=191
.nodecalc node=8 calc=160 formula=192
.calcdef node=8 calc_rangestart=60 calc_rangeend=84
.calcdef node=8 calc_rangestart=86 calc_rangeend=160
.calctotal node=8 calc_rangestart=4 calc_rangeend=52
.calctotal node=8 calc_rangestart=60 calc_rangeend=224
.edges from=8 size=2
.edge ind=0 from=8 to=9
.edge ind=1 from=8 to=14
.node node=9 id=Main_Tariff_Layers name="Main Tariff Layers" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Main_Tariff_Layers
.nodeformulas node=9 timesformula=193 timesid=0
.calctotal node=9 calc_rangestart=4 calc_rangeend=52
.calctotal node=9 calc_rangestart=161 calc_rangeend=210
.edges from=9 size=1
.edge ind=0 from=9 to=10
.node node=10 id=Profit_Calculation name="Profit Calculation" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Main_Tariff_Layers.Profit_Calculation
.nodecalc node=10 calc=47 formula=194
.nodecalc node=10 calc=48 formula=195
.nodecalc node=10 calc=49 formula=196
.nodecalc node=10 calc=50 formula=197
.nodecalc node=10 calc=51 formula=198
.nodecalc node=10 calc=52 formula=199
.nodecalc node=10 calc=161 formula=200
.nodecalc node=10 calc=162 formula=201
.nodecalc node=10 calc=163 formula=202
.nodecalc node=10 calc=164 formula=203
.nodecalc node=10 calc=165 formula=204
.nodecalc node=10 calc=166 formula=205
.calcdef node=10 calc_rangestart=47 calc_rangeend=52
.calcdef node=10 calc_rangestart=161 calc_rangeend=166
.calctotal node=10 calc_rangestart=4 calc_rangeend=52
.calctotal node=10 calc_rangestart=161 calc_rangeend=210
.edges from=10 size=1
.edge ind=0 from=10 to=11
.node node=11 id=Surrender_Benefit name="Surrender Benefit" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Main_Tariff_Layers.Profit_Calculation.Surrender_Benefit
.nodecalc node=11 calc=41 formula=206
.nodecalc node=11 calc=42 formula=207
.nodecalc node=11 calc=43 formula=208
.nodecalc node=11 calc=44 formula=209
.nodecalc node=11 calc=45 formula=210
.nodecalc node=11 calc=46 formula=211
.nodecalc node=11 calc=167 formula=212
.nodecalc node=11 calc=168 formula=213
.nodecalc node=11 calc=169 formula=214
.nodecalc node=11 calc=170 formula=215
.nodecalc node=11 calc=171 formula=216
.nodecalc node=11 calc=172 formula=217
.calcdef node=11 calc_rangestart=41 calc_rangeend=46
.calcdef node=11 calc_rangestart=167 calc_rangeend=172
.calctotal node=11 calc_rangestart=4 calc_rangeend=46
.calctotal node=11 calc_rangestart=167 calc_rangeend=210
.edges from=11 size=1
.edge ind=0 from=11 to=12
.node node=12 id=Premium_calculation name="Premium calculation" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Main_Tariff_Layers.Profit_Calculation.Surrender_Benefit.Premium_calculation
.nodecalc node=12 calc=35 formula=218
.nodecalc node=12 calc=36 formula=219
.nodecalc node=12 calc=37 formula=220
.nodecalc node=12 calc=38 formula=221
.nodecalc node=12 calc=39 formula=222
.nodecalc node=12 calc=40 formula=223
.nodecalc node=12 calc=173 formula=224
.nodecalc node=12 calc=174 formula=225
.nodecalc node=12 calc=175 formula=226
.nodecalc node=12 calc=176 formula=227
.nodecalc node=12 calc=177 formula=228
.nodecalc node=12 calc=178 formula=229
.nodecalc node=12 calc=8 formula=230
.nodecalc node=12 calc=9 formula=231
.nodecalc node=12 calc=10 formula=232
.nodecalc node=12 calc=11 formula=233
.nodecalc node=12 calc=12 formula=234
.nodecalc node=12 calc=13 formula=235
.nodecalc node=12 calc=14 formula=236
.nodecalc node=12 calc=15 formula=237
.nodecalc node=12 calc=16 formula=238
.nodecalc node=12 calc=17 formula=239
.nodecalc node=12 calc=18 formula=240
.nodecalc node=12 calc=19 formula=241
.nodecalc node=12 calc=20 formula=242
.nodecalc node=12 calc=21 formula=243
.nodecalc node=12 calc=22 formula=244
.nodecalc node=12 calc=23 formula=245
.nodecalc node=12 calc=24 formula=246
.nodecalc node=12 calc=25 formula=247
.nodecalc node=12 calc=26 formula=248
.nodecalc node=12 calc=27 formula=249
.nodecalc node=12 calc=28 formula=250
.nodecalc node=12 calc=29 formula=251
.nodecalc node=12 calc=30 formula=252
.nodecalc node=12 calc=31 formula=253
.nodecalc node=12 calc=32 formula=254
.nodecalc node=12 calc=33 formula=255
.nodecalc node=12 calc=34 formula=256
.nodecalc node=12 calc=179 formula=257
.nodecalc node=12 calc=180 formula=258
.nodecalc node=12 calc=181 formula=259
.nodecalc node=12 calc=182 formula=260
.nodecalc node=12 calc=183 formula=261
.nodecalc node=12 calc=184 formula=262
.nodecalc node=12 calc=185 formula=263
.nodecalc node=12 calc=186 formula=264
.nodecalc node=12 calc=187 formula=265
.nodecalc node=12 calc=188 formula=266
.nodecalc node=12 calc=189 formula=267
.nodecalc node=12 calc=190 formula=268
.nodecalc node=12 calc=191 formula=269
.nodecalc node=12 calc=192 formula=270
.nodecalc node=12 calc=193 formula=271
.nodecalc node=12 calc=194 formula=272
.nodecalc node=12 calc=195 formula=273
.nodecalc node=12 calc=196 formula=274
.nodecalc node=12 calc=197 formula=275
.nodecalc node=12 calc=198 formula=276
.nodecalc node=12 calc=199 formula=277
.nodecalc node=12 calc=200 formula=278
.nodecalc node=12 calc=201 formula=279
.nodecalc node=12 calc=202 formula=280
.nodecalc node=12 calc=203 formula=281
.nodecalc node=12 calc=204 formula=282
.nodecalc node=12 calc=205 formula=283
.calcdef node=12 calc_rangestart=8 calc_rangeend=40
.calcdef node=12 calc_rangestart=173 calc_rangeend=205
.calctotal node=12 calc_rangestart=4 calc_rangeend=40
.calctotal node=12 calc_rangestart=173 calc_rangeend=210
.edges from=12 size=1
.edge ind=0 from=12 to=13
.node node=13 id=Age_etc name="Age etc" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Main_Tariff_Layers.Profit_Calculation.Surrender_Benefit.Premium_calculation.Age_etc
.nodecalc node=13 calc=4 formula=284
.nodecalc node=13 calc=5 formula=285
.nodecalc node=13 calc=6 formula=286
.nodecalc node=13 calc=7 formula=287
.nodecalc node=13 calc=206 formula=288
.nodecalc node=13 calc=207 formula=289
.nodecalc node=13 calc=208 formula=290
.nodecalc node=13 calc=209 formula=291
.nodecalc node=13 calc=210 formula=292
.calcdef node=13 calc_rangestart=4 calc_rangeend=7
.calcdef node=13 calc_rangestart=206 calc_rangeend=210
.calctotal node=13 calc_rangestart=4 calc_rangeend=7
.calctotal node=13 calc_rangestart=206 calc_rangeend=210
.edges from=13 size=0
.node node=14 id=Riders ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders
.nodecalc node=14 calc=211 formula=293
.nodecalc node=14 calc=85 formula=294
.nodecalc node=14 calc=212 formula=295
.nodecalc node=14 calc=213 formula=296
.nodecalc node=14 calc=214 formula=297
.nodecalc node=14 calc=215 formula=298
.nodecalc node=14 calc=216 formula=299
.nodecalc node=14 calc=217 formula=300
.nodecalc node=14 calc=218 formula=301
.calcdef node=14 calc=85
.calcdef node=14 calc_rangestart=211 calc_rangeend=218
.calctotal node=14 calc=85
.calctotal node=14 calc_rangestart=211 calc_rangeend=224
.edges from=14 size=2
.edge ind=0 from=14 to=15
.edge ind=1 from=14 to=16
.node node=15 id=Init ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Init
.nodecalc node=15 calc=219 formula=302
.nodecalc node=15 calc=220 formula=303
.nodecalc node=15 calc=221 formula=304
.nodecalc node=15 calc=222 formula=305
.nodecalc node=15 calc=223 formula=306
.nodecalc node=15 calc=224 formula=307
.calcdef node=15 calc_rangestart=219 calc_rangeend=224
.calctotal node=15 calc_rangestart=219 calc_rangeend=224
.edges from=15 size=0
.node node=16 id=Rider ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider
.nodeformulas node=16 timesformula=308 timesid=1
.calctotal node=16 calc_rangestart=219 calc_rangeend=224
.edges from=16 size=3
.edge ind=0 from=16 to=17
.edge ind=1 from=16 to=20
.edge ind=2 from=16 to=22
.node node=17 id=Accidental_death name="Accidental death" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider.Accidental_death
.nodeformulas node=17 inclusion=309
.nodecalc node=17 calc=222 formula=310
.calcdef node=17 calc=222
.calctotal node=17 calc_rangestart=219 calc_rangeend=223
.edges from=17 size=1
.edge ind=0 from=17 to=18
.node node=18 id=rider_calculation name="rider calculation" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider.Accidental_death.rider_calculation
.calctotal node=18 calc_rangestart=219 calc_rangeend=221
.calctotal node=18 calc=223
.edges from=18 size=1
.link ind=0 from=18 to=19
.node node=19 id=rider_calculation name="rider calculation" ;URO_LI_ENDOW.component.root.rider_calculation
.nodecalc node=19 calc=219 formula=311
.nodecalc node=19 calc=220 formula=312
.nodecalc node=19 calc=221 formula=313
.nodecalc node=19 calc=223 formula=314
.calcdef node=19 calc_rangestart=219 calc_rangeend=221
.calcdef node=19 calc=223
.calctotal node=19 calc_rangestart=219 calc_rangeend=221
.calctotal node=19 calc=223
.edges from=19 size=0
.node node=20 id=Accidental_permanent_disability name="Accidental permanent disability" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider.Accidental_permanent_disability
.nodeformulas node=20 inclusion=315
.nodecalc node=20 calc=222 formula=316
.calcdef node=20 calc=222
.calctotal node=20 calc_rangestart=219 calc_rangeend=223
.edges from=20 size=1
.edge ind=0 from=20 to=21
.node node=21 id=rider_calculation name="rider calculation" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider.Accidental_permanent_disability.rider_calculation
.calctotal node=21 calc_rangestart=219 calc_rangeend=221
.calctotal node=21 calc=223
.edges from=21 size=1
.link ind=0 from=21 to=19
.node node=22 id=Hospital_benefit name="Hospital benefit" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider.Hospital_benefit
.nodeformulas node=22 inclusion=317
.nodecalc node=22 calc=222 formula=318
.nodecalc node=22 calc=224 formula=319
.calcdef node=22 calc=222
.calcdef node=22 calc=224
.calctotal node=22 calc_rangestart=219 calc_rangeend=224
.edges from=22 size=1
.edge ind=0 from=22 to=23
.node node=23 id=rider_calculation name="rider calculation" ;URO_LI_ENDOW.product.root.Endowment_RO.Checks_etc.Indexation_results.Main_results.Riders.Rider.Hospital_benefit.rider_calculation
.calctotal node=23 calc_rangestart=219 calc_rangeend=221
.calctotal node=23 calc=223
.edges from=23 size=1
.link ind=0 from=23 to=19
.tables size=29
.table table=0 name=T_LI_CONTEXT rows=1 cols=2 shuffled=false directaccess=false
.tablecol table=0 col=0 name="KURZTEXT" numeric=false numericsuper=false numericunique=false
.tablecol table=0 col=1 name="LANGTEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=0 ind=0 row=0 col=0 value="uppro"
.tablevalue table=0 ind=1 row=0 col=1 value="(uppro\n;************** MAIN PRODUCT ******************\n;====== INPUT ======\niA_LI_Check_YN\niA_LI_CurrentDate\n;check property to ask for: PX_LI_Check\nSA_LI_Language\nSA_LI_PaymentFrequency\nSA_LI_Currency\nSA_LI_Channel\n;insured person\nSA_LI_Sex\niA_LI_DateOfBirth\niA_LI_Examination_YN\niA_LI_AddRisk_Perc\n;begin and duration\niA_LI_TariffBegin\nSA_LI_DurationCode\niA_LI_DurationValue\nSA_LI_PaymentPeriodCode\nSA_LI_PaymentPeriodValue\nSA_LI_PaymentMethod\niA_LI_Indexation_Perc\n;calculation base\nSA_LI_BaseCode\niA_LI_BaseValue\n;======= OUTPUT ======\nrPX_LI_Version\nrPX_LI_Duration\nrPX_LI_PaymentPeriod\nrPX_LI_AgeAtBegin\nrPX_LI_AgeAtEnd\nrPX_LI_PremiumOIP\nrPX_LI_PremiumFreq\nrPX_LI_PremiumFreqBase\nrPX_LI_PremiumYear\nrPX_LI_Sum\nrPX_LI_Profit\nrPX_LI_SumPlusProfit\nrPX_LI_Years\nmPX_LI_Years\n  rPX_LI_YearCounter\n  rPX_LI_Year\n  rPX_LI_PremiumSummed\n  rPX_LI_SurrenderValue\n  rPX_LI_DeathBenefit\n  rPX_LI_DeathBenefitPlusProfit\n  rPX_LI_ProfitYear\n  rPX_LI_SurrenderValuePlusProfit\n  rPX_LI_ReducedSum\n.  \n;************** RIDERS *****************\niA_LI_Riders\nmA_LI_Riders\n\tsA_LI_RiderProduct\n\tsA_LI_RiderSumCode\n\tiA_LI_RiderSumValue\n\tiA_LI_RiderAddRiskProm\n\tiA_LI_RiderAddRiskPerc\n.\nrPX_LI_Riders\nmPX_LI_Riders\n\trPX_LI_RiderProduct\n\trPX_LI_RiderCode\n\trPX_LI_RiderSparte\n\trPX_LI_RiderPremium\n\trPX_LI_RiderPremiumBase\n\trPX_LI_RiderSum\n.\n;*********** SUM ***********\nrPX_LI_PremiumContractFreq\nrPX_LI_PremiumContractYear\nrPX_LI_PremiumContractFreqFirst\nrPX_LI_PremiumPolicyFee\n*\n"
.table table=1 name=T_LI_LANGUAGE rows=2 cols=2 shuffled=false directaccess=false
.tablecol table=1 col=0 name="CODE" numeric=false numericsuper=false numericunique=false
.tablecol table=1 col=1 name="TEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=1 ind=0 row=0 col=0 value="EN"
.tablevalue table=1 ind=1 row=0 col=1 value="English"
.tablevalue table=1 ind=2 row=1 col=0 value="RO"
.tablevalue table=1 ind=3 row=1 col=1 value="Romanian"
.table table=2 name=T_LI_CURRENCY rows=2 cols=3 shuffled=false directaccess=false
.tablecol table=2 col=0 name="KEY" numeric=false numericsuper=false numericunique=false
.tablecol table=2 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=2 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=2 ind=0 row=0 col=0 value="EUR"
.tablevalue table=2 ind=1 row=0 col=1 value="Euro"
.tablevalue table=2 ind=2 row=0 col=2 value="Euro"
.tablevalue table=2 ind=3 row=1 col=0 value="RON"
.tablevalue table=2 ind=4 row=1 col=1 value="Romanian leu"
.tablevalue table=2 ind=5 row=1 col=2 value="Romanian leu"
.table table=3 name=T_LI_SEX rows=2 cols=3 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=3 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=3 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=3 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=3 ind=0 row=0 col=0 value="1"
.tablevalue table=3 ind=1 row=0 col=1 value="male"
.tablevalue table=3 ind=2 row=0 col=2 value="masculin"
.tablevalue table=3 ind=3 row=1 col=0 value="2"
.tablevalue table=3 ind=4 row=1 col=1 value="female"
.tablevalue table=3 ind=5 row=1 col=2 value="feminin"
.table table=4 name=T_LI_DURATIONCODE rows=2 cols=3 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=4 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=4 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=4 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=4 ind=0 row=0 col=0 value="1"
.tablevalue table=4 ind=1 row=0 col=1 value="in years"
.tablevalue table=4 ind=2 row=0 col=2 value="in ani"
.tablevalue table=4 ind=3 row=1 col=0 value="2"
.tablevalue table=4 ind=4 row=1 col=1 value="age at end of policy"
.tablevalue table=4 ind=5 row=1 col=2 value="varsta la sfarsitul contractului"
.table table=5 name=T_LI_PAYMENTPERIODCODE rows=2 cols=3 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=5 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=5 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=5 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=5 ind=0 row=0 col=0 value="1"
.tablevalue table=5 ind=1 row=0 col=1 value="in years"
.tablevalue table=5 ind=2 row=0 col=2 value="in ani"
.tablevalue table=5 ind=3 row=1 col=0 value="2"
.tablevalue table=5 ind=4 row=1 col=1 value="age at end of policy"
.tablevalue table=5 ind=5 row=1 col=2 value="varsta la sfarsitul contractului"
.table table=6 name=T_LI_PAYMENTMETHOD rows=2 cols=3 shuffled=true directaccess=true directaccessoffset=2
.tablecol table=6 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=6 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=6 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=6 ind=0 row=0 col=0 value="2"
.tablevalue table=6 ind=1 row=0 col=1 value="Direct Debit"
.tablevalue table=6 ind=2 row=0 col=2 value="TODO: Direct Debit"
.tablevalue table=6 ind=3 row=1 col=0 value="3"
.tablevalue table=6 ind=4 row=1 col=1 value="Invoice"
.tablevalue table=6 ind=5 row=1 col=2 value="TODO: Invoice"
.tablerow table=6 row=0 oo=1
.tablerow table=6 row=1 oo=0
.table table=7 name=T_LI_BASECODE rows=4 cols=3 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=7 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=7 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=7 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=7 ind=0 row=0 col=0 value="1"
.tablevalue table=7 ind=1 row=0 col=1 value="sum insured"
.tablevalue table=7 ind=2 row=0 col=2 value="suma asigurata"
.tablevalue table=7 ind=3 row=1 col=0 value="2"
.tablevalue table=7 ind=4 row=1 col=1 value="premium"
.tablevalue table=7 ind=5 row=1 col=2 value="prima"
.tablevalue table=7 ind=6 row=2 col=0 value="3"
.tablevalue table=7 ind=7 row=2 col=1 value="sum insured plus profit (with indexation)"
.tablevalue table=7 ind=8 row=2 col=2 value="prima plus pfrofit"
.tablevalue table=7 ind=9 row=3 col=0 value="4"
.tablevalue table=7 ind=10 row=3 col=1 value="sum insured with indexation"
.tablevalue table=7 ind=11 row=3 col=2 value="todo: romanian text for sum insured with indexation"
.table table=8 name=T_LI_CHANNEL rows=3 cols=4 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=8 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=8 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=8 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablecol table=8 col=3 name="LONGCODE" numeric=false numericsuper=false numericunique=false
.tablevalue table=8 ind=0 row=0 col=0 value="1"
.tablevalue table=8 ind=1 row=0 col=1 value="Bank"
.tablevalue table=8 ind=2 row=0 col=2 value="Banca"
.tablevalue table=8 ind=3 row=0 col=3 value="bank"
.tablevalue table=8 ind=4 row=1 col=0 value="2"
.tablevalue table=8 ind=5 row=1 col=1 value="Agent"
.tablevalue table=8 ind=6 row=1 col=2 value="Agent"
.tablevalue table=8 ind=7 row=1 col=3 value="agent"
.tablevalue table=8 ind=8 row=2 col=0 value="3"
.tablevalue table=8 ind=9 row=2 col=1 value="Broker"
.tablevalue table=8 ind=10 row=2 col=2 value="Broker"
.tablevalue table=8 ind=11 row=2 col=3 value="broker"
.table table=9 name=T_LI_YN rows=2 cols=3 shuffled=false directaccess=true directaccessoffset=0
.tablecol table=9 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=9 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=9 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=9 ind=0 row=0 col=0 value="0"
.tablevalue table=9 ind=1 row=0 col=1 value="no"
.tablevalue table=9 ind=2 row=0 col=2 value="nu"
.tablevalue table=9 ind=3 row=1 col=0 value="1"
.tablevalue table=9 ind=4 row=1 col=1 value="yes"
.tablevalue table=9 ind=5 row=1 col=2 value="da"
.table table=10 name=T_LI_MAINSTATUS rows=3 cols=2 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=10 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=10 col=1 name="VALUE" numeric=false numericsuper=false numericunique=false
.tablevalue table=10 ind=0 row=0 col=0 value="1"
.tablevalue table=10 ind=1 row=0 col=1 value="new"
.tablevalue table=10 ind=2 row=1 col=0 value="2"
.tablevalue table=10 ind=3 row=1 col=1 value="active"
.tablevalue table=10 ind=4 row=2 col=0 value="3"
.tablevalue table=10 ind=5 row=2 col=1 value="indexation (in advance)"
.table table=11 name=T_LI_PRODUCT rows=2 cols=3 shuffled=false directaccess=false
.tablecol table=11 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=11 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=11 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=11 ind=0 row=0 col=0 value="6100"
.tablevalue table=11 ind=1 row=0 col=1 value="Endowment UNIQA"
.tablevalue table=11 ind=2 row=0 col=2 value="TODO: Endowment UNIQA"
.tablevalue table=11 ind=3 row=1 col=0 value="6200"
.tablevalue table=11 ind=4 row=1 col=1 value="Endowment Raiffeisen"
.tablevalue table=11 ind=5 row=1 col=2 value="TODO: Endowment Raiffeisen"
.table table=12 name=T_LI_TARIFFGENERATION rows=2 cols=2 shuffled=false directaccess=false
.tablecol table=12 col=0 name="DATEFROM" numeric=false numericsuper=false numericunique=false
.tablecol table=12 col=1 name="GENERATION" numeric=true numericsuper=true numericunique=true
.tablevalue table=12 ind=0 row=0 col=0 value="1900-01-01"
.tablevalue table=12 ind=1 row=0 col=1 value="201001"
.tablevalue table=12 ind=2 row=1 col=0 value="2011-09-01"
.tablevalue table=12 ind=3 row=1 col=1 value="201109"
.table table=13 name=T_LI_RIDERSUMCODE rows=3 cols=2 shuffled=false directaccess=true directaccessoffset=0
.tablecol table=13 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=13 col=1 name="TEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=13 ind=0 row=0 col=0 value="0"
.tablevalue table=13 ind=1 row=0 col=1 value="fixed to insured sum of main tariff"
.tablevalue table=13 ind=2 row=1 col=0 value="1"
.tablevalue table=13 ind=3 row=1 col=1 value="absolute value"
.tablevalue table=13 ind=4 row=2 col=0 value="2"
.tablevalue table=13 ind=5 row=2 col=1 value="percentage of sum insured main tariff"
.table table=14 name=T_LI_RIDERPRODUCT rows=6 cols=8 shuffled=false directaccess=false
.tablecol table=14 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=14 col=1 name="PRODUCTS" numeric=true numericsuper=true numericunique=true
.tablecol table=14 col=2 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=14 col=3 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablecol table=14 col=4 name="FACT_PROM" numeric=true numericsuper=true numericunique=true
.tablecol table=14 col=5 name="RIDERCODE" numeric=false numericsuper=false numericunique=false
.tablecol table=14 col=6 name="INDEXATION_PERC" numeric=true numericsuper=true numericunique=true
.tablecol table=14 col=7 name="SPARTE" numeric=true numericsuper=true numericunique=true
.tablevalue table=14 ind=0 row=0 col=0 value="6105"
.tablevalue table=14 ind=1 row=0 col=1 value="6100"
.tablevalue table=14 ind=2 row=0 col=2 value="Accidental death"
.tablevalue table=14 ind=3 row=0 col=3 value="todo Accidental death ro"
.tablevalue table=14 ind=4 row=0 col=4 value="2"
.tablevalue table=14 ind=5 row=0 col=5 value="ADEA"
.tablevalue table=14 ind=6 row=0 col=6 value="0"
.tablevalue table=14 ind=7 row=0 col=7 value="1001"
.tablevalue table=14 ind=8 row=1 col=0 value="6110"
.tablevalue table=14 ind=9 row=1 col=1 value="6100"
.tablevalue table=14 ind=10 row=1 col=2 value="Partially and total permanent disability due to accidents"
.tablevalue table=14 ind=11 row=1 col=3 value="todo Partially and total permanent disability due to accidents"
.tablevalue table=14 ind=12 row=1 col=4 value="3"
.tablevalue table=14 ind=13 row=1 col=5 value="ADIS"
.tablevalue table=14 ind=14 row=1 col=6 value="0"
.tablevalue table=14 ind=15 row=1 col=7 value="1002"
.tablevalue table=14 ind=16 row=2 col=0 value="6115"
.tablevalue table=14 ind=17 row=2 col=1 value="6100"
.tablevalue table=14 ind=18 row=2 col=2 value="Hospitalization due to accidents"
.tablevalue table=14 ind=19 row=2 col=3 value="todo Hospitalization due to accidents"
.tablevalue table=14 ind=20 row=2 col=4 value="1500"
.tablevalue table=14 ind=21 row=2 col=5 value="HOSP"
.tablevalue table=14 ind=22 row=2 col=6 value="0"
.tablevalue table=14 ind=23 row=2 col=7 value="1003"
.tablevalue table=14 ind=24 row=3 col=0 value="6205"
.tablevalue table=14 ind=25 row=3 col=1 value="6200"
.tablevalue table=14 ind=26 row=3 col=2 value="Accidental death"
.tablevalue table=14 ind=27 row=3 col=3 value="todo Accidental death ro"
.tablevalue table=14 ind=28 row=3 col=4 value="2.1"
.tablevalue table=14 ind=29 row=3 col=5 value="ADEA"
.tablevalue table=14 ind=30 row=3 col=6 value="3"
.tablevalue table=14 ind=31 row=3 col=7 value="1001"
.tablevalue table=14 ind=32 row=4 col=0 value="6210"
.tablevalue table=14 ind=33 row=4 col=1 value="6200"
.tablevalue table=14 ind=34 row=4 col=2 value="Partially and total permanent disability due to accidents"
.tablevalue table=14 ind=35 row=4 col=3 value="todo Partially and total permanent disability due to accidents"
.tablevalue table=14 ind=36 row=4 col=4 value="3.045"
.tablevalue table=14 ind=37 row=4 col=5 value="ADIS"
.tablevalue table=14 ind=38 row=4 col=6 value="3"
.tablevalue table=14 ind=39 row=4 col=7 value="1002"
.tablevalue table=14 ind=40 row=5 col=0 value="6215"
.tablevalue table=14 ind=41 row=5 col=1 value="6200"
.tablevalue table=14 ind=42 row=5 col=2 value="Hospitalization due to accidents"
.tablevalue table=14 ind=43 row=5 col=3 value="todo Hospitalization due to accidents"
.tablevalue table=14 ind=44 row=5 col=4 value="1500"
.tablevalue table=14 ind=45 row=5 col=5 value="HOSP"
.tablevalue table=14 ind=46 row=5 col=6 value="0"
.tablevalue table=14 ind=47 row=5 col=7 value="1003"
.table table=15 name=T_LI_RIDERSTATUS rows=3 cols=2 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=15 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=15 col=1 name="VALUE" numeric=false numericsuper=false numericunique=false
.tablevalue table=15 ind=0 row=0 col=0 value="1"
.tablevalue table=15 ind=1 row=0 col=1 value="new"
.tablevalue table=15 ind=2 row=1 col=0 value="2"
.tablevalue table=15 ind=3 row=1 col=1 value="active"
.tablevalue table=15 ind=4 row=2 col=0 value="3"
.tablevalue table=15 ind=5 row=2 col=1 value="indexation (in advance)"
.table table=16 name=T_LI_RIDER_HOSPITAL_SUM_6115_EUR rows=3 cols=2 shuffled=false directaccess=false
.tablecol table=16 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=16 col=1 name="TEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=16 ind=0 row=0 col=0 value="10"
.tablevalue table=16 ind=1 row=0 col=1 value="Daily benefit: EUR 10,-"
.tablevalue table=16 ind=2 row=1 col=0 value="15"
.tablevalue table=16 ind=3 row=1 col=1 value="Daily benefit: EUR 15,-"
.tablevalue table=16 ind=4 row=2 col=0 value="25"
.tablevalue table=16 ind=5 row=2 col=1 value="Daily benefit: EUR 25,-"
.table table=17 name=T_LI_RIDER_HOSPITAL_SUM_6115_RON rows=3 cols=2 shuffled=false directaccess=false
.tablecol table=17 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=17 col=1 name="TEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=17 ind=0 row=0 col=0 value="40"
.tablevalue table=17 ind=1 row=0 col=1 value="Daily benefit: RON 40,-"
.tablevalue table=17 ind=2 row=1 col=0 value="70"
.tablevalue table=17 ind=3 row=1 col=1 value="Daily benefit: RON 70,-"
.tablevalue table=17 ind=4 row=2 col=0 value="100"
.tablevalue table=17 ind=5 row=2 col=1 value="Daily benefit: RON 100,-"
.table table=18 name=T_LI_RIDER_HOSPITAL_SUM_6215_EUR rows=3 cols=2 shuffled=false directaccess=false
.tablecol table=18 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=18 col=1 name="TEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=18 ind=0 row=0 col=0 value="15"
.tablevalue table=18 ind=1 row=0 col=1 value="Daily benefit: EUR 15,-"
.tablevalue table=18 ind=2 row=1 col=0 value="25"
.tablevalue table=18 ind=3 row=1 col=1 value="Daily benefit: EUR 25,-"
.tablevalue table=18 ind=4 row=2 col=0 value="50"
.tablevalue table=18 ind=5 row=2 col=1 value="Daily benefit: EUR 50,-"
.table table=19 name=T_LI_RIDER_HOSPITAL_SUM_6215_RON rows=3 cols=2 shuffled=false directaccess=false
.tablecol table=19 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=19 col=1 name="TEXT" numeric=false numericsuper=false numericunique=false
.tablevalue table=19 ind=0 row=0 col=0 value="60"
.tablevalue table=19 ind=1 row=0 col=1 value="Daily benefit: RON 60,-"
.tablevalue table=19 ind=2 row=1 col=0 value="100"
.tablevalue table=19 ind=3 row=1 col=1 value="Daily benefit: RON 100,-"
.tablevalue table=19 ind=4 row=2 col=0 value="200"
.tablevalue table=19 ind=5 row=2 col=1 value="Daily benefit: RON 200,-"
.table table=20 name=T_LI_PAYMENTFREQUENCY rows=4 cols=5 shuffled=false directaccess=false
.tablecol table=20 col=0 name="KEY" numeric=true numericsuper=true numericunique=true
.tablecol table=20 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=20 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablecol table=20 col=3 name="SURCHARGEPERC" numeric=true numericsuper=true numericunique=true
.tablecol table=20 col=4 name="MINPREM_EUR" numeric=true numericsuper=true numericunique=true
.tablevalue table=20 ind=0 row=0 col=0 value="1"
.tablevalue table=20 ind=1 row=0 col=1 value="yearly"
.tablevalue table=20 ind=2 row=0 col=2 value="anual"
.tablevalue table=20 ind=3 row=0 col=3 value="0"
.tablevalue table=20 ind=4 row=0 col=4 value="100"
.tablevalue table=20 ind=5 row=1 col=0 value="2"
.tablevalue table=20 ind=6 row=1 col=1 value="half-yearly"
.tablevalue table=20 ind=7 row=1 col=2 value="semestrial"
.tablevalue table=20 ind=8 row=1 col=3 value="2"
.tablevalue table=20 ind=9 row=1 col=4 value="50"
.tablevalue table=20 ind=10 row=2 col=0 value="4"
.tablevalue table=20 ind=11 row=2 col=1 value="quaterly"
.tablevalue table=20 ind=12 row=2 col=2 value="trimestrial"
.tablevalue table=20 ind=13 row=2 col=3 value="4"
.tablevalue table=20 ind=14 row=2 col=4 value="25"
.tablevalue table=20 ind=15 row=3 col=0 value="12"
.tablevalue table=20 ind=16 row=3 col=1 value="monthly"
.tablevalue table=20 ind=17 row=3 col=2 value="lunar"
.tablevalue table=20 ind=18 row=3 col=3 value="5"
.tablevalue table=20 ind=19 row=3 col=4 value="10"
.table table=21 name=T_LI_ALPHA_GEN201001 rows=5 cols=4 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=21 col=0 name="ALPHA_N" numeric=true numericsuper=true numericunique=true
.tablecol table=21 col=1 name="CHAN_BANK" numeric=false numericsuper=false numericunique=false
.tablecol table=21 col=2 name="CHAN_AGENT" numeric=false numericsuper=false numericunique=false
.tablecol table=21 col=3 name="CHAN_BROKER" numeric=true numericsuper=true numericunique=true
.tablevalue table=21 ind=0 row=0 col=0 value="1"
.tablevalue table=21 ind=1 row=0 col=1 value="0.036"
.tablevalue table=21 ind=2 row=0 col=2 value="0.020"
.tablevalue table=21 ind=3 row=0 col=3 value="0.030"
.tablevalue table=21 ind=4 row=1 col=0 value="2"
.tablevalue table=21 ind=5 row=1 col=1 value="0.018"
.tablevalue table=21 ind=6 row=1 col=2 value="0.010"
.tablevalue table=21 ind=7 row=1 col=3 value="0.010"
.tablevalue table=21 ind=8 row=2 col=0 value="3"
.tablevalue table=21 ind=9 row=2 col=1 value="0.006"
.tablevalue table=21 ind=10 row=2 col=2 value="0.005"
.tablevalue table=21 ind=11 row=2 col=3 value="0.005"
.tablevalue table=21 ind=12 row=3 col=0 value="4"
.tablevalue table=21 ind=13 row=3 col=1 value=""
.tablevalue table=21 ind=14 row=3 col=2 value="0.001"
.tablevalue table=21 ind=15 row=3 col=3 value="0.0025"
.tablevalue table=21 ind=16 row=4 col=0 value="5"
.tablevalue table=21 ind=17 row=4 col=1 value=""
.tablevalue table=21 ind=18 row=4 col=2 value=""
.tablevalue table=21 ind=19 row=4 col=3 value="0.0025"
.table table=22 name=T_LI_ALPHA_GEN201109 rows=5 cols=4 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=22 col=0 name="ALPHA_N" numeric=true numericsuper=true numericunique=true
.tablecol table=22 col=1 name="CHAN_BANK" numeric=false numericsuper=false numericunique=false
.tablecol table=22 col=2 name="CHAN_AGENT" numeric=true numericsuper=true numericunique=true
.tablecol table=22 col=3 name="CHAN_BROKER" numeric=true numericsuper=true numericunique=true
.tablevalue table=22 ind=0 row=0 col=0 value="1"
.tablevalue table=22 ind=1 row=0 col=1 value="0.036"
.tablevalue table=22 ind=2 row=0 col=2 value="0.028"
.tablevalue table=22 ind=3 row=0 col=3 value="0.0315"
.tablevalue table=22 ind=4 row=1 col=0 value="2"
.tablevalue table=22 ind=5 row=1 col=1 value="0.018"
.tablevalue table=22 ind=6 row=1 col=2 value="0.0155"
.tablevalue table=22 ind=7 row=1 col=3 value="0.0115"
.tablevalue table=22 ind=8 row=2 col=0 value="3"
.tablevalue table=22 ind=9 row=2 col=1 value="0.006"
.tablevalue table=22 ind=10 row=2 col=2 value="0.009"
.tablevalue table=22 ind=11 row=2 col=3 value="0.0065"
.tablevalue table=22 ind=12 row=3 col=0 value="4"
.tablevalue table=22 ind=13 row=3 col=1 value=""
.tablevalue table=22 ind=14 row=3 col=2 value="0.005"
.tablevalue table=22 ind=15 row=3 col=3 value="0.0025"
.tablevalue table=22 ind=16 row=4 col=0 value="5"
.tablevalue table=22 ind=17 row=4 col=1 value=""
.tablevalue table=22 ind=18 row=4 col=2 value="0.001"
.tablevalue table=22 ind=19 row=4 col=3 value="0.0025"
.table table=23 name=T_LI_ALPHAZILL_GEN201001 rows=5 cols=4 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=23 col=0 name="ALPHA_N" numeric=true numericsuper=true numericunique=true
.tablecol table=23 col=1 name="CHAN_BANK" numeric=true numericsuper=true numericunique=true
.tablecol table=23 col=2 name="CHAN_AGENT" numeric=true numericsuper=true numericunique=true
.tablecol table=23 col=3 name="CHAN_BROKER" numeric=true numericsuper=true numericunique=true
.tablevalue table=23 ind=0 row=0 col=0 value="1"
.tablevalue table=23 ind=1 row=0 col=1 value="0.024"
.tablevalue table=23 ind=2 row=0 col=2 value="0.018"
.tablevalue table=23 ind=3 row=0 col=3 value="0.024"
.tablevalue table=23 ind=4 row=1 col=0 value="2"
.tablevalue table=23 ind=5 row=1 col=1 value="0.036"
.tablevalue table=23 ind=6 row=1 col=2 value="0.027"
.tablevalue table=23 ind=7 row=1 col=3 value="0.032"
.tablevalue table=23 ind=8 row=2 col=0 value="3"
.tablevalue table=23 ind=9 row=2 col=1 value="0.040"
.tablevalue table=23 ind=10 row=2 col=2 value="0.031"
.tablevalue table=23 ind=11 row=2 col=3 value="0.036"
.tablevalue table=23 ind=12 row=3 col=0 value="4"
.tablevalue table=23 ind=13 row=3 col=1 value="0.040"
.tablevalue table=23 ind=14 row=3 col=2 value="0.036"
.tablevalue table=23 ind=15 row=3 col=3 value="0.038"
.tablevalue table=23 ind=16 row=4 col=0 value="5"
.tablevalue table=23 ind=17 row=4 col=1 value="0.040"
.tablevalue table=23 ind=18 row=4 col=2 value="0.040"
.tablevalue table=23 ind=19 row=4 col=3 value="0.040"
.table table=24 name=T_LI_ALPHAZILL_GEN201109 rows=5 cols=4 shuffled=false directaccess=true directaccessoffset=1
.tablecol table=24 col=0 name="ALPHA_N" numeric=true numericsuper=true numericunique=true
.tablecol table=24 col=1 name="CHAN_BANK" numeric=true numericsuper=true numericunique=true
.tablecol table=24 col=2 name="CHAN_AGENT" numeric=true numericsuper=true numericunique=true
.tablecol table=24 col=3 name="CHAN_BROKER" numeric=true numericsuper=true numericunique=true
.tablevalue table=24 ind=0 row=0 col=0 value="1"
.tablevalue table=24 ind=1 row=0 col=1 value="0.024"
.tablevalue table=24 ind=2 row=0 col=2 value="0.018"
.tablevalue table=24 ind=3 row=0 col=3 value="0.022"
.tablevalue table=24 ind=4 row=1 col=0 value="2"
.tablevalue table=24 ind=5 row=1 col=1 value="0.036"
.tablevalue table=24 ind=6 row=1 col=2 value="0.028"
.tablevalue table=24 ind=7 row=1 col=3 value="0.032"
.tablevalue table=24 ind=8 row=2 col=0 value="3"
.tablevalue table=24 ind=9 row=2 col=1 value="0.040"
.tablevalue table=24 ind=10 row=2 col=2 value="0.033"
.tablevalue table=24 ind=11 row=2 col=3 value="0.037"
.tablevalue table=24 ind=12 row=3 col=0 value="4"
.tablevalue table=24 ind=13 row=3 col=1 value="0.040"
.tablevalue table=24 ind=14 row=3 col=2 value="0.037"
.tablevalue table=24 ind=15 row=3 col=3 value="0.038"
.tablevalue table=24 ind=16 row=4 col=0 value="5"
.tablevalue table=24 ind=17 row=4 col=1 value="0.040"
.tablevalue table=24 ind=18 row=4 col=2 value="0.040"
.tablevalue table=24 ind=19 row=4 col=3 value="0.040"
.table table=25 name=T_LI_RO_200406 rows=85 cols=3 shuffled=false directaccess=true directaccessoffset=16
.tablecol table=25 col=0 name="AGE" numeric=true numericsuper=true numericunique=true
.tablecol table=25 col=1 name="QX" numeric=true numericsuper=true numericunique=true
.tablecol table=25 col=2 name="QY" numeric=true numericsuper=true numericunique=true
.tablevalue table=25 ind=0 row=0 col=0 value="16"
.tablevalue table=25 ind=1 row=0 col=1 value="0.0006380"
.tablevalue table=25 ind=2 row=0 col=2 value="0.0003980"
.tablevalue table=25 ind=3 row=1 col=0 value="17"
.tablevalue table=25 ind=4 row=1 col=1 value="0.0007200"
.tablevalue table=25 ind=5 row=1 col=2 value="0.0004160"
.tablevalue table=25 ind=6 row=2 col=0 value="18"
.tablevalue table=25 ind=7 row=2 col=1 value="0.0007760"
.tablevalue table=25 ind=8 row=2 col=2 value="0.0004060"
.tablevalue table=25 ind=9 row=3 col=0 value="19"
.tablevalue table=25 ind=10 row=3 col=1 value="0.0008060"
.tablevalue table=25 ind=11 row=3 col=2 value="0.0003720"
.tablevalue table=25 ind=12 row=4 col=0 value="20"
.tablevalue table=25 ind=13 row=4 col=1 value="0.0008400"
.tablevalue table=25 ind=14 row=4 col=2 value="0.0003580"
.tablevalue table=25 ind=15 row=5 col=0 value="21"
.tablevalue table=25 ind=16 row=5 col=1 value="0.0008680"
.tablevalue table=25 ind=17 row=5 col=2 value="0.0003400"
.tablevalue table=25 ind=18 row=6 col=0 value="22"
.tablevalue table=25 ind=19 row=6 col=1 value="0.0008720"
.tablevalue table=25 ind=20 row=6 col=2 value="0.0003340"
.tablevalue table=25 ind=21 row=7 col=0 value="23"
.tablevalue table=25 ind=22 row=7 col=1 value="0.0008960"
.tablevalue table=25 ind=23 row=7 col=2 value="0.0003500"
.tablevalue table=25 ind=24 row=8 col=0 value="24"
.tablevalue table=25 ind=25 row=8 col=1 value="0.0009420"
.tablevalue table=25 ind=26 row=8 col=2 value="0.0003620"
.tablevalue table=25 ind=27 row=9 col=0 value="25"
.tablevalue table=25 ind=28 row=9 col=1 value="0.0009840"
.tablevalue table=25 ind=29 row=9 col=2 value="0.0003960"
.tablevalue table=25 ind=30 row=10 col=0 value="26"
.tablevalue table=25 ind=31 row=10 col=1 value="0.0010280"
.tablevalue table=25 ind=32 row=10 col=2 value="0.0004200"
.tablevalue table=25 ind=33 row=11 col=0 value="27"
.tablevalue table=25 ind=34 row=11 col=1 value="0.0011040"
.tablevalue table=25 ind=35 row=11 col=2 value="0.0004600"
.tablevalue table=25 ind=36 row=12 col=0 value="28"
.tablevalue table=25 ind=37 row=12 col=1 value="0.0011760"
.tablevalue table=25 ind=38 row=12 col=2 value="0.0004940"
.tablevalue table=25 ind=39 row=13 col=0 value="29"
.tablevalue table=25 ind=40 row=13 col=1 value="0.0012560"
.tablevalue table=25 ind=41 row=13 col=2 value="0.0005420"
.tablevalue table=25 ind=42 row=14 col=0 value="30"
.tablevalue table=25 ind=43 row=14 col=1 value="0.0013520"
.tablevalue table=25 ind=44 row=14 col=2 value="0.0005500"
.tablevalue table=25 ind=45 row=15 col=0 value="31"
.tablevalue table=25 ind=46 row=15 col=1 value="0.0014960"
.tablevalue table=25 ind=47 row=15 col=2 value="0.0006240"
.tablevalue table=25 ind=48 row=16 col=0 value="32"
.tablevalue table=25 ind=49 row=16 col=1 value="0.0016640"
.tablevalue table=25 ind=50 row=16 col=2 value="0.0006640"
.tablevalue table=25 ind=51 row=17 col=0 value="33"
.tablevalue table=25 ind=52 row=17 col=1 value="0.0018420"
.tablevalue table=25 ind=53 row=17 col=2 value="0.0007340"
.tablevalue table=25 ind=54 row=18 col=0 value="34"
.tablevalue table=25 ind=55 row=18 col=1 value="0.0020060"
.tablevalue table=25 ind=56 row=18 col=2 value="0.0007980"
.tablevalue table=25 ind=57 row=19 col=0 value="35"
.tablevalue table=25 ind=58 row=19 col=1 value="0.0022100"
.tablevalue table=25 ind=59 row=19 col=2 value="0.0009200"
.tablevalue table=25 ind=60 row=20 col=0 value="36"
.tablevalue table=25 ind=61 row=20 col=1 value="0.0024360"
.tablevalue table=25 ind=62 row=20 col=2 value="0.0010200"
.tablevalue table=25 ind=63 row=21 col=0 value="37"
.tablevalue table=25 ind=64 row=21 col=1 value="0.0026940"
.tablevalue table=25 ind=65 row=21 col=2 value="0.0011240"
.tablevalue table=25 ind=66 row=22 col=0 value="38"
.tablevalue table=25 ind=67 row=22 col=1 value="0.0030300"
.tablevalue table=25 ind=68 row=22 col=2 value="0.0012300"
.tablevalue table=25 ind=69 row=23 col=0 value="39"
.tablevalue table=25 ind=70 row=23 col=1 value="0.0034820"
.tablevalue table=25 ind=71 row=23 col=2 value="0.0013720"
.tablevalue table=25 ind=72 row=24 col=0 value="40"
.tablevalue table=25 ind=73 row=24 col=1 value="0.0039200"
.tablevalue table=25 ind=74 row=24 col=2 value="0.0015300"
.tablevalue table=25 ind=75 row=25 col=0 value="41"
.tablevalue table=25 ind=76 row=25 col=1 value="0.0044220"
.tablevalue table=25 ind=77 row=25 col=2 value="0.0017200"
.tablevalue table=25 ind=78 row=26 col=0 value="42"
.tablevalue table=25 ind=79 row=26 col=1 value="0.0049500"
.tablevalue table=25 ind=80 row=26 col=2 value="0.0019600"
.tablevalue table=25 ind=81 row=27 col=0 value="43"
.tablevalue table=25 ind=82 row=27 col=1 value="0.0055360"
.tablevalue table=25 ind=83 row=27 col=2 value="0.0022280"
.tablevalue table=25 ind=84 row=28 col=0 value="44"
.tablevalue table=25 ind=85 row=28 col=1 value="0.0061040"
.tablevalue table=25 ind=86 row=28 col=2 value="0.0024620"
.tablevalue table=25 ind=87 row=29 col=0 value="45"
.tablevalue table=25 ind=88 row=29 col=1 value="0.0068020"
.tablevalue table=25 ind=89 row=29 col=2 value="0.0027340"
.tablevalue table=25 ind=90 row=30 col=0 value="46"
.tablevalue table=25 ind=91 row=30 col=1 value="0.0075500"
.tablevalue table=25 ind=92 row=30 col=2 value="0.0029980"
.tablevalue table=25 ind=93 row=31 col=0 value="47"
.tablevalue table=25 ind=94 row=31 col=1 value="0.0083740"
.tablevalue table=25 ind=95 row=31 col=2 value="0.0032960"
.tablevalue table=25 ind=96 row=32 col=0 value="48"
.tablevalue table=25 ind=97 row=32 col=1 value="0.0091960"
.tablevalue table=25 ind=98 row=32 col=2 value="0.0036140"
.tablevalue table=25 ind=99 row=33 col=0 value="49"
.tablevalue table=25 ind=100 row=33 col=1 value="0.0100880"
.tablevalue table=25 ind=101 row=33 col=2 value="0.0039640"
.tablevalue table=25 ind=102 row=34 col=0 value="50"
.tablevalue table=25 ind=103 row=34 col=1 value="0.0108340"
.tablevalue table=25 ind=104 row=34 col=2 value="0.0043340"
.tablevalue table=25 ind=105 row=35 col=0 value="51"
.tablevalue table=25 ind=106 row=35 col=1 value="0.0116820"
.tablevalue table=25 ind=107 row=35 col=2 value="0.0046280"
.tablevalue table=25 ind=108 row=36 col=0 value="52"
.tablevalue table=25 ind=109 row=36 col=1 value="0.0125280"
.tablevalue table=25 ind=110 row=36 col=2 value="0.0049620"
.tablevalue table=25 ind=111 row=37 col=0 value="53"
.tablevalue table=25 ind=112 row=37 col=1 value="0.0134580"
.tablevalue table=25 ind=113 row=37 col=2 value="0.0053900"
.tablevalue table=25 ind=114 row=38 col=0 value="54"
.tablevalue table=25 ind=115 row=38 col=1 value="0.0143280"
.tablevalue table=25 ind=116 row=38 col=2 value="0.0058060"
.tablevalue table=25 ind=117 row=39 col=0 value="55"
.tablevalue table=25 ind=118 row=39 col=1 value="0.0154240"
.tablevalue table=25 ind=119 row=39 col=2 value="0.0062360"
.tablevalue table=25 ind=120 row=40 col=0 value="56"
.tablevalue table=25 ind=121 row=40 col=1 value="0.0163400"
.tablevalue table=25 ind=122 row=40 col=2 value="0.0068200"
.tablevalue table=25 ind=123 row=41 col=0 value="57"
.tablevalue table=25 ind=124 row=41 col=1 value="0.0175580"
.tablevalue table=25 ind=125 row=41 col=2 value="0.0073880"
.tablevalue table=25 ind=126 row=42 col=0 value="58"
.tablevalue table=25 ind=127 row=42 col=1 value="0.0187720"
.tablevalue table=25 ind=128 row=42 col=2 value="0.0079980"
.tablevalue table=25 ind=129 row=43 col=0 value="59"
.tablevalue table=25 ind=130 row=43 col=1 value="0.0201300"
.tablevalue table=25 ind=131 row=43 col=2 value="0.0087840"
.tablevalue table=25 ind=132 row=44 col=0 value="60"
.tablevalue table=25 ind=133 row=44 col=1 value="0.0216100"
.tablevalue table=25 ind=134 row=44 col=2 value="0.0095000"
.tablevalue table=25 ind=135 row=45 col=0 value="61"
.tablevalue table=25 ind=136 row=45 col=1 value="0.0233300"
.tablevalue table=25 ind=137 row=45 col=2 value="0.0102540"
.tablevalue table=25 ind=138 row=46 col=0 value="62"
.tablevalue table=25 ind=139 row=46 col=1 value="0.0249340"
.tablevalue table=25 ind=140 row=46 col=2 value="0.0112120"
.tablevalue table=25 ind=141 row=47 col=0 value="63"
.tablevalue table=25 ind=142 row=47 col=1 value="0.0269020"
.tablevalue table=25 ind=143 row=47 col=2 value="0.0122080"
.tablevalue table=25 ind=144 row=48 col=0 value="64"
.tablevalue table=25 ind=145 row=48 col=1 value="0.0291780"
.tablevalue table=25 ind=146 row=48 col=2 value="0.0133500"
.tablevalue table=25 ind=147 row=49 col=0 value="65"
.tablevalue table=25 ind=148 row=49 col=1 value="0.0315420"
.tablevalue table=25 ind=149 row=49 col=2 value="0.0147740"
.tablevalue table=25 ind=150 row=50 col=0 value="66"
.tablevalue table=25 ind=151 row=50 col=1 value="0.0340320"
.tablevalue table=25 ind=152 row=50 col=2 value="0.0164520"
.tablevalue table=25 ind=153 row=51 col=0 value="67"
.tablevalue table=25 ind=154 row=51 col=1 value="0.0366860"
.tablevalue table=25 ind=155 row=51 col=2 value="0.0182960"
.tablevalue table=25 ind=156 row=52 col=0 value="68"
.tablevalue table=25 ind=157 row=52 col=1 value="0.0393920"
.tablevalue table=25 ind=158 row=52 col=2 value="0.0205120"
.tablevalue table=25 ind=159 row=53 col=0 value="69"
.tablevalue table=25 ind=160 row=53 col=1 value="0.0421760"
.tablevalue table=25 ind=161 row=53 col=2 value="0.0230260"
.tablevalue table=25 ind=162 row=54 col=0 value="70"
.tablevalue table=25 ind=163 row=54 col=1 value="0.0450840"
.tablevalue table=25 ind=164 row=54 col=2 value="0.0257760"
.tablevalue table=25 ind=165 row=55 col=0 value="71"
.tablevalue table=25 ind=166 row=55 col=1 value="0.0483780"
.tablevalue table=25 ind=167 row=55 col=2 value="0.0288680"
.tablevalue table=25 ind=168 row=56 col=0 value="72"
.tablevalue table=25 ind=169 row=56 col=1 value="0.0520140"
.tablevalue table=25 ind=170 row=56 col=2 value="0.0322380"
.tablevalue table=25 ind=171 row=57 col=0 value="73"
.tablevalue table=25 ind=172 row=57 col=1 value="0.0561660"
.tablevalue table=25 ind=173 row=57 col=2 value="0.0359460"
.tablevalue table=25 ind=174 row=58 col=0 value="74"
.tablevalue table=25 ind=175 row=58 col=1 value="0.0609460"
.tablevalue table=25 ind=176 row=58 col=2 value="0.0403120"
.tablevalue table=25 ind=177 row=59 col=0 value="75"
.tablevalue table=25 ind=178 row=59 col=1 value="0.0664560"
.tablevalue table=25 ind=179 row=59 col=2 value="0.0453920"
.tablevalue table=25 ind=180 row=60 col=0 value="76"
.tablevalue table=25 ind=181 row=60 col=1 value="0.0726580"
.tablevalue table=25 ind=182 row=60 col=2 value="0.0510400"
.tablevalue table=25 ind=183 row=61 col=0 value="77"
.tablevalue table=25 ind=184 row=61 col=1 value="0.0794820"
.tablevalue table=25 ind=185 row=61 col=2 value="0.0576460"
.tablevalue table=25 ind=186 row=62 col=0 value="78"
.tablevalue table=25 ind=187 row=62 col=1 value="0.0865160"
.tablevalue table=25 ind=188 row=62 col=2 value="0.0649260"
.tablevalue table=25 ind=189 row=63 col=0 value="79"
.tablevalue table=25 ind=190 row=63 col=1 value="0.0948720"
.tablevalue table=25 ind=191 row=63 col=2 value="0.0731920"
.tablevalue table=25 ind=192 row=64 col=0 value="80"
.tablevalue table=25 ind=193 row=64 col=1 value="0.1038160"
.tablevalue table=25 ind=194 row=64 col=2 value="0.0820660"
.tablevalue table=25 ind=195 row=65 col=0 value="81"
.tablevalue table=25 ind=196 row=65 col=1 value="0.1132760"
.tablevalue table=25 ind=197 row=65 col=2 value="0.0922780"
.tablevalue table=25 ind=198 row=66 col=0 value="82"
.tablevalue table=25 ind=199 row=66 col=1 value="0.1227620"
.tablevalue table=25 ind=200 row=66 col=2 value="0.1030840"
.tablevalue table=25 ind=201 row=67 col=0 value="83"
.tablevalue table=25 ind=202 row=67 col=1 value="0.1337080"
.tablevalue table=25 ind=203 row=67 col=2 value="0.1149280"
.tablevalue table=25 ind=204 row=68 col=0 value="84"
.tablevalue table=25 ind=205 row=68 col=1 value="0.1445440"
.tablevalue table=25 ind=206 row=68 col=2 value="0.1273040"
.tablevalue table=25 ind=207 row=69 col=0 value="85"
.tablevalue table=25 ind=208 row=69 col=1 value="0.1560720"
.tablevalue table=25 ind=209 row=69 col=2 value="0.1407800"
.tablevalue table=25 ind=210 row=70 col=0 value="86"
.tablevalue table=25 ind=211 row=70 col=1 value="0.1682580"
.tablevalue table=25 ind=212 row=70 col=2 value="0.1547560"
.tablevalue table=25 ind=213 row=71 col=0 value="87"
.tablevalue table=25 ind=214 row=71 col=1 value="0.1817900"
.tablevalue table=25 ind=215 row=71 col=2 value="0.1697580"
.tablevalue table=25 ind=216 row=72 col=0 value="88"
.tablevalue table=25 ind=217 row=72 col=1 value="0.1954520"
.tablevalue table=25 ind=218 row=72 col=2 value="0.1855860"
.tablevalue table=25 ind=219 row=73 col=0 value="89"
.tablevalue table=25 ind=220 row=73 col=1 value="0.2097380"
.tablevalue table=25 ind=221 row=73 col=2 value="0.2022500"
.tablevalue table=25 ind=222 row=74 col=0 value="90"
.tablevalue table=25 ind=223 row=74 col=1 value="0.2246480"
.tablevalue table=25 ind=224 row=74 col=2 value="0.2197520"
.tablevalue table=25 ind=225 row=75 col=0 value="91"
.tablevalue table=25 ind=226 row=75 col=1 value="0.2401820"
.tablevalue table=25 ind=227 row=75 col=2 value="0.2380900"
.tablevalue table=25 ind=228 row=76 col=0 value="92"
.tablevalue table=25 ind=229 row=76 col=1 value="0.2563400"
.tablevalue table=25 ind=230 row=76 col=2 value="0.2572680"
.tablevalue table=25 ind=231 row=77 col=0 value="93"
.tablevalue table=25 ind=232 row=77 col=1 value="0.2731220"
.tablevalue table=25 ind=233 row=77 col=2 value="0.2772800"
.tablevalue table=25 ind=234 row=78 col=0 value="94"
.tablevalue table=25 ind=235 row=78 col=1 value="0.2905260"
.tablevalue table=25 ind=236 row=78 col=2 value="0.2981320"
.tablevalue table=25 ind=237 row=79 col=0 value="95"
.tablevalue table=25 ind=238 row=79 col=1 value="0.3085540"
.tablevalue table=25 ind=239 row=79 col=2 value="0.3198200"
.tablevalue table=25 ind=240 row=80 col=0 value="96"
.tablevalue table=25 ind=241 row=80 col=1 value="0.3272060"
.tablevalue table=25 ind=242 row=80 col=2 value="0.3423460"
.tablevalue table=25 ind=243 row=81 col=0 value="97"
.tablevalue table=25 ind=244 row=81 col=1 value="0.3464820"
.tablevalue table=25 ind=245 row=81 col=2 value="0.3657080"
.tablevalue table=25 ind=246 row=82 col=0 value="98"
.tablevalue table=25 ind=247 row=82 col=1 value="0.3663820"
.tablevalue table=25 ind=248 row=82 col=2 value="0.3899100"
.tablevalue table=25 ind=249 row=83 col=0 value="99"
.tablevalue table=25 ind=250 row=83 col=1 value="0.3763325"
.tablevalue table=25 ind=251 row=83 col=2 value="0.4020100"
.tablevalue table=25 ind=252 row=84 col=0 value="100"
.tablevalue table=25 ind=253 row=84 col=1 value="1.0000000"
.tablevalue table=25 ind=254 row=84 col=2 value="1.0000000"
.table table=26 name=T_LI_CONSTANTS rows=16 cols=2 shuffled=true directaccess=false
.tablecol table=26 col=0 name="KEY" numeric=false numericsuper=false numericunique=false
.tablecol table=26 col=1 name="VALUE" numeric=true numericsuper=true numericunique=true
.tablevalue table=26 ind=0 row=0 col=0 value="beta"
.tablevalue table=26 ind=1 row=0 col=1 value="0.03"
.tablevalue table=26 ind=2 row=1 col=0 value="delta_eur"
.tablevalue table=26 ind=3 row=1 col=1 value="6"
.tablevalue table=26 ind=4 row=2 col=0 value="delta_ron"
.tablevalue table=26 ind=5 row=2 col=1 value="25"
.tablevalue table=26 ind=6 row=3 col=0 value="gamma"
.tablevalue table=26 ind=7 row=3 col=1 value="0.003"
.tablevalue table=26 ind=8 row=4 col=0 value="gammaDash"
.tablevalue table=26 ind=9 row=4 col=1 value="0.003"
.tablevalue table=26 ind=10 row=5 col=0 value="GFC"
.tablevalue table=26 ind=11 row=5 col=1 value="0.003"
.tablevalue table=26 ind=12 row=6 col=0 value="irate_eur"
.tablevalue table=26 ind=13 row=6 col=1 value="0.025"
.tablevalue table=26 ind=14 row=7 col=0 value="irate_ron"
.tablevalue table=26 ind=15 row=7 col=1 value="0.035"
.tablevalue table=26 ind=16 row=8 col=0 value="policyfee_eur"
.tablevalue table=26 ind=17 row=8 col=1 value="8"
.tablevalue table=26 ind=18 row=9 col=0 value="policyfee_ron"
.tablevalue table=26 ind=19 row=9 col=1 value="30"
.tablevalue table=26 ind=20 row=10 col=0 value="profit_irate_eur"
.tablevalue table=26 ind=21 row=10 col=1 value="0.025"
.tablevalue table=26 ind=22 row=11 col=0 value="profit_irate_ron"
.tablevalue table=26 ind=23 row=11 col=1 value="0.035"
.tablevalue table=26 ind=24 row=12 col=0 value="profit_rate_eur"
.tablevalue table=26 ind=25 row=12 col=1 value="0.025"
.tablevalue table=26 ind=26 row=13 col=0 value="profit_rate_ron"
.tablevalue table=26 ind=27 row=13 col=1 value="0.035"
.tablevalue table=26 ind=28 row=14 col=0 value="profit_sharing"
.tablevalue table=26 ind=29 row=14 col=1 value="0.7"
.tablevalue table=26 ind=30 row=15 col=0 value="SL"
.tablevalue table=26 ind=31 row=15 col=1 value="0.003"
.tablerow table=26 row=0 oo=6
.tablerow table=26 row=1 oo=7
.tablerow table=26 row=2 oo=0
.tablerow table=26 row=3 oo=3
.tablerow table=26 row=4 oo=4
.tablerow table=26 row=5 oo=1
.tablerow table=26 row=6 oo=2
.tablerow table=26 row=7 oo=5
.tablerow table=26 row=8 oo=15
.tablerow table=26 row=9 oo=10
.tablerow table=26 row=10 oo=12
.tablerow table=26 row=11 oo=11
.tablerow table=26 row=12 oo=13
.tablerow table=26 row=13 oo=14
.tablerow table=26 row=14 oo=8
.tablerow table=26 row=15 oo=9
.table table=27 name=T_LI_PROFIT rows=2 cols=3 shuffled=false directaccess=true directaccessoffset=2009
.tablecol table=27 col=0 name="YEAR" numeric=true numericsuper=true numericunique=true
.tablecol table=27 col=1 name="RATE_EUR" numeric=true numericsuper=true numericunique=true
.tablecol table=27 col=2 name="RATE_RON" numeric=true numericsuper=true numericunique=true
.tablevalue table=27 ind=0 row=0 col=0 value="2009"
.tablevalue table=27 ind=1 row=0 col=1 value="0.038"
.tablevalue table=27 ind=2 row=0 col=2 value="0.0575"
.tablevalue table=27 ind=3 row=1 col=0 value="2010"
.tablevalue table=27 ind=4 row=1 col=1 value="0.038"
.tablevalue table=27 ind=5 row=1 col=2 value="0.0575"
.table table=28 name=T_LI_MESSAGE rows=14 cols=3 shuffled=false directaccess=true directaccessoffset=1000
.tablecol table=28 col=0 name="CODE" numeric=true numericsuper=true numericunique=true
.tablecol table=28 col=1 name="TEXT_EN" numeric=false numericsuper=false numericunique=false
.tablecol table=28 col=2 name="TEXT_RO" numeric=false numericsuper=false numericunique=false
.tablevalue table=28 ind=0 row=0 col=0 value="1000"
.tablevalue table=28 ind=1 row=0 col=1 value="The minimum attained age at the entry for the insured life is XXX1 years (according to current input: XXX2 years)."
.tablevalue table=28 ind=2 row=0 col=2 value="Varsta minima la inceputul perioadei de asigurare este  XXX1 ani (valoarea curenta este:: XXX2 ani)."
.tablevalue table=28 ind=3 row=1 col=0 value="1001"
.tablevalue table=28 ind=4 row=1 col=1 value="The maximum attained age at the entry for the insured life is XXX1 years (according to current input: XXX2 years)."
.tablevalue table=28 ind=5 row=1 col=2 value="Varsta maxima la inceputul perioadei de asigurare este  XXX1 ani (valoarea curenta este:: XXX2 ani)."
.tablevalue table=28 ind=6 row=2 col=0 value="1002"
.tablevalue table=28 ind=7 row=2 col=1 value="The maximum attained age at the end of the term for the insured life is XXX1 years (according to current input: XXX2 years)."
.tablevalue table=28 ind=8 row=2 col=2 value="Varsta maxima la sfarsitul perioadei de asigurare este  XXX1 ani (valoarea curenta este:: XXX2 ani)."
.tablevalue table=28 ind=9 row=3 col=0 value="1003"
.tablevalue table=28 ind=10 row=3 col=1 value="The duration has to be between XXX1 and XXX2 years (according to current input: XXX3 years)."
.tablevalue table=28 ind=11 row=3 col=2 value="Durata trebuie sa fie intre  XXX1 si  XXX2 ani (valoarea curenta este: XXX3 ani)."
.tablevalue table=28 ind=12 row=4 col=0 value="1004"
.tablevalue table=28 ind=13 row=4 col=1 value="The minimum insured sum is XXX1 (according to current input: XXX2)."
.tablevalue table=28 ind=14 row=4 col=2 value="Suma minima asigurata este de XXX1 (valoarea introdusa este: EUR XXX2)."
.tablevalue table=28 ind=15 row=5 col=0 value="1005"
.tablevalue table=28 ind=16 row=5 col=1 value="Payment duration (XXX1 years) and tariff duration (XXX2 years) must be the same."
.tablevalue table=28 ind=17 row=5 col=2 value="Durata de plata (XXX1 ani)  trebuie sa fie identica cu perioada contractului (XXX2 ani)"
.tablevalue table=28 ind=18 row=6 col=0 value="1006"
.tablevalue table=28 ind=19 row=6 col=1 value="Please supply input for field XXX1."
.tablevalue table=28 ind=20 row=6 col=2 value="TODO: romanian Please supply input for XXX1"
.tablevalue table=28 ind=21 row=7 col=0 value="1007"
.tablevalue table=28 ind=22 row=7 col=1 value="The earliest possible policy begin date is the XXX1."
.tablevalue table=28 ind=23 row=7 col=2 value="TODO: romanian text"
.tablevalue table=28 ind=24 row=8 col=0 value="1008"
.tablevalue table=28 ind=25 row=8 col=1 value="The maximum insured sum is XXX1 (according to current input: XXX2)."
.tablevalue table=28 ind=26 row=8 col=2 value="Suma minima asigurata este de XXX1 (valoarea introdusa este: XXX2)."
.tablevalue table=28 ind=27 row=9 col=0 value="1009"
.tablevalue table=28 ind=28 row=9 col=1 value="Examination needed for insured sum above XXX1 (according to current input: XXX2)."
.tablevalue table=28 ind=29 row=9 col=2 value="TODO: romanian text"
.tablevalue table=28 ind=30 row=10 col=0 value="1010"
.tablevalue table=28 ind=31 row=10 col=1 value="The minimal payment rate is XXX1 (according to current input: XXX2)."
.tablevalue table=28 ind=32 row=10 col=2 value="TODO: romanian text"
.tablevalue table=28 ind=33 row=11 col=0 value="1011"
.tablevalue table=28 ind=34 row=11 col=1 value="Chosen sum (XXX1) is not available. Please use one of XXX2."
.tablevalue table=28 ind=35 row=11 col=2 value="TODO: romanian text"
.tablevalue table=28 ind=36 row=12 col=0 value="1012"
.tablevalue table=28 ind=37 row=12 col=1 value="Rider XXX1 (XXX2) not allowed for selected product. Allowed riders are: XXX3."
.tablevalue table=28 ind=38 row=12 col=2 value="TODO: romanian text"
.tablevalue table=28 ind=39 row=13 col=0 value="1013"
.tablevalue table=28 ind=40 row=13 col=1 value="Rider XXX1 does not exist."
.tablevalue table=28 ind=41 row=13 col=2 value="TODO: romanian text"
.funcs size=152
.func func=0 name=F_LI_SOLVE_TEST_F1 args=2 formula=320
.func func=1 name=F_LI_SOLVE_RFI_TEST args=0 formula=321
.func func=2 name=F_LI_SOLVE_SEC_TEST args=0 formula=322
.func func=3 name=F_LI_SOLVE_BIN_TEST args=0 formula=323
.func func=4 name=F_LI_SOLVE_RFI_BIN_TEST args=0 formula=324
.func func=5 name=F_LI_SOLVE_GET_RESULT args=1 formula=325
.func func=6 name=F_LI_SOLVE_GET_X args=1 formula=326
.func func=7 name=F_LI_SOLVE_GET_FX args=1 formula=327
.func func=8 name=F_LI_SOLVE_GET_ITER args=1 formula=328
.func func=9 name=F_LI_SOLVE_GET_TRACE args=1 formula=329
.func func=10 name=F_LI_SOLVE_ADD args=3 formula=330
.func func=11 name=F_LI_SOLVE_ADD1 args=4 formula=331
.func func=12 name=F_LI_SOLVE_RESULT args=3 formula=332
.func func=13 name=F_LI_SOLVE_TRACESWITCH args=0 formula=333
.func func=14 name=F_LI_SOLVE_CALLF args=3 formula=334
.func func=15 name=F_LI_SOLVE args=8 formula=335
.func func=16 name=F_LI_SOLVE_RFI args=7 formula=336
.func func=17 name=F_LI_SOLVE_RFI0 args=10 formula=337
.func func=18 name=F_LI_SOLVE_RFI1 args=12 formula=338
.func func=19 name=F_LI_SOLVE_RFI_INTERPOLZ args=5 formula=339
.func func=20 name=F_LI_SOLVE_SEC args=7 formula=340
.func func=21 name=F_LI_SOLVE_SEC0 args=10 formula=341
.func func=22 name=F_LI_SOLVE_SEC_INTERPOLZ args=5 formula=342
.func func=23 name=F_LI_SOLVE_BIN args=7 formula=343
.func func=24 name=F_LI_SOLVE_BIN0 args=10 formula=344
.func func=25 name=F_LI_SOLVE_BIN_INTERPOLZ args=2 formula=345
.func func=26 name=F_LI_SOLVE_RFI_BIN args=7 formula=346
.func func=27 name=F_LI_SOLVE_RFI_BIN1 args=8 formula=347
.func func=28 name=F_LI_SOLVE_RFI_BIN2 args=2 formula=348
.func func=29 name=F_LI_PREMOIP args=12 formula=349
.func func=30 name=F_LI_SUMFROMPREMOIP args=12 formula=350
.func func=31 name=F_LI_GROSSPREMIUM args=9 formula=351
.func func=32 name=F_LI_GROSSPREMIUMFORMULA args=9 formula=352
.func func=33 name=F_LI_NETPREMIUM args=6 formula=353
.func func=34 name=F_LI_ZILLMERPREMIUM args=10 formula=354
.func func=35 name=F_LI_NEXALPHA args=8 formula=355
.func func=36 name=F_LI_NEXALPHA_BANK args=8 formula=356
.func func=37 name=F_LI_NEXALPHA_AGENT args=8 formula=357
.func func=38 name=F_LI_NEXALPHA_AGENT_GEN201001 args=8 formula=358
.func func=39 name=F_LI_NEXALPHA_AGENT_GEN201109 args=8 formula=359
.func func=40 name=F_LI_NEXALPHA_BROKER args=8 formula=360
.func func=41 name=F_LI_PREMALPHA args=9 formula=361
.func func=42 name=F_LI_PREMBETA args=9 formula=362
.func func=43 name=F_LI_PREMGAMMA args=6 formula=363
.func func=44 name=F_LI_RESERVENET args=7 formula=364
.func func=45 name=F_LI_RESERVEZILLMER args=10 formula=365
.func func=46 name=F_LI_RESERVEGAMMA args=7 formula=366
.func func=47 name=F_LI_RESERVETECHNICAL args=10 formula=367
.func func=48 name=F_LI_RESERVENETPREMIUM args=7 formula=368
.func func=49 name=F_LI_RESERVEBALANCE args=10 formula=369
.func func=50 name=F_LI_SURRENDERVALUE args=12 formula=370
.func func=51 name=F_LI_ACCRUALFACT args=3 formula=371
.func func=52 name=F_LI_REDUCEDSUM args=8 formula=372
.func func=53 name=F_LI_AEXN args=5 formula=373
.func func=54 name=F_LI_AEXN_K args=6 formula=374
.func func=55 name=F_LI_NAX args=5 formula=375
.func func=56 name=F_LI_NEX args=5 formula=376
.func func=57 name=F_LI_VN args=2 formula=377
.func func=58 name=F_LI_QX args=3 formula=378
.func func=59 name=F_LI_LX args=3 formula=379
.func func=60 name=F_LI_DX args=4 formula=380
.func func=61 name=F_LI_NX args=4 formula=381
.func func=62 name=F_LI_MX args=4 formula=382
.func func=63 name=F_LI_RX args=4 formula=383
.func func=64 name=F_LI_INDEXATION_YN args=0 formula=384
.func func=65 name=F_LI_INDEXATION_PERC args=0 formula=385
.func func=66 name=F_LI_SUMINDEXATION args=3 formula=386
.func func=67 name=F_LI_PREMIUMRIDER args=5 formula=387
.func func=68 name=F_LI_TARIFFGENERATION args=1 formula=388
.func func=69 name=F_LI_TARIFFGENERATION1 args=2 formula=389
.func func=70 name=F_LI_RIDERSUM args=5 formula=390
.func func=71 name=F_LI_PREMIUMRIDERBASE args=2 formula=391
.func func=72 name=F_LI_RIDERPRODUCT_FACT args=1 formula=392
.func func=73 name=F_LI_RIDERPRODUCT_INDEXATION_PERC args=1 formula=393
.func func=74 name=F_LI_RIDERPRODUCT_RIDERCODE args=1 formula=394
.func func=75 name=F_LI_RIDERPRODUCT_SPARTE args=1 formula=395
.func func=76 name=F_LI_RIDERPRODUCT_SUM args=2 formula=396
.func func=77 name=F_LI_RIDERPRODUCT_PREMYEAR args=2 formula=397
.func func=78 name=F_LI_RIDERHOSPITAL_PREM args=5 formula=398
.func func=79 name=F_LI_RIDER_HOSPITAL_SUM_ALL_VEC args=0 formula=399
.func func=80 name=F_LI_RIDER_HOSPITAL_SUM_VEC args=2 formula=400
.func func=81 name=F_LI_RIDER_HOSPITAL_SUM_VEC1 args=2 formula=401
.func func=82 name=F_LI_RIDER_HOSPITAL_SORT args=1 formula=402
.func func=83 name=F_LI_RIDER_HOSPITAL_SORT1 args=1 formula=403
.func func=84 name=F_LI_PRODUCT2RIDERHOSPITAL args=1 formula=404
.func func=85 name=F_V_CONCAT args=1 formula=405
.func func=86 name=F_V_CONCAT1 args=3 formula=406
.func func=87 name=F_V_REMOVEDUP args=1 formula=407
.func func=88 name=F_V_REMOVEDUP1 args=1 formula=408
.func func=89 name=F_LI_AGE_BEGIN args=2 formula=409
.func func=90 name=F_LI_TARIFFDURATION args=0 formula=410
.func func=91 name=F_LI_TARIFFDURATIONLAYER args=1 formula=411
.func func=92 name=F_LI_PAYMENTPERIOD args=0 formula=412
.func func=93 name=F_LI_PAYMENTPERIODLAYER args=1 formula=413
.func func=94 name=F_LI_INTERPOLLINEAR args=4 formula=414
.func func=95 name=F_LI_CALCULATIONDATEPREV args=2 formula=415
.func func=96 name=F_LI_CALCULATIONDATENEXT args=2 formula=416
.func func=97 name=F_LI_PAYMENTFREQUENCYFACT args=1 formula=417
.func func=98 name=F_LI_TEXTCOLUMN args=0 formula=418
.func func=99 name=F_LI_CHANNEL_LONGCODE args=1 formula=419
.func func=100 name=F_LI_RIDER_ALLOWED args=2 formula=420
.func func=101 name=F_LI_IRATE args=1 formula=421
.func func=102 name=F_LI_PROFIT_IRATE args=1 formula=422
.func func=103 name=F_LI_PROFIT_RATE args=2 formula=423
.func func=104 name=F_LI_PROFIT_SHARING args=0 formula=424
.func func=105 name=F_LI_ALPHA args=3 formula=425
.func func=106 name=F_LI_ALPHAZILL args=3 formula=426
.func func=107 name=F_LI_ALPHAZILL1 args=1 formula=427
.func func=108 name=F_LI_BETA args=0 formula=428
.func func=109 name=F_LI_GAMMA args=0 formula=429
.func func=110 name=F_LI_GAMMADASH args=0 formula=430
.func func=111 name=F_LI_DELTA args=1 formula=431
.func func=112 name=F_LI_POLICYFEE args=1 formula=432
.func func=113 name=F_LI_GUARANTEEFUNDCONTRIBUTION args=0 formula=433
.func func=114 name=F_LI_SUPERVISIONLEVY args=0 formula=434
.func func=115 name=F_LI_ERROR args=3 formula=435
.func func=116 name=F_LI_ERROREN args=3 formula=436
.func func=117 name=F_LI_MESSAGE args=1 formula=437
.func func=118 name=F_LI_MESSAGEEN args=1 formula=438
.func func=119 name=F_LI_VISS_ID args=1 formula=439
.func func=120 name=F_LI_SUBST args=3 formula=440
.func func=121 name=F_LI_FORMAT_CURRENCY args=1 formula=441
.func func=122 name=F_CUT3RHD args=1 formula=442
.func func=123 name=F_CUT2RHD args=1 formula=443
.func func=124 name=F_CUT1RHD args=1 formula=444
.func func=125 name=F_CUT0RHD args=1 formula=445
.func func=126 name=F_ROUND2RHD args=1 formula=446
.func func=127 name=F_ROUND1RHD args=1 formula=447
.func func=128 name=F_ROUND0RHD args=1 formula=448
.func func=129 name=F_INCREMENT args=1 formula=449
.func func=130 name=F_LI_INPUTOK args=0 formula=450
.func func=131 name=F_LI_CHECK_TARIFFBEGIN args=0 formula=451
.func func=132 name=F_LI_CHECK_AGE args=0 formula=452
.func func=133 name=F_LI_CHECK_DURATION args=0 formula=453
.func func=134 name=F_LI_CHECK_PAYMENTPERIOD args=0 formula=454
.func func=135 name=F_LI_CHECK_SUM args=1 formula=455
.func func=136 name=F_LI_CHECK_SUM1 args=5 formula=456
.func func=137 name=F_LI_CHECK_PREM args=1 formula=457
.func func=138 name=F_LI_CHECK_PREM1 args=2 formula=458
.func func=139 name=F_LI_CHECK_RIDER args=1 formula=459
.func func=140 name=F_LI_ALLOWEDRIDERS args=1 formula=460
.func func=141 name=F_LI_ALLOWEDRIDERS_VEC args=1 formula=461
.func func=142 name=F_LI_CHECKRIDER_HOSPITAL_SUM args=3 formula=462
.func func=143 name=F_LI_CHECKRIDER_HOSPITAL_SUM1 args=4 formula=463
.func func=144 name=F_REF1 args=0 formula=464
.func func=145 name=F_REF2 args=0 formula=465
.func func=146 name=F1 args=1 formula=466
.func func=147 name=F2 args=1 formula=467
.func func=148 name=F_REFVEC args=0 formula=468
.func func=149 name=F_TEST2 args=1 formula=469
.func func=150 name=F_TEST args=0 formula=470
.func func=151 name=$VERSION args=0 formula=471
.inputcalcids size=7
.inputcalcid icalc=0 name=TABLE
.inputcalcid icalc=1 name=DEFAULT
.inputcalcid icalc=2 name=DISPLAY
.inputcalcid icalc=3 name=CHECK
.inputcalcid icalc=4 name=AUTOCOUNTER
.inputcalcid icalc=5 name=FILTER
.inputcalcid icalc=6 name=VECTOR
.inputs size=34
.input input=0 name=A_LI_CONTEXT autocounters=0 choiceable=true
.inputcalc input=0 icalc=0 formula=472 ;TABLE
.input input=1 name=A_LI_CHECK_YN autocounters=0 choiceable=true
.inputcalc input=1 icalc=1 formula=473 ;DEFAULT
.inputcalc input=1 icalc=0 formula=474 ;TABLE
.inputcalc input=1 icalc=2 formula=475 ;DISPLAY
.input input=2 name=A_LI_LANGUAGE autocounters=0 choiceable=true
.inputcalc input=2 icalc=1 formula=476 ;DEFAULT
.inputcalc input=2 icalc=0 formula=477 ;TABLE
.input input=3 name=A_LI_CURRENTDATE autocounters=0 choiceable=false
.inputcalc input=3 icalc=1 formula=478 ;DEFAULT
.input input=4 name=A_LI_TEXT autocounters=0 choiceable=false
.input input=5 name=A_LI_CURRENCY autocounters=0 choiceable=true
.inputcalc input=5 icalc=1 formula=479 ;DEFAULT
.inputcalc input=5 icalc=0 formula=480 ;TABLE
.inputcalc input=5 icalc=2 formula=481 ;DISPLAY
.input input=6 name=A_LI_PAYMENTFREQUENCY autocounters=0 choiceable=true
.inputcalc input=6 icalc=1 formula=482 ;DEFAULT
.inputcalc input=6 icalc=0 formula=483 ;TABLE
.inputcalc input=6 icalc=2 formula=484 ;DISPLAY
.input input=7 name=A_LI_PAYMENTMETHOD autocounters=0 choiceable=true
.inputcalc input=7 icalc=0 formula=485 ;TABLE
.inputcalc input=7 icalc=1 formula=486 ;DEFAULT
.input input=8 name=A_LI_CHANNEL autocounters=0 choiceable=true
.inputcalc input=8 icalc=1 formula=487 ;DEFAULT
.inputcalc input=8 icalc=0 formula=488 ;TABLE
.inputcalc input=8 icalc=2 formula=489 ;DISPLAY
.input input=9 name=A_LI_CREATIONDATE autocounters=0 choiceable=false
.inputcalc input=9 icalc=1 formula=490 ;DEFAULT
.input input=10 name=A_LI_SEX autocounters=0 choiceable=true
.inputcalc input=10 icalc=1 formula=491 ;DEFAULT
.inputcalc input=10 icalc=0 formula=492 ;TABLE
.inputcalc input=10 icalc=2 formula=493 ;DISPLAY
.input input=11 name=A_LI_DATEOFBIRTH autocounters=0 choiceable=false
.inputcalc input=11 icalc=1 formula=494 ;DEFAULT
.input input=12 name=A_LI_EXAMINATION_YN autocounters=0 choiceable=true
.inputcalc input=12 icalc=1 formula=495 ;DEFAULT
.inputcalc input=12 icalc=0 formula=496 ;TABLE
.inputcalc input=12 icalc=2 formula=497 ;DISPLAY
.input input=13 name=A_LI_ADDRISK_PERC autocounters=0 choiceable=false
.inputcalc input=13 icalc=1 formula=498 ;DEFAULT
.input input=14 name=A_LI_PRODUCT autocounters=0 choiceable=true
.inputcalc input=14 icalc=0 formula=499 ;TABLE
.inputcalc input=14 icalc=2 formula=500 ;DISPLAY
.inputcalc input=14 icalc=1 formula=501 ;DEFAULT
.input input=15 name=A_LI_BASECODE autocounters=0 choiceable=true
.inputcalc input=15 icalc=1 formula=502 ;DEFAULT
.inputcalc input=15 icalc=0 formula=503 ;TABLE
.inputcalc input=15 icalc=2 formula=504 ;DISPLAY
.input input=16 name=A_LI_BASEVALUE autocounters=0 choiceable=false
.inputcalc input=16 icalc=1 formula=505 ;DEFAULT
.input input=17 name=A_LI_MAINLAYERS autocounters=0 choiceable=false
.inputcalc input=17 icalc=3 formula=506 ;CHECK
.input input=18 name=A_LI_TARIFFBEGIN autocounters=1 choiceable=false
.inputautocounter input=18 ind=0 counter=0
.inputcalc input=18 icalc=4 formula=507 ;AUTOCOUNTER
.inputcalc input=18 icalc=1 formula=508 ;DEFAULT
.inputcalc input=18 icalc=3 formula=509 ;CHECK
.input input=19 name=A_LI_MAINSTATUS autocounters=1 choiceable=false
.inputautocounter input=19 ind=0 counter=0
.inputcalc input=19 icalc=4 formula=510 ;AUTOCOUNTER
.inputcalc input=19 icalc=1 formula=511 ;DEFAULT
.input input=20 name=A_LI_DURATIONCODE autocounters=1 choiceable=true
.inputautocounter input=20 ind=0 counter=0
.inputcalc input=20 icalc=4 formula=512 ;AUTOCOUNTER
.inputcalc input=20 icalc=1 formula=513 ;DEFAULT
.inputcalc input=20 icalc=0 formula=514 ;TABLE
.inputcalc input=20 icalc=2 formula=515 ;DISPLAY
.inputcalc input=20 icalc=3 formula=516 ;CHECK
.input input=21 name=A_LI_DURATIONVALUE autocounters=1 choiceable=false
.inputautocounter input=21 ind=0 counter=0
.inputcalc input=21 icalc=4 formula=517 ;AUTOCOUNTER
.inputcalc input=21 icalc=1 formula=518 ;DEFAULT
.inputcalc input=21 icalc=3 formula=519 ;CHECK
.input input=22 name=A_LI_PAYMENTPERIODCODE autocounters=1 choiceable=true
.inputautocounter input=22 ind=0 counter=0
.inputcalc input=22 icalc=4 formula=520 ;AUTOCOUNTER
.inputcalc input=22 icalc=1 formula=521 ;DEFAULT
.inputcalc input=22 icalc=0 formula=522 ;TABLE
.inputcalc input=22 icalc=2 formula=523 ;DISPLAY
.inputcalc input=22 icalc=3 formula=524 ;CHECK
.input input=23 name=A_LI_PAYMENTPERIODVALUE autocounters=1 choiceable=false
.inputautocounter input=23 ind=0 counter=0
.inputcalc input=23 icalc=4 formula=525 ;AUTOCOUNTER
.inputcalc input=23 icalc=1 formula=526 ;DEFAULT
.inputcalc input=23 icalc=3 formula=527 ;CHECK
.input input=24 name=A_LI_RIDERS autocounters=0 choiceable=false
.inputcalc input=24 icalc=1 formula=528 ;DEFAULT
.input input=25 name=A_LI_RIDERPRODUCT autocounters=1 choiceable=true
.inputautocounter input=25 ind=0 counter=1
.inputcalc input=25 icalc=4 formula=529 ;AUTOCOUNTER
.inputcalc input=25 icalc=0 formula=530 ;TABLE
.inputcalc input=25 icalc=2 formula=531 ;DISPLAY
.inputcalc input=25 icalc=5 formula=532 ;FILTER
.input input=26 name=A_LI_RIDERLAYERS autocounters=1 choiceable=false
.inputautocounter input=26 ind=0 counter=1
.inputcalc input=26 icalc=4 formula=533 ;AUTOCOUNTER
.inputcalc input=26 icalc=1 formula=534 ;DEFAULT
.input input=27 name=A_LI_RIDERSUMCODE autocounters=1 choiceable=true
.inputautocounter input=27 ind=0 counter=1
.inputcalc input=27 icalc=4 formula=535 ;AUTOCOUNTER
.inputcalc input=27 icalc=1 formula=536 ;DEFAULT
.inputcalc input=27 icalc=0 formula=537 ;TABLE
.inputcalc input=27 icalc=2 formula=538 ;DISPLAY
.input input=28 name=A_LI_RIDERSUMVALUE autocounters=1 choiceable=false
.inputautocounter input=28 ind=0 counter=1
.inputcalc input=28 icalc=4 formula=539 ;AUTOCOUNTER
.inputcalc input=28 icalc=1 formula=540 ;DEFAULT
.input input=29 name=A_LI_RIDERADDRISKPROM autocounters=1 choiceable=false
.inputautocounter input=29 ind=0 counter=1
.inputcalc input=29 icalc=4 formula=541 ;AUTOCOUNTER
.inputcalc input=29 icalc=1 formula=542 ;DEFAULT
.input input=30 name=A_LI_RIDERADDRISKPERC autocounters=1 choiceable=false
.inputautocounter input=30 ind=0 counter=1
.inputcalc input=30 icalc=4 formula=543 ;AUTOCOUNTER
.inputcalc input=30 icalc=1 formula=544 ;DEFAULT
.input input=31 name=A_LI_RIDER_HOSPITAL_SUM autocounters=0 choiceable=true
.inputcalc input=31 icalc=0 formula=545 ;TABLE
.input input=32 name=A_LI_RIDER_HOSPITAL_SUM_ALL autocounters=0 choiceable=true
.inputcalc input=32 icalc=6 formula=546 ;VECTOR
.input input=33 name=A_LI_ZERO autocounters=0 choiceable=false
.inputcalc input=33 icalc=1 formula=547 ;DEFAULT
.formulas size=548
.formula formula=0 simple=true
   ; argument 0: arguments_list
   ; argument 1: nodeid
   ; argument 2: calcid
   ; argument 3: nr of parameters
   ; argument 4: selfcall (0/1)
   ; argument 5: result
   ; localvar 6: formulaid_inclusion
   ; localvar 7: formulaid_times
   ; localvar 8: children_num
   ; localvar 9: children_ind
   ; localvar 10: times
   ; localvar 11: timescounter
   ; localvar 12: timesid
   ; localvar 13: formulaid for node-calc
   ; localvar 14: subnodeid
   : load 4 //selfcall
   : iffalse L1
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalcown
   : iffalse L1
   : load 1 //nodeid
   : tree_nodeformulainc //formulaid
   : dup //formulaid_inclusion formulaid_inclusion
   : store 6 //formulaid_inclusion
   : ifnull L2 //jump if formulaid_inclusion<0
   : load 7 //formulaid_inclusion
   : pushconst0 //nargs=0
   : createlist0 //parameters (empty list)
   : callformuladyn //call inclusion formula
   : iftrue L2
   ; node is not included -> do not append anything
   : load 5
   : return
 L2: //calc in own node, node is included
   : load 1 //nodeid
   : tree_nodeformulatimes //formulaid_times
   : dup //formulaid_times formulaid_times
   : store 7 //formulaid_times
   : ifnull L3 //if no formulaid_times -> no times-counter
   : load 7 //formulaid_times
   : pushconst0 //formulaid_times 0; no parameters
   : createlist0 //formulaid_times 0 []; parameters (empty list)
   : callformuladyn //times
   : dup //times times
   : pushconst0 //times times 0
   : ifsmleq L7 //times; counter<=0 -> return null
   : store 10 //store times
   : load 1 //nodeid
   : tree_nodetimesid //timesid
   : store 12 //store timesid
   // init times counter in local var and on times-stack
   : pushconst0 //init timescounter
   : store 11   //init timescounter
   : load 12 //timesid
   : times_push
   // get and store formulaid
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalcformula //formulaid
   : store 13
   : load 5 //result
 L8: // start of loop over times .. calc in own node, node is included, we have a multiple-counter
   ; action: compute and add to result
   : load 13 //result formulaid
   : load 3 //result formulaid nargs
   : load 0 //result formulaid nargs args_list
   : callformuladyn //result newvalue
   : listappendelem1 //result
   : times_inctop
   : load 11 //result timescounter
   : pushconst1 //result timescounter 1
   : add //result timescounter+1
   : dup //result timescounter+1 timescounter+1
   : store 11 //result timescounter+1
   : load 10 //result timescounter+1 times
   : ifsml L8
   : times_pop
   : return
 L3: //calc in own node, node is included, no multiple-counter
   : load 5 //result
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalcformula //formulaid
   : load 3 //formulaid nargs
   : load 0 //formulaid nargs args_list
   : callformuladyn //result newvalue
   : listappendelem1 //result
   : return
 L1: //not defined in own node -> check if in child nodes
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalctotal
   : iftrue L6
     //not in child nodes -> return result unchanged
   : load 5
   : return
 L6: //defined in child nodes
   ; check if the node is included
   : load 1 //nodeid
   : tree_nodeformulainc //formulaid
   : dup //formulaid_inclusion formulaid_inclusion
   : store 6 //formulaid_inclusion
   : ifnull L61 //jump if formulaid_inclusion<0
   : load 6 //formulaid_inclusion
   : pushconst0 //nargs=0
   : createlist0 //parameters (empty list)
   : callformuladyn //call inclusion formula
   : iftrue L61
   ; node is not included -> return 'null'
   : pushnull
   : return
L61: //defined in child nodes, and child node is included
   : load 1 //nodeid
   : tree_subnodes_counter //numchilds
   : dup //numchilds numchilds
   : ifzero L7 //numchilds; if no children -> return null
   : store 8 //store numchilds; --
   : pushconst0 //init indchild
   : store 9
   ; check times
   : load 1 //nodeid
   : tree_nodeformulatimes //formulaid_times
   : dup //formulaid_times formulaid_times
   : store 7 //formulaid_times
   : ifnull L40 //if no formulaid_times -> no times-counter
   : load 7 //formulaid_times
   : pushconst0 //formulaid_times 0; no parameters
   : createlist0 //formulaid_times 0 []; parameters (empty list)
   : callformuladyn //times
   : dup //times times
   : pushconst0 //times times 0
   : ifsmleq L7 //times; counter<=0 -> return null
   ; setup times-counter
   : store 10 //store times
   : load 1 //nodeid
   : tree_nodetimesid //timesid
   : store 12 //store timesid
     // sum from children, we have times-counter -> outer loop over children, inner loop over times-counter
 L9: ;outer loop over children begin
   ; get subnode-id
   : load 1 //nodeid
   : load 9 //nodeid indchild
   : tree_subnodes_get //subnodeid
   : store 14 //store subnodeid
   // init times counter in local var and on times-stack
   : pushconst0 //init timescounter
   : store 11   //init timescounter
   : load 12 //timesid
   : times_push
 LA: //begin of inner loop over times
   : load 0; argument 0: arguments_list
   : load 14; argument 1: nodeid
   : load 2; argument 2: calcid
   : load 3; argument 3: nr of parameters
   : pushconst1; argument 4: selfcall (0/1)
   : load 5; argument 5: result
   : callformula 0 6 //recursive call -- newvalue
   : pop //result newvalue -- result; value was already appended to result list
   //increment and check times
   : times_inctop
   : load 11 //result timescounter
   : pushconst1 //result timescounter 1
   : add //result timescounter+1
   : dup //result timescounter+1 timescounter+1
   : store 11 //result timescounter+1
   : load 10 //result timescounter+1 times
   : ifsml LA
   : times_pop
   // increment and check current child
   : load 9 //result indchild
   : pushconst1 //result indchild 1
   : add //result indchild+1
   : dup //result indchild+1 indchild+1
   : store 9 //result indchild+1
   : load 8 //result indchild+1 numchilds
   : ifsml L9 //result
   : load 5
   : return
L40: //sum from children, we are included and have no times-counter
L41: ;loop over children begin
   : load 0; argument 0: arguments_list
   ; push arguments for tree_subnodes_get
   : load 1 //nodeid
   : load 9 //indchild
   : tree_subnodes_get //argument 1: nodeid of child
   : load 2; argument 2: calcid
   : load 3; argument 3: nr of parameters
   : pushconst1; argument 4: selfcall (0/1)
   : load 5; argument 5: result
   : callformula 0 6 //recursive call -- newvalue
   : pop //newvalue already appended to the list
   // increment and check current child
   : load 9 //result indchild
   : pushconst1 //result indchild 1
   : add //result indchild+1
   : dup //result indchild+1 indchild+1
   : store 9 //result indchild+1
   : load 8 //result indchild+1 numchilds
   : ifsml L41 //result
   : load 5
   : return
 L7: //no children or times-counter<=0 -> return result unchanged
   : load 5
   : return
.formuladone
.formula formula=1 simple=true
   ; argument 0: arguments_list
   ; argument 1: nodeid
   ; argument 2: calcid
   ; argument 3: nr of parameters
   ; argument 4: selfcall (0/1)
   ; localvar 5: formulaid_inclusion
   ; localvar 6: formulaid_times
   ; localvar 7: children_num
   ; localvar 8: children_ind
   ; localvar 9: times
   ; localvar 10: timescounter
   ; localvar 11: timesid
   ; localvar 12: formulaid for node-calc
   ; localvar 13: subnodeid
   : load 4 //selfcall
   : iffalse L1
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalcown
   : iffalse L1
   : load 1 //nodeid
   : tree_nodeformulainc //formulaid
   : dup //formulaid_inclusion formulaid_inclusion
   : store 5 //formulaid_inclusion
   : ifnull L2 //jump if formulaid_inclusion<0
   : load 5 //formulaid_inclusion
   : pushconst0 //nargs=0
   : createlist0 //parameters (empty list)
   : callformuladyn //call inclusion formula
   : iftrue L2
   ; node is not included -> return 'null'
   : pushnull
   : return
 L2: //calc in own node, node is included
   : load 1 //nodeid
   : tree_nodeformulatimes //formulaid_times
   : dup //formulaid_times formulaid_times
   : store 6 //formulaid_times
   : ifnull L3 //if no formulaid_times -> no times-counter
   : load 6 //formulaid_times
   : pushconst0 //formulaid_times 0; no parameters
   : createlist0 //formulaid_times 0 []; parameters (empty list)
   : callformuladyn //times
   : dup //times times
   : pushconst0 //times times 0
   : ifsmleq L7 //times; counter<=0 -> return null
   : store 9 //store times
   : load 1 //nodeid
   : tree_nodetimesid //timesid
   : store 11 //store timesid
   // init times counter in local var and on times-stack
   : pushconst0 //init timescounter
   : store 10   //init timescounter
   : load 11 //timesid
   : times_push
   // get and store formulaid
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalcformula //formulaid
   : store 12
   : pushnull //result
 L8: // start of loop over times .. calc in own node, node is included, we have a multiple-counter
   ; action: compute and add to result
   : load 12 //result formulaid
   : load 3 //result formulaid nargs
   : load 0 //result formulaid nargs args_list
   : callformuladyn //result newvalue
   : addnotnull //result
   : times_inctop
   : load 10 //result timescounter
   : pushconst1 //result timescounter 1
   : add //result timescounter+1
   : dup //result timescounter+1 timescounter+1
   : store 10 //result timescounter+1
   : load 9 //result timescounter+1 times
   : ifsml L8
   : times_pop
   : return
 L3: //calc in own node, node is included, no multiple-counter
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalcformula //formulaid
   : load 3 //formulaid nargs
   : load 0 //formulaid nargs args_list
   : callformuladyn //result
   : return
 L1: //not defined in own node -> check if in child nodes
   : load 1 //nodeid
   : load 2 //calcid
   : tree_nodecalctotal
   : iftrue L6
     //not in child nodes -> return null
   : pushnull
   : return
 L6: //defined in child nodes
   ; check if the node is included
   : load 1 //nodeid
   : tree_nodeformulainc //formulaid
   : dup //formulaid_inclusion formulaid_inclusion
   : store 5 //formulaid_inclusion
   : ifnull L61 //jump if formulaid_inclusion<0
   : load 5 //formulaid_inclusion
   : pushconst0 //nargs=0
   : createlist0 //parameters (empty list)
   : callformuladyn //call inclusion formula
   : iftrue L61
   ; node is not included -> return 'null'
   : pushnull
   : return
L61: //sum from subnodes, the node is included
   : load 1 //nodeid
   : tree_subnodes_counter //numchilds
   : dup //numchilds numchilds
   : ifzero L7 //numchilds; if no children -> return null
   : store 7 //store numchilds; --
   : pushconst0 //init indchild
   : store 8
   ; check times
   : load 1 //nodeid
   : tree_nodeformulatimes //formulaid_times
   : dup //formulaid_times formulaid_times
   : store 6 //formulaid_times
   : ifnull L40 //if no formulaid_times -> no times-counter
   : load 6 //formulaid_times
   : pushconst0 //formulaid_times 0; no parameters
   : createlist0 //formulaid_times 0 []; parameters (empty list)
   : callformuladyn //times
   : dup //times times
   : pushconst0 //times times 0
   : ifsmleq L7 //times; counter<=0 -> return null
   ; setup times-counter
   : store 9 //store times
   : load 1 //nodeid
   : tree_nodetimesid //timesid
   : store 11 //store timesid
     // sum from children, we have times-counter -> outer loop over children, inner loop over times-counter
   : pushnull //result
 L9: ;outer loop over children begin
   ; get subnode-id
   : load 1 //nodeid
   : load 8 //nodeid indchild
   : tree_subnodes_get //subnodeid
   : store 13 //store subnodeid
   // init times counter in local var and on times-stack
   : pushconst0 //init timescounter
   : store 10   //init timescounter
   : load 11 //timesid
   : times_push
 LA: //begin of inner loop over times
   : load 0; argument 0: arguments_list
   : load 13; argument 1: nodeid
   : load 2; argument 2: calcid
   : load 3; argument 3: nr of parameters
   : pushconst1; argument 4: selfcall (0/1)
   : callformula 1 5 //recursive call -- result newvalue
   : addnotnull //add result -- result
   //increment and check times
   : times_inctop
   : load 10 //result timescounter
   : pushconst1 //result timescounter 1
   : add //result timescounter+1
   : dup //result timescounter+1 timescounter+1
   : store 10 //result timescounter+1
   : load 9 //result timescounter+1 times
   : ifsml LA
   : times_pop
   // increment and check current child
   : load 8 //result indchild
   : pushconst1 //result indchild 1
   : add //result indchild+1
   : dup //result indchild+1 indchild+1
   : store 8 //result indchild+1
   : load 7 //result indchild+1 numchilds
   : ifsml L9 //result
   : return
L40: //sum from children, we are included and have no times-counter
   : pushnull
L41: ;loop over children begin
   : load 0; argument 0: arguments_list
   ; push arguments for tree_subnodes_get
   : load 1 //nodeid
   : load 8 //indchild
   : tree_subnodes_get //argument 1: nodeid of child
   : load 2; argument 2: calcid
   : load 3; argument 3: nr of parameters
   : pushconst1; argument 4: selfcall (0/1)
   : callformula 1 5 //recursive call -- result newvalue
   : addnotnull //add result -- result
   // increment and check current child
   : load 8 //result indchild
   : pushconst1 //result indchild 1
   : add //result indchild+1
   : dup //result indchild+1 indchild+1
   : store 8 //result indchild+1
   : load 7 //result indchild+1 numchilds
   : ifsml L41 //result
   : return
 L7: //no children or times-counter<=0 -> return null
   : pushnull
   : return
.formuladone
.formula formula=2 simple=true ; line 49
   : pushconst "UNIQA - WB"
   : return
.formuladone
.formula formula=3 simple=true ; line 51
   : pushconst "4.9.1"
   : return
.formuladone
.formula formula=4 simple=true ; line 56
   : pushconst "20111105"
   : return
.formuladone
.formula formula=5 simple=false ; line 84
   : callfunc 131 0 ; F_LI_CHECK_TARIFFBEGIN
   : callfunc 132 0 ; F_LI_CHECK_AGE
   : add
   : callfunc 133 0 ; F_LI_CHECK_DURATION
   : add
   : callfunc 134 0 ; F_LI_CHECK_PAYMENTPERIOD
   : add
   //start of if statement, line 61
   : getinput0 15 ; A_LI_BASECODE
   : pushconst 1
   : eq
   : iftrue L3
 L2:
   : getinput0 15 ; A_LI_BASECODE
   : pushconst 3
   : eq
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : callnodecalcsum 6 61 0 1 ;  node Indexation_results calc PX_LI_SUM:0
   : callfunc 135 1 ; F_LI_CHECK_SUM
   : callnodecalcsum 6 63 0 1 ;  node Indexation_results calc PX_LI_PREMIUMCONTRACTFREQ:0
   : callfunc 137 1 ; F_LI_CHECK_PREM
   : add
   : goto L1
 L0:
   : callnodecalcsum 6 63 0 1 ;  node Indexation_results calc PX_LI_PREMIUMCONTRACTFREQ:0
   : callfunc 137 1 ; F_LI_CHECK_PREM
   : callnodecalcsum 6 61 0 1 ;  node Indexation_results calc PX_LI_SUM:0
   : callfunc 135 1 ; F_LI_CHECK_SUM
   : add
 L1:
   //end of if statement
   : add
   // start of loop statement
   // init result
   : pushconst0
   : store 1
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 0 ; store counter
   : over
   : ifbig L7 ; end if from>to
 L6:
   : load 0 ; CURRENT_I
   : callnodecalcsum 6 61 0 1 ;  node Indexation_results calc PX_LI_SUM:0
   : callnodecalcsum 8 224 2 1 ;  node Main_results calc P_LI_CHECKRIDER:2
   : load 1 ; load result
   : add
   : store 1 ; store updated result
   // update counter and test
   : load 0
   : pushconst 1
   : add
   : dup
   : store 0
   : over
   : ifsmleq L6
 L7:
   : pop ; pop value_to
   : load 1
   // end of loop
   : add
   // start of loop statement
   // init result
   : pushconst0
   : store 4
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 3 ; store counter
   : over
   : ifbig L9 ; end if from>to
 L8:
   : load 3 ; CURRENT_I
   : callfunc 139 1 ; F_LI_CHECK_RIDER
   : load 4 ; load result
   : add
   : store 4 ; store updated result
   // update counter and test
   : load 3
   : pushconst 1
   : add
   : dup
   : store 3
   : over
   : ifsmleq L8
 L9:
   : pop ; pop value_to
   : load 4
   // end of loop
   : add
   : return
.formuladone
.formula formula=6 simple=false ; line 91
   : pushconst 0
   : callnodecalcsum 8 206 1 1 ;  node Main_results calc P_LI_AGE_:1
   : return
.formuladone
.formula formula=7 simple=false ; line 96
   : pushconst 0
   : callnodecalcsum 8 207 1 1 ;  node Main_results calc P_LI_IRATE_:1
   : return
.formuladone
.formula formula=8 simple=false ; line 101
   : pushconst 0
   : callnodecalcsum 8 208 1 1 ;  node Main_results calc P_LI_RISK_:1
   : return
.formuladone
.formula formula=9 simple=false ; line 106
   : pushconst 0
   : callnodecalcsum 8 209 1 1 ;  node Main_results calc P_LI_GEN_:1
   : return
.formuladone
.formula formula=10 simple=false ; line 111
   : pushconst 0
   : callnodecalcsum 8 179 1 1 ;  node Main_results calc P_LI_INTERESTRATE_:1
   : return
.formuladone
.formula formula=11 simple=false ; line 116
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 180 2 1 ;  node Main_results calc P_LI_ALPHA_:2
   : return
.formuladone
.formula formula=12 simple=false ; line 122
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 181 2 1 ;  node Main_results calc P_LI_ALPHAZILLMER_:2
   : return
.formuladone
.formula formula=13 simple=false ; line 128
   : pushconst 0
   : callnodecalcsum 8 182 1 1 ;  node Main_results calc P_LI_BETA_:1
   : return
.formuladone
.formula formula=14 simple=false ; line 133
   : pushconst 0
   : callnodecalcsum 8 183 1 1 ;  node Main_results calc P_LI_GAMMA_:1
   : return
.formuladone
.formula formula=15 simple=false ; line 138
   : pushconst 0
   : callnodecalcsum 8 184 1 1 ;  node Main_results calc P_LI_GAMMADASH_:1
   : return
.formuladone
.formula formula=16 simple=false ; line 143
   : pushconst 0
   : callnodecalcsum 8 185 1 1 ;  node Main_results calc P_LI_DELTA_:1
   : return
.formuladone
.formula formula=17 simple=false ; line 148
   : pushconst 0
   : callnodecalcsum 8 186 1 1 ;  node Main_results calc P_LI_IFL_:1
   : return
.formuladone
.formula formula=18 simple=false ; line 153
   : pushconst 0
   : callnodecalcsum 8 187 1 1 ;  node Main_results calc P_LI_SL_:1
   : return
.formuladone
.formula formula=19 simple=false ; line 158
   : pushconst 0
   : callnodecalcsum 8 188 1 1 ;  node Main_results calc P_LI_GFC_:1
   : return
.formuladone
.formula formula=20 simple=false ; line 163
   : pushconst 0
   : callnodecalcsum 8 189 1 1 ;  node Main_results calc P_LI_TAXFACT_:1
   : return
.formuladone
.formula formula=21 simple=false ; line 168
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 190 2 1 ;  node Main_results calc P_LI_QX_:2
   : return
.formuladone
.formula formula=22 simple=false ; line 174
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 192 2 1 ;  node Main_results calc P_LI_LX_:2
   : return
.formuladone
.formula formula=23 simple=false ; line 180
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 191 2 1 ;  node Main_results calc P_LI_DX_:2
   : return
.formuladone
.formula formula=24 simple=false ; line 186
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 193 2 1 ;  node Main_results calc P_LI_NX_:2
   : return
.formuladone
.formula formula=25 simple=false ; line 192
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 194 2 1 ;  node Main_results calc P_LI_MX_:2
   : return
.formuladone
.formula formula=26 simple=false ; line 198
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 195 2 1 ;  node Main_results calc P_LI_ZILLMERPREMIUM_:2
   : return
.formuladone
.formula formula=27 simple=false ; line 204
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 196 2 1 ;  node Main_results calc P_LI_NAX_:2
   : return
.formuladone
.formula formula=28 simple=false ; line 210
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 197 2 1 ;  node Main_results calc P_LI_NEX_:2
   : return
.formuladone
.formula formula=29 simple=false ; line 216
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 198 2 1 ;  node Main_results calc P_LI_AXN_:2
   : return
.formuladone
.formula formula=30 simple=false ; line 222
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 199 2 1 ;  node Main_results calc P_LI_AEXK_:2
   : return
.formuladone
.formula formula=31 simple=false ; line 228
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 200 2 1 ;  node Main_results calc P_LI_AEXN_:2
   : return
.formuladone
.formula formula=32 simple=false ; line 234
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 201 2 1 ;  node Main_results calc P_LI_AEXN_K_:2
   : return
.formuladone
.formula formula=33 simple=false ; line 240
   : pushconst 0
   : callnodecalcsum 8 202 1 1 ;  node Main_results calc P_LI_SUMALPHA_:1
   : return
.formuladone
.formula formula=34 simple=false ; line 245
   : pushconst 0
   : callnodecalcsum 8 203 1 1 ;  node Main_results calc P_LI_AEX3_2_:1
   : return
.formuladone
.formula formula=35 simple=false ; line 250
   : pushconst 0
   : callnodecalcsum 8 204 1 1 ;  node Main_results calc P_LI_AEX5_5_:1
   : return
.formuladone
.formula formula=36 simple=false ; line 255
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 205 2 1 ;  node Main_results calc P_LI_NEX_ALPHA_:2
   : return
.formuladone
.formula formula=37 simple=false ; line 261
   : pushconst 0
   : load 0 ; SUM
   : load 1 ; RISK
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : return
.formuladone
.formula formula=38 simple=false ; line 268
   : pushconst 0
   : callnodecalcsum 8 174 1 1 ;  node Main_results calc P_LI_GROSSPREMIUM_:1
   : return
.formuladone
.formula formula=39 simple=false ; line 273
   : pushconst 0
   : callnodecalcsum 8 175 1 1 ;  node Main_results calc P_LI_NETPREMIUM_:1
   : return
.formuladone
.formula formula=40 simple=false ; line 278
   : pushconst 0
   : callnodecalcsum 8 176 1 1 ;  node Main_results calc P_LI_PREMIUMALPHA_:1
   : return
.formuladone
.formula formula=41 simple=false ; line 283
   : pushconst 0
   : callnodecalcsum 8 177 1 1 ;  node Main_results calc P_LI_PREMIUMBETA_:1
   : return
.formuladone
.formula formula=42 simple=false ; line 288
   : pushconst 0
   : callnodecalcsum 8 178 1 1 ;  node Main_results calc P_LI_PREMIUMGAMMA_:1
   : return
.formuladone
.formula formula=43 simple=false ; line 293
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 167 2 1 ;  node Main_results calc P_LI_RESERVENET_:2
   : return
.formuladone
.formula formula=44 simple=false ; line 299
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 168 2 1 ;  node Main_results calc P_LI_RESERVEZILLMER_:2
   : return
.formuladone
.formula formula=45 simple=false ; line 305
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 169 2 1 ;  node Main_results calc P_LI_RESERVEGAMMA_:2
   : return
.formuladone
.formula formula=46 simple=false ; line 311
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 170 2 1 ;  node Main_results calc P_LI_RESERVETECHNICAL_:2
   : return
.formuladone
.formula formula=47 simple=false ; line 317
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 171 2 1 ;  node Main_results calc P_LI_SURRENDERVALUE_:2
   : return
.formuladone
.formula formula=48 simple=false ; line 323
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 172 2 1 ;  node Main_results calc P_LI_ACCRUALFACT_:2
   : return
.formuladone
.formula formula=49 simple=false ; line 329
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 161 2 1 ;  node Main_results calc P_LI_PROFITBASE_:2
   : return
.formuladone
.formula formula=50 simple=false ; line 335
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 162 2 1 ;  node Main_results calc P_LI_PROFITNEW_:2
   : return
.formuladone
.formula formula=51 simple=false ; line 341
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 163 2 1 ;  node Main_results calc P_LI_PROFITSUM_:2
   : return
.formuladone
.formula formula=52 simple=false ; line 347
   : pushconst 0
   : callnodecalcsum 8 164 1 1 ;  node Main_results calc P_LI_PROFIT_:1
   : return
.formuladone
.formula formula=53 simple=false ; line 352
   : pushconst 0
   : load 0 ; T
   : callnodecalcsum 8 165 2 1 ;  node Main_results calc P_LI_PROFITRATE_:2
   : return
.formuladone
.formula formula=54 simple=false ; line 358
   : pushconst 0
   : callnodecalcsum 8 166 1 1 ;  node Main_results calc P_LI_PROFITINTERESTRATE_:1
   : return
.formuladone
.formula formula=55 simple=false ; line 366
   //start of if statement, line 366
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 71 1 1 ;  node Indexation_results calc PX_LI_PREMIUMSUMMEDNOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 78 1 1 ;  node Indexation_results calc PX_LI_PREMIUMSUMMEDWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=56 simple=false ; line 379
   //start of if statement, line 379
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 72 1 1 ;  node Indexation_results calc PX_LI_SURRENDERVALUENOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 79 1 1 ;  node Indexation_results calc PX_LI_SURRENDERVALUEWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=57 simple=false ; line 392
   //start of if statement, line 392
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 74 1 1 ;  node Indexation_results calc PX_LI_DEATHBENEFITNOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 81 1 1 ;  node Indexation_results calc PX_LI_DEATHBENEFITWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=58 simple=false ; line 405
   //start of if statement, line 405
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 75 1 1 ;  node Indexation_results calc PX_LI_DEATHBENEFITPLUSPROFITNOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 82 1 1 ;  node Indexation_results calc PX_LI_DEATHBENEFITPLUSPROFITWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=59 simple=false ; line 418
   //start of if statement, line 418
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 76 1 1 ;  node Indexation_results calc PX_LI_PROFITYEARNOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 83 1 1 ;  node Indexation_results calc PX_LI_PROFITYEARWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=60 simple=false ; line 431
   //start of if statement, line 431
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 73 1 1 ;  node Indexation_results calc PX_LI_SURRENDERVALUEPLUSPROFITNOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 80 1 1 ;  node Indexation_results calc PX_LI_SURRENDERVALUEPLUSPROFITWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=61 simple=false ; line 444
   //start of if statement, line 444
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; T
   : callnodecalcsum 6 77 1 1 ;  node Indexation_results calc PX_LI_REDUCEDSUMNOINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 6 84 1 1 ;  node Indexation_results calc PX_LI_REDUCEDSUMWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=62 simple=true ; line 460
   : pushconst 0
   : return
.formuladone
.formula formula=63 simple=true ; line 462
   : pushconst 0
   : return
.formuladone
.formula formula=64 simple=true ; line 464
   : pushconst 0
   : return
.formuladone
.formula formula=65 simple=true ; line 466
   : pushconst 0
   : return
.formuladone
.formula formula=66 simple=true ; line 468
   : pushconst 0
   : return
.formuladone
.formula formula=67 simple=true ; line 470
   : pushconst 0
   : return
.formuladone
.formula formula=68 simple=true ; line 472
   : pushconst 0
   : return
.formuladone
.formula formula=69 simple=true ; line 474
   : pushconst 0
   : return
.formuladone
.formula formula=70 simple=true ; line 476
   : pushconst 0
   : return
.formuladone
.formula formula=71 simple=true ; line 478
   : pushconst 0
   : return
.formuladone
.formula formula=72 simple=true ; line 480
   : pushconst 0
   : return
.formuladone
.formula formula=73 simple=true ; line 482
   : pushconst 0
   : return
.formuladone
.formula formula=74 simple=true ; line 484
   : pushconst 0
   : return
.formuladone
.formula formula=75 simple=true ; line 486
   : pushconst 0
   : return
.formuladone
.formula formula=76 simple=true ; line 488
   : pushconst 0
   : return
.formuladone
.formula formula=77 simple=true ; line 490
   : pushconst 0
   : return
.formuladone
.formula formula=78 simple=true ; line 492
   : pushconst 0
   : return
.formuladone
.formula formula=79 simple=true ; line 494
   : pushconst 0
   : return
.formuladone
.formula formula=80 simple=true ; line 496
   : pushconst 0
   : return
.formuladone
.formula formula=81 simple=true ; line 498
   : pushconst 0
   : return
.formuladone
.formula formula=82 simple=true ; line 500
   : pushconst 0
   : return
.formuladone
.formula formula=83 simple=true ; line 502
   : pushconst 0
   : return
.formuladone
.formula formula=84 simple=true ; line 504
   : pushconst 0
   : return
.formuladone
.formula formula=85 simple=true ; line 506
   : pushconst 0
   : return
.formuladone
.formula formula=86 simple=true ; line 508
   : pushconst 0
   : return
.formuladone
.formula formula=87 simple=true ; line 510
   : pushconst 0
   : return
.formuladone
.formula formula=88 simple=true ; line 512
   : pushconst 0
   : return
.formuladone
.formula formula=89 simple=true ; line 514
   : pushconst 0
   : return
.formuladone
.formula formula=90 simple=true ; line 516
   : pushconst 0
   : return
.formuladone
.formula formula=91 simple=true ; line 518
   : pushconst 0
   : return
.formuladone
.formula formula=92 simple=false ; line 7
   : callfunc 130 0 ; F_LI_INPUTOK
   : return
.formuladone
.formula formula=93 simple=false ; line 523
   : getinput0 9 ; A_LI_CREATIONDATE
   : callfunc 68 1 ; F_LI_TARIFFGENERATION
   : return
.formuladone
.formula formula=94 simple=false ; line 528
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : return
.formuladone
.formula formula=95 simple=false ; line 530
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : return
.formuladone
.formula formula=96 simple=false ; line 532
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : return
.formuladone
.formula formula=97 simple=false ; line 534
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : return
.formuladone
.formula formula=98 simple=false ; line 540
   : callnodecalcsum 8 93 0 1 ;  node Main_results calc PX_LI_AGEATBEGIN:0
   : callnodecalcsum 8 91 0 1 ;  node Main_results calc PX_LI_DURATION:0
   : add
   : return
.formuladone
.formula formula=99 simple=false ; line 542
   : callnodecalcsum 8 65 0 1 ;  node Main_results calc PX_LI_PREMIUMFREQ:0
   // start of loop statement
   // init result
   : pushconst0
   : store 1
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 0 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 0 ; CURRENT_I
   : callnodecalcsum 8 88 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMFREQ:1
   : load 1 ; load result
   : add
   : store 1 ; store updated result
   // update counter and test
   : load 0
   : pushconst 1
   : add
   : dup
   : store 0
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 1
   // end of loop
   : add
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=100 simple=false ; line 549
   : callnodecalcsum 8 63 0 1 ;  node Main_results calc PX_LI_PREMIUMCONTRACTFREQ:0
   : callnodecalcsum 8 117 0 1 ;  node Main_results calc PX_LI_PREMIUMPOLICYFEE:0
   : add
   : return
.formuladone
.formula formula=101 simple=false ; line 551
   : callnodecalcsum 8 113 0 1 ;  node Main_results calc PX_LI_PREMIUMYEAR:0
   // start of loop statement
   // init result
   : pushconst0
   : store 1
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 0 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 0 ; CURRENT_I
   : callnodecalcsum 8 87 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEAR:1
   : load 1 ; load result
   : add
   : store 1 ; store updated result
   // update counter and test
   : load 0
   : pushconst 1
   : add
   : dup
   : store 0
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 1
   // end of loop
   : add
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=102 simple=false ; line 558
   : callnodecalcsum 8 118 0 1 ;  node Main_results calc PX_LI_PREMIUMYEARTAX:0
   // start of loop statement
   // init result
   : pushconst0
   : store 1
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 0 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 0 ; CURRENT_I
   : callnodecalcsum 8 137 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEARTAX:1
   : load 1 ; load result
   : add
   : store 1 ; store updated result
   // update counter and test
   : load 0
   : pushconst 1
   : add
   : dup
   : store 0
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 1
   // end of loop
   : add
   : return
.formuladone
.formula formula=103 simple=false ; line 565
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=104 simple=true ; line 570
   : getinput0 17 ; A_LI_MAINLAYERS
   : return
.formuladone
.formula formula=105 simple=false ; line 572
   : load 0 ; I
   : getinput 18 1 ; A_LI_TARIFFBEGIN
   : return
.formuladone
.formula formula=106 simple=false ; line 574
   : load 0 ; I
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : return
.formuladone
.formula formula=107 simple=false ; line 579
   //start of if statement, line 579
   : load 0 ; I
   : pushconst 0
   : eq
   : iftrue L3
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : builtin 1 1 ; NOT
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 1 ; SUM
   : goto L1
 L0:
   : load 1 ; SUM
   : pushconst 1
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 100
   : div
   : add
   : load 0 ; I
   : power
   : mult
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=108 simple=false ; line 589
   //start of if statement, line 589
   : load 0 ; I
   : pushconst 0
   : eq
   : iftrue L3
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : builtin 1 1 ; NOT
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 1 ; SUM
   : goto L1
 L0:
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : load 0 ; I
   : pushconst 1
   : sub
   : load 1 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : sub
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=109 simple=false ; line 607
   //start of if statement, line 607
   : load 0 ; I
   : pushconst 0
   : eq
   : iftrue L3
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : builtin 1 1 ; NOT
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 1 ; SUM
   : goto L1
 L0:
   : load 0 ; I
   : pushconst 1
   : sub
   : load 1 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : load 0 ; I
   : pushconst 1
   : sub
   : load 1 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : mult
   : pushconst 100
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : add
   : callfunc 126 1 ; F_ROUND2RHD
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=110 simple=false ; line 631
   //start of if statement, line 631
   : load 0 ; I
   : pushconst 0
   : eq
   : iftrue L3
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : builtin 1 1 ; NOT
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 1 ; SUM
   : goto L1
 L0:
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : load 0 ; I
   : pushconst 1
   : sub
   : load 1 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : sub
   : callfunc 126 1 ; F_ROUND2RHD
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=111 simple=false ; line 652
   : load 0 ; I
   : callnodecalcsum 8 61 0 1 ;  node Main_results calc PX_LI_SUM:0
   : callnodecalcsum 8 103 2 1 ;  node Main_results calc P_LI_SUMLAYER:2
   : return
.formuladone
.formula formula=112 simple=false ; line 658
   : load 0 ; I
   : callnodecalcsum 8 61 0 1 ;  node Main_results calc PX_LI_SUM:0
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : return
.formuladone
.formula formula=113 simple=false ; line 664
   : pushconst 0
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : return
.formuladone
.formula formula=114 simple=false ; line 671
   : load 0 ; I
   : load 0 ; I
   : callnodecalcsum 8 104 1 1 ;  node Main_results calc PX_LI_SUMLAYER:1
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : return
.formuladone
.formula formula=115 simple=false ; line 681
   : callnodecalcsum 8 106 0 1 ;  node Main_results calc PX_LI_PREMIUMOIP_UNROUNDED:0
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=116 simple=false ; line 686
   : load 0 ; I
   : callnodecalcsum 8 107 1 1 ;  node Main_results calc PX_LI_PREMIUMOIPLAYER_UNROUNDED:1
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=117 simple=false ; line 702
   : pushconst 0
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : pushconst 0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=118 simple=false ; line 715
   : load 0 ; I
   : load 0 ; I
   : callnodecalcsum 8 104 1 1 ;  node Main_results calc PX_LI_SUMLAYER:1
   : pushconst 0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=119 simple=false ; line 725
   : pushconst 0
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=120 simple=false ; line 738
   : load 0 ; I
   : load 0 ; I
   : callnodecalcsum 8 104 1 1 ;  node Main_results calc PX_LI_SUMLAYER:1
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=121 simple=false ; line 748
   : pushconst 0
   : load 0 ; SUM
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=122 simple=false ; line 761
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalcsum 8 103 2 1 ;  node Main_results calc P_LI_SUMLAYER:2
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 35 2 1 ;  node Main_results calc P_LI_PREMIUMOIP:2
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=123 simple=false ; line 763
   : callnodecalcsum 8 65 0 1 ;  node Main_results calc PX_LI_PREMIUMFREQ:0
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : mult
   : return
.formuladone
.formula formula=124 simple=false ; line 768
   : load 0 ; I
   : callnodecalcsum 8 110 1 1 ;  node Main_results calc PX_LI_PREMIUMFREQLAYER:1
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : mult
   : return
.formuladone
.formula formula=125 simple=false ; line 770
   //start of if statement, line 770
   : load 1 ; T
   : load 0 ; INDLAYER
   : cmpbigeq
   : iffalse L0
   : load 0 ; INDLAYER
   : callnodecalcsum 8 110 1 1 ;  node Main_results calc PX_LI_PREMIUMFREQLAYER:1
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : mult
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=126 simple=false ; line 780
   //start of if statement, line 780
   : load 0 ; I
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : cmpbigeq
   : iffalse L0
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : pushconst 1
   : sub
   : callnodecalcsum 8 116 1 1 ;  node Main_results calc PX_LI_PREMIUMYEARALLLAYERS:1
   : goto L1
 L0:
   : load 0 ; I
   : callnodecalcsum 8 114 1 1 ;  node Main_results calc PX_LI_PREMIUMYEARLAYER:1
   //start of if statement, line 789
   : load 0 ; I
   : pushconst 0
   : cmpbig
   : iffalse L2
   : load 0 ; I
   : pushconst 1
   : sub
   : callnodecalcsum 8 116 1 1 ;  node Main_results calc PX_LI_PREMIUMYEARALLLAYERS:1
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
 L1:
   //end of if statement
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=127 simple=false ; line 801
   : getinput0 5 ; A_LI_CURRENCY
   : callfunc 112 1 ; F_LI_POLICYFEE
   : return
.formuladone
.formula formula=128 simple=false ; line 806
   : callnodecalcsum 8 113 0 1 ;  node Main_results calc PX_LI_PREMIUMYEAR:0
   : pushconst 0
   : callnodecalcsum 8 189 1 1 ;  node Main_results calc P_LI_TAXFACT_:1
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=129 simple=false ; line 814
   //start of if statement, line 814
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 0
   : callnodecalcsum 8 164 1 1 ;  node Main_results calc P_LI_PROFIT_:1
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : goto L1
 L0:
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 1
   : sub
   : callnodecalcsum 8 83 1 1 ;  node Main_results calc PX_LI_PROFITYEARWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=130 simple=false ; line 830
   //start of if statement, line 830
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : pushconst 0
   : eq
   : iffalse L0
   : callnodecalcsum 8 61 0 1 ;  node Main_results calc PX_LI_SUM:0
   : callnodecalcsum 8 119 0 1 ;  node Main_results calc PX_LI_PROFIT:0
   : add
   : goto L1
 L0:
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 1
   : sub
   : callnodecalcsum 8 82 1 1 ;  node Main_results calc PX_LI_DEATHBENEFITPLUSPROFITWITHINDEX:1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=131 simple=false ; line 840
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : callnodecalcsum 8 97 0 1 ;  node Main_results calc PX_LI_MAINLAYERS:0
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 1 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 0 ; I
   : load 1 ; CURRENT_INDLAYER
   : callnodecalcsum 8 135 2 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEAR_:2
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : return
.formuladone
.formula formula=132 simple=false ; line 848
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 1 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   // start of loop statement
   // init result
   : pushconst0
   : store 5
   : load 0 ; INDLAYER
   : pushconst 0
   : dup
   : store 4 ; store counter
   : over
   : ifbig L3 ; end if from>to
 L2:
   : load 1 ; CURRENT_INDRIDER
   : load 4 ; CURRENT_I
   : callnodecalcsum 8 135 2 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEAR_:2
   : load 5 ; load result
   : add
   : store 5 ; store updated result
   // update counter and test
   : load 4
   : pushconst 1
   : add
   : dup
   : store 4
   : over
   : ifsmleq L2
 L3:
   : pop ; pop value_to
   : load 5
   // end of loop
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : return
.formuladone
.formula formula=133 simple=false ; line 858
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : return
.formuladone
.formula formula=134 simple=true ; line 860
   : load 0 ; I
   : pushconst 1
   : add
   : return
.formuladone
.formula formula=135 simple=false ; line 865
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : builtin 51 1 ; YEAR
   : load 0 ; I
   : add
   : return
.formuladone
.formula formula=136 simple=false ; line 867
   //start of if statement, line 868
   : load 0 ; T
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : cmpbigeq
   : iffalse L0
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : pushconst 1
   : sub
   : callnodecalcsum 8 71 1 1 ;  node Main_results calc PX_LI_PREMIUMSUMMEDNOINDEX:1
   : goto L1
 L0:
   : callnodecalcsum 8 64 0 1 ;  node Main_results calc PX_LI_PREMIUMCONTRACTYEAR:0
   //start of if statement, line 874
   : load 0 ; T
   : pushconst 0
   : eq
   : iffalse L2
   : callnodecalcsum 8 117 0 1 ;  node Main_results calc PX_LI_PREMIUMPOLICYFEE:0
   : goto L3
 L2:
   : load 0 ; T
   : pushconst 1
   : sub
   : callnodecalcsum 8 71 1 1 ;  node Main_results calc PX_LI_PREMIUMSUMMEDNOINDEX:1
 L3:
   //end of if statement
   : add
 L1:
   //end of if statement
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=137 simple=false ; line 888
   //start of if statement, line 888
   : load 0 ; T
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : cmpbig
   : iffalse L0
   : pushconst "done"
   : builtin 80 1 ; ERROR
   : goto L1
 L0:
   : pushconst 0
   : load 0 ; T
   : pushconst 1
   : add
   : callnodecalcsum 8 171 2 1 ;  node Main_results calc P_LI_SURRENDERVALUE_:2
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=138 simple=false ; line 905
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=139 simple=false ; line 913
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callfunc 126 1 ; F_ROUND2RHD
   : load 0 ; T
   : callnodecalcsum 8 76 1 1 ;  node Main_results calc PX_LI_PROFITYEARNOINDEX:1
   : add
   : return
.formuladone
.formula formula=140 simple=false ; line 918
   : pushconst 0
   : load 0 ; T
   : pushconst 1
   : add
   : callnodecalcsum 8 163 2 1 ;  node Main_results calc P_LI_PROFITSUM_:2
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=141 simple=false ; line 927
   : load 0 ; T
   : callnodecalcsum 8 72 1 1 ;  node Main_results calc PX_LI_SURRENDERVALUENOINDEX:1
   : load 0 ; T
   : callnodecalcsum 8 76 1 1 ;  node Main_results calc PX_LI_PROFITYEARNOINDEX:1
   : add
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=142 simple=false ; line 938
   //start of if statement, line 938
   : load 0 ; T
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : cmpbig
   : iffalse L0
   : pushconst "done"
   : builtin 80 1 ; ERROR
   : goto L1
 L0:
   : pushconst 0
   : callnodecalcsum 8 206 1 1 ;  node Main_results calc P_LI_AGE_:1
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : pushconst 0
   : callnodecalcsum 8 207 1 1 ;  node Main_results calc P_LI_IRATE_:1
   : pushconst 0
   : callnodecalcsum 8 208 1 1 ;  node Main_results calc P_LI_RISK_:1
   : load 0 ; T
   : pushconst 1
   : add
   : load 0 ; T
   : callnodecalcsum 8 72 1 1 ;  node Main_results calc PX_LI_SURRENDERVALUENOINDEX:1
   : callfunc 52 8 ; F_LI_REDUCEDSUM
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 0
   : builtin 26 2 ; MAX
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=143 simple=false ; line 977
   //start of if statement, line 978
   : load 0 ; T
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : cmpbigeq
   : iffalse L0
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : pushconst 1
   : sub
   : callnodecalcsum 8 78 1 1 ;  node Main_results calc PX_LI_PREMIUMSUMMEDWITHINDEX:1
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalcsum 8 116 1 1 ;  node Main_results calc PX_LI_PREMIUMYEARALLLAYERS:1
   : load 0 ; T
   : callnodecalcsum 8 122 1 1 ;  node Main_results calc PX_LI_TOTALRIDERPREMIUMYEARLAYER:1
   : add
   //start of if statement, line 990
   : load 0 ; T
   : pushconst 0
   : eq
   : iffalse L2
   : callnodecalcsum 8 117 0 1 ;  node Main_results calc PX_LI_PREMIUMPOLICYFEE:0
   : goto L3
 L2:
   : load 0 ; T
   : pushconst 1
   : sub
   : callnodecalcsum 8 78 1 1 ;  node Main_results calc PX_LI_PREMIUMSUMMEDWITHINDEX:1
 L3:
   //end of if statement
   : add
 L1:
   //end of if statement
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=144 simple=false ; line 1004
   //start of if statement, line 1004
   : load 0 ; T
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : cmpbig
   : iffalse L0
   : pushconst "done"
   : builtin 80 1 ; ERROR
   : goto L1
 L0:
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : load 0 ; T
   : pushconst 0
   : dup
   : store 1 ; store counter
   : over
   : ifbig L3 ; end if from>to
 L2:
   : load 1 ; CURRENT_INDLAYER
   : load 0 ; T
   : pushconst 1
   : add
   : load 1 ; CURRENT_INDLAYER
   : sub
   : callnodecalcsum 8 171 2 1 ;  node Main_results calc P_LI_SURRENDERVALUE_:2
   : load 1 ; CURRENT_INDLAYER
   : callnodecalcsum 8 104 1 1 ;  node Main_results calc PX_LI_SUMLAYER:1
   : mult
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L2
 L3:
   : pop ; pop value_to
   : load 2
   // end of loop
   : callfunc 126 1 ; F_ROUND2RHD
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=145 simple=false ; line 1026
   : load 0 ; T
   : callnodecalcsum 8 105 1 1 ;  node Main_results calc PX_LI_TOTALSUMLAYER:1
   : return
.formuladone
.formula formula=146 simple=false ; line 1034
   : load 0 ; T
   : callnodecalcsum 8 81 1 1 ;  node Main_results calc PX_LI_DEATHBENEFITWITHINDEX:1
   : load 0 ; T
   : callnodecalcsum 8 83 1 1 ;  node Main_results calc PX_LI_PROFITYEARWITHINDEX:1
   : add
   : return
.formuladone
.formula formula=147 simple=false ; line 1039
   //start of if statement, line 1039
   : load 0 ; T
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : cmpbig
   : iffalse L0
   : pushconst "done"
   : builtin 80 1 ; ERROR
   : goto L1
 L0:
   : pushconst 0
   : load 0 ; T
   : pushconst 1
   : add
   : callnodecalcsum 8 163 2 1 ;  node Main_results calc P_LI_PROFITSUM_:2
   : load 0 ; T
   : callnodecalcsum 8 105 1 1 ;  node Main_results calc PX_LI_TOTALSUMLAYER:1
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=148 simple=false ; line 1059
   : load 0 ; T
   : callnodecalcsum 8 79 1 1 ;  node Main_results calc PX_LI_SURRENDERVALUEWITHINDEX:1
   : load 0 ; T
   : callnodecalcsum 8 83 1 1 ;  node Main_results calc PX_LI_PROFITYEARWITHINDEX:1
   : add
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=149 simple=false ; line 1070
   //start of if statement, line 1070
   : load 0 ; T
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : cmpbig
   : iffalse L0
   : pushconst "done"
   : builtin 80 1 ; ERROR
   : goto L1
 L0:
   : pushconst 0
   : callnodecalcsum 8 206 1 1 ;  node Main_results calc P_LI_AGE_:1
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : pushconst 0
   : callnodecalcsum 8 207 1 1 ;  node Main_results calc P_LI_IRATE_:1
   : pushconst 0
   : callnodecalcsum 8 208 1 1 ;  node Main_results calc P_LI_RISK_:1
   : load 0 ; T
   : pushconst 1
   : add
   : load 0 ; T
   : callnodecalcsum 8 79 1 1 ;  node Main_results calc PX_LI_SURRENDERVALUEWITHINDEX:1
   : callfunc 52 8 ; F_LI_REDUCEDSUM
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 0
   : builtin 26 2 ; MAX
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=150 simple=false ; line 1109
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 221 2 1 ;  node Main_results calc P_LI_RIDERSUM:2
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=151 simple=false ; line 1118
   //start of if statement, line 1118
   : load 1 ; INDLAYER
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; I
   : callnodecalcsum 8 86 1 1 ;  node Main_results calc PX_LI_RIDERSUM:1
   : goto L1
 L0:
   //start of if statement, line 1127
   : load 0 ; I
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : callfunc 73 1 ; F_LI_RIDERPRODUCT_INDEXATION_PERC
   : pushconst 0
   : eq
   : iftrue L5
 L4:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : builtin 1 1 ; NOT
   : iftrue L5
   : goto L6
 L5:
   : pushconst1
   : goto L7
 L6:
   : pushconst0
 L7:
   : iffalse L2
   : pushconst 0
   : goto L3
 L2:
   : load 0 ; I
   : load 1 ; INDLAYER
   : callnodecalcsum 8 104 1 1 ;  node Main_results calc PX_LI_SUMLAYER:1
   : callnodecalcsum 8 221 2 1 ;  node Main_results calc P_LI_RIDERSUM:2
   : callfunc 126 1 ; F_ROUND2RHD
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=152 simple=false ; line 1149
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 1 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 1 ; CURRENT_I
   : load 0 ; SUM
   : callnodecalcsum 8 132 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMFREQUNROUNDED:2
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : return
.formuladone
.formula formula=153 simple=false ; line 1157
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 1 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 1 ; CURRENT_I
   : load 0 ; SUM
   : callnodecalcsum 8 133 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMFREQ:2
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : return
.formuladone
.formula formula=154 simple=false ; line 1165
   : callnodecalcsum 8 67 0 1 ;  node Main_results calc PX_LI_RIDERPREMIUMFREQTOTAL:0
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : mult
   : return
.formuladone
.formula formula=155 simple=false ; line 1167
   // start of loop statement
   // init result
   : pushconst0
   : store 1
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 0 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 0 ; CURRENT_I
   : callnodecalcsum 8 137 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEARTAX:1
   : load 1 ; load result
   : add
   : store 1 ; store updated result
   // update counter and test
   : load 0
   : pushconst 1
   : add
   : dup
   : store 0
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 1
   // end of loop
   : return
.formuladone
.formula formula=156 simple=false ; line 1174
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 125 1 1 ;  node Main_results calc P_LI_SUMRIDERPREMIUM:1
   : return
.formuladone
.formula formula=157 simple=false ; line 1179
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 126 1 1 ;  node Main_results calc P_LI_SUMRIDERPREMIUM_ROUNDED:1
   : return
.formuladone
.formula formula=158 simple=false ; line 1184
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 219 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEAR:2
   : return
.formuladone
.formula formula=159 simple=false ; line 1190
   //start of if statement, line 1190
   : load 1 ; INDLAYER
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; I
   : callnodecalcsum 8 61 0 1 ;  node Main_results calc PX_LI_SUM:0
   : callnodecalcsum 8 219 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEAR:2
   : goto L1
 L0:
   //start of if statement, line 1200
   : load 0 ; I
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : callfunc 73 1 ; F_LI_RIDERPRODUCT_INDEXATION_PERC
   : pushconst 0
   : eq
   : iftrue L5
 L4:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : builtin 1 1 ; NOT
   : iftrue L5
   : goto L6
 L5:
   : pushconst1
   : goto L7
 L6:
   : pushconst0
 L7:
   : iffalse L2
   : pushconst 0
   : goto L3
 L2:
   : load 0 ; I
   : load 1 ; INDLAYER
   : callnodecalcsum 8 104 1 1 ;  node Main_results calc PX_LI_SUMLAYER:1
   : callnodecalcsum 8 219 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEAR:2
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=160 simple=false ; line 1219
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 132 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMFREQUNROUNDED:2
   : return
.formuladone
.formula formula=161 simple=false ; line 1229
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalcsum 8 219 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEAR:2
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : return
.formuladone
.formula formula=162 simple=false ; line 1238
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalcsum 8 219 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEAR:2
   : pushconst 12
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=163 simple=false ; line 1246
   : load 0 ; I
   : callnodecalcsum 8 129 1 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEARUNROUNDED:1
   : pushconst 12
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=164 simple=false ; line 1255
   : load 0 ; I
   : load 1 ; INDLAYER
   : callnodecalcsum 8 130 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEARUNROUNDED_:2
   : pushconst 12
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=165 simple=false ; line 1257
   : load 0 ; I
   : callnodecalcsum 8 88 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMFREQ:1
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=166 simple=false ; line 1265
   : load 0 ; I
   : load 1 ; INDLAYER
   : callnodecalcsum 8 134 2 1 ;  node Main_results calc PX_LI_RIDERPREMIUMFREQ_:2
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=167 simple=false ; line 1281
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 220 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEARBASE:2
   : pushconst 12
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=168 simple=false ; line 1290
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 220 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMYEARBASE:2
   : pushconst 12
   : div
   : callfunc 126 1 ; F_ROUND2RHD
   : pushconst 12
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : div
   : mult
   : return
.formuladone
.formula formula=169 simple=false ; line 1292
   : load 0 ; I
   : callnodecalcsum 8 87 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEAR:1
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 223 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMTAXFACT:2
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=170 simple=false ; line 1304
   : load 0 ; I
   : callnodecalcsum 8 87 1 1 ;  node Main_results calc PX_LI_RIDERPREMIUMYEAR:1
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 223 2 1 ;  node Main_results calc P_LI_RIDERPREMIUMTAXFACT:2
   : mult
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=171 simple=false ; line 1316
   : load 0 ; I
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 214 2 1 ;  node Main_results calc P_LI_RIDERDATA_LEN:2
   : return
.formuladone
.formula formula=172 simple=false ; line 1322
   : load 0 ; I
   : load 1 ; J
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 215 3 1 ;  node Main_results calc P_LI_RIDERDATA_KEY:3
   : return
.formuladone
.formula formula=173 simple=false ; line 1329
   : load 0 ; I
   : load 1 ; J
   : callnodecalcsum 8 143 0 1 ;  node Main_results calc P_LI_SUM:0
   : callnodecalcsum 8 216 3 1 ;  node Main_results calc P_LI_RIDERDATA_VALUE:3
   : return
.formuladone
.formula formula=174 simple=false ; line 1336
   //start of if statement, line 1339
   : load 0 ; I
   : callnodecalcsum 8 139 1 1 ;  node Main_results calc PX_LI_RIDERDATA_LEN:1
   : pushconst 0
   : cmpsmleq
   : iffalse L0
   : pushconst ""
   : goto L1
 L0:
   // start of loop statement
   : load 0 ; I
   : callnodecalcsum 8 139 1 1 ;  node Main_results calc PX_LI_RIDERDATA_LEN:1
   : pushconst 1
   : sub
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 3
   : dup
   : store 1 ; store counter
   : over
   : ifsml L3
 L2:
   : load 3 ; load result
   : load 0 ; I
   : load 1 ; CURRENT_J
   : callnodecalcsum 8 140 2 1 ;  node Main_results calc PX_LI_RIDERDATA_KEY:2
   : pushconst "="
   : sappend
   : load 0 ; I
   : load 1 ; CURRENT_J
   : callnodecalcsum 8 141 2 1 ;  node Main_results calc PX_LI_RIDERDATA_VALUE:2
   : sappend
   : listappendelem1
   : store 3 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifbigeq L2
 L3:
   : pop ; pop value_to
   : load 3
   // end of loop
   : pushconst ", "
   : builtin 70 2 ; V_STRING
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=175 simple=false ; line 1363
   : getinput0 15 ; A_LI_BASECODE
   : dup
   : pushconst 1.0
   : ifnumequal L0
   : dup
   : pushconst 2.0
   : ifnumequal L1
   : dup
   : pushconst 3.0
   : ifnumequal L2
   : dup
   : pushconst 4.0
   : ifnumequal L3
   : goto L4
 L0: 
   : pop
   : getinput0 16 ; A_LI_BASEVALUE
   : goto L5
 L1: 
   : pop
   //start of if statement, line 1368
   : getinput0 24 ; A_LI_RIDERS
   : pushconst 0
   : eq
   : iffalse L6
   : callnodecalcsum 8 144 0 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMANAL:0
   : goto L7
 L6:
   : callnodecalcsum 8 145 0 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMITER:0
 L7:
   //end of if statement
   : goto L5
 L2: 
   : pop
   //start of if statement, line 1375
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L8
   : callnodecalcsum 8 157 0 1 ;  node Main_results calc P_LI_SUMFROMSUMPROFITWITHINDEXITER:0
   : goto L9
 L8:
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 1
   : pushconst 0
   : callnodecalcsum 8 164 1 1 ;  node Main_results calc P_LI_PROFIT_:1
   : add
   : div
 L9:
   //end of if statement
   : goto L5
 L3: 
   : pop
   //start of if statement, line 1385
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L10
   : callnodecalcsum 8 153 0 1 ;  node Main_results calc P_LI_SUMFROMSUMWITHINDEXITER:0
   : goto L11
 L10:
   : getinput0 16 ; A_LI_BASEVALUE
 L11:
   //end of if statement
   : goto L5
 L4:
   : pop
   : pushconst "unknown calculation base code: "
   : getinput0 15 ; A_LI_BASECODE
   : sappend
   : builtin 80 1 ; ERROR
   : goto L5
 L5:
   : callfunc 126 1 ; F_ROUND2RHD
   : return
.formuladone
.formula formula=176 simple=false ; line 1401
   : pushconst 0
   : callnodecalcsum 8 206 1 1 ;  node Main_results calc P_LI_AGE_:1
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : getinput0 16 ; A_LI_BASEVALUE
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : pushconst 0
   : callnodecalcsum 8 207 1 1 ;  node Main_results calc P_LI_IRATE_:1
   : pushconst 0
   : callnodecalcsum 8 208 1 1 ;  node Main_results calc P_LI_RISK_:1
   : getinput0 8 ; A_LI_CHANNEL
   : getinput0 5 ; A_LI_CURRENCY
   : callnodecalcsum 8 60 0 1 ;  node Main_results calc PX_LI_TARIFFGENERATION:0
   : pushconst 0
   : callfunc 30 12 ; F_LI_SUMFROMPREMOIP
   : return
.formuladone
.formula formula=177 simple=false ; line 1426
   : getinput0 16 ; A_LI_BASEVALUE
   : callnodecalcsum 8 146 0 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMITER1:0
   : callnodecalcsum 8 146 0 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMITER1:0
   : callfunc 125 1 ; F_CUT0RHD
   : callnodecalcsum 8 146 0 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMITER1:0
   : callfunc 125 1 ; F_CUT0RHD
   : pushconst 1
   : add
   : callnodecalcsum 8 147 4 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMITERSELECT:4
   : return
.formuladone
.formula formula=178 simple=false ; line 1440
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 0
   : getinput0 16 ; A_LI_BASEVALUE
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : mult
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : pushconst 1
   : builtin 26 2 ; MAX
   : mult
   : pushconst 1
   : callnodecalcsum 8 5 0 1 ;  node Main_results calc P_LI_IRATE:0
   : add
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : power
   : mult
   : pushconst 0.004
   : pushconst 100
   : callnodecalcsum 8 149 5 1 ;  node Main_results calc P_LI_SOLVE_SEC_PREM:5
   : return
.formuladone
.formula formula=179 simple=false ; line 1453
   : load 0 ; PREMTARGET
   : load 1 ; SUM
   : load 1 ; SUM
   : callnodecalcsum 8 152 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_ROUNDED_PREM:1
   : load 2 ; SUM_VAR1
   : load 2 ; SUM_VAR1
   : callnodecalcsum 8 152 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_ROUNDED_PREM:1
   : load 3 ; SUM_VAR2
   : load 3 ; SUM_VAR2
   : callnodecalcsum 8 152 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_ROUNDED_PREM:1
   : callnodecalcsum 8 148 7 1 ;  node Main_results calc P_LI_SUMFROMPREMIUMITERSELECT1:7
   : return
.formuladone
.formula formula=180 simple=false ; line 1473
   //start of if statement, line 1476
   : load 6 ; PREM_VAR2
   : load 0 ; PREMTARGET
   : sub
   : builtin 30 1 ; ABS
   : pushconst 0.001
   : cmpsml
   : iffalse L0
   : load 5 ; SUM_VAR2
   : goto L1
 L0:
   //start of if statement, line 1482
   : load 4 ; PREM_VAR1
   : load 0 ; PREMTARGET
   : sub
   : builtin 30 1 ; ABS
   : pushconst 0.001
   : cmpsml
   : iffalse L2
   : load 3 ; SUM_VAR1
   : goto L3
 L2:
   : load 0 ; PREMTARGET
   : load 2 ; PREM
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; SUM
   : builtin 53 2 ; V_
   : load 0 ; PREMTARGET
   : load 4 ; PREM_VAR1
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; SUM_VAR1
   : builtin 53 2 ; V_
   : load 0 ; PREMTARGET
   : load 6 ; PREM_VAR2
   : sub
   : builtin 30 1 ; ABS
   : load 5 ; SUM_VAR2
   : builtin 53 2 ; V_
   : builtin 53 3 ; V_
   : builtin 64 1 ; V_MAX
   : pushconst 1
   : builtin 57 2 ; E_
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=181 simple=false ; line 1524
   : load 0 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : pushconst 0
   : load 1 ; XMIN
   : load 2 ; XMAX
   : load 1 ; XMIN
   : callnodecalcsum 8 151 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_PREM:1
   : load 2 ; XMAX
   : callnodecalcsum 8 151 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_PREM:1
   : callnodecalcsum 8 150 8 1 ;  node Main_results calc P_LI_SOLVE_SEC0_PREM:8
   : return
.formuladone
.formula formula=182 simple=false ; line 1542
   //start of if statement, line 1548
   : load 2 ; NITER
   : pushconst 0
   : cmpbig
   : iffalse L7
 L8:
   : load 3 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : load 2 ; NITER
   : cmpbig
   : iffalse L7
   : goto L3
 L7:
   : load 4 ; X1
   : load 5 ; X2
   : eq
   : iftrue L3
 L9:
   : load 7 ; FX2
   : load 0 ; TARGET
   : eq
   : iftrue L3
   : goto L6
 L6:
   : load 1 ; TOLERANCE
   : pushconst 0
   : cmpsml
   : iffalse L2
 L10:
   : load 4 ; X1
   : load 5 ; X2
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; TOLERANCE
   : cmpsml
   : iffalse L2
   : goto L3
 L2:
   : load 1 ; TOLERANCE
   : pushconst 0
   : cmpbig
   : iffalse L4
 L11:
   : load 7 ; FX2
   : load 0 ; TARGET
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; TOLERANCE
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 3 ; VEC
   : load 5 ; X2
   : load 7 ; FX2
   : load 4 ; X1
   : load 6 ; FX1
   : pushconst "sec"
   : builtin 53 5 ; V_
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : builtin 53 4 ; V_
   : callfunc 12 3 ; F_LI_SOLVE_RESULT
   : goto L1
 L0:
   : load 0 ; TARGET
   : load 1 ; TOLERANCE
   : load 2 ; NITER
   : load 3 ; VEC
   : load 5 ; X2
   : load 7 ; FX2
   : load 4 ; X1
   : load 6 ; FX1
   : builtin 53 4 ; V_
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 5 ; X2
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : load 0 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : load 7 ; FX2
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : load 0 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : callnodecalcsum 8 151 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_PREM:1
   : callnodecalcsum 8 150 8 1 ;  node Main_results calc P_LI_SOLVE_SEC0_PREM:8
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=183 simple=false ; line 1625
   : pushconst 0
   : load 0 ; SUM
   : callnodecalcsum 8 6 0 1 ;  node Main_results calc P_LI_RISK:0
   : callnodecalcsum 8 173 3 1 ;  node Main_results calc P_LI_PREMIUMOIP_:3
   : load 0 ; SUM
   : callnodecalcsum 8 125 1 1 ;  node Main_results calc P_LI_SUMRIDERPREMIUM:1
   : add
   : return
.formuladone
.formula formula=184 simple=false ; line 1634
   : pushconst 0
   : load 0 ; SUM
   : callnodecalcsum 8 112 2 1 ;  node Main_results calc P_LI_PREMIUMFREQLAYER:2
   : load 0 ; SUM
   : callnodecalcsum 8 126 1 1 ;  node Main_results calc P_LI_SUMRIDERPREMIUM_ROUNDED:1
   : add
   : return
.formuladone
.formula formula=185 simple=false ; line 1639
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 0
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 10
   : mult
   : pushconst 0.04
   : pushconst 100
   : callnodecalcsum 8 154 5 1 ;  node Main_results calc P_LI_SOLVE_SEC_SUMWITHINDEX:5
   : return
.formuladone
.formula formula=186 simple=false ; line 1648
   : load 0 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : pushconst 0
   : load 1 ; XMIN
   : load 2 ; XMAX
   : load 1 ; XMIN
   : callnodecalcsum 8 156 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_SUMWITHINDEX:1
   : load 2 ; XMAX
   : callnodecalcsum 8 156 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_SUMWITHINDEX:1
   : callnodecalcsum 8 155 8 1 ;  node Main_results calc P_LI_SOLVE_SEC0_SUMWITHINDEX:8
   : return
.formuladone
.formula formula=187 simple=false ; line 1666
   //start of if statement, line 1672
   : load 2 ; NITER
   : pushconst 0
   : cmpbig
   : iffalse L7
 L8:
   : load 3 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : load 2 ; NITER
   : cmpbig
   : iffalse L7
   : goto L3
 L7:
   : load 4 ; X1
   : load 5 ; X2
   : eq
   : iftrue L3
 L9:
   : load 7 ; FX2
   : load 0 ; TARGET
   : eq
   : iftrue L3
   : goto L6
 L6:
   : load 1 ; TOLERANCE
   : pushconst 0
   : cmpsml
   : iffalse L2
 L10:
   : load 4 ; X1
   : load 5 ; X2
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; TOLERANCE
   : cmpsml
   : iffalse L2
   : goto L3
 L2:
   : load 1 ; TOLERANCE
   : pushconst 0
   : cmpbig
   : iffalse L4
 L11:
   : load 7 ; FX2
   : load 0 ; TARGET
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; TOLERANCE
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 3 ; VEC
   : load 5 ; X2
   : load 7 ; FX2
   : load 4 ; X1
   : load 6 ; FX1
   : pushconst "sec"
   : builtin 53 5 ; V_
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : builtin 53 4 ; V_
   : callfunc 12 3 ; F_LI_SOLVE_RESULT
   : goto L1
 L0:
   : load 0 ; TARGET
   : load 1 ; TOLERANCE
   : load 2 ; NITER
   : load 3 ; VEC
   : load 5 ; X2
   : load 7 ; FX2
   : load 4 ; X1
   : load 6 ; FX1
   : builtin 53 4 ; V_
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 5 ; X2
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : load 0 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : load 7 ; FX2
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : load 0 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : callnodecalcsum 8 156 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_SUMWITHINDEX:1
   : callnodecalcsum 8 155 8 1 ;  node Main_results calc P_LI_SOLVE_SEC0_SUMWITHINDEX:8
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=188 simple=false ; line 1744
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 1
   : sub
   : load 0 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   : return
.formuladone
.formula formula=189 simple=false ; line 1750
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 0
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 10
   : mult
   : pushconst 0.4
   : pushconst 100
   : callnodecalcsum 8 158 5 1 ;  node Main_results calc P_LI_SOLVE_SEC_SUMPROFITWITHINDEX:5
   : return
.formuladone
.formula formula=190 simple=false ; line 1759
   : load 0 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : pushconst 0
   : load 1 ; XMIN
   : load 2 ; XMAX
   : load 1 ; XMIN
   : callnodecalcsum 8 160 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_SUMPROFITWITHINDEX:1
   : load 2 ; XMAX
   : callnodecalcsum 8 160 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_SUMPROFITWITHINDEX:1
   : callnodecalcsum 8 159 8 1 ;  node Main_results calc P_LI_SOLVE_SEC0_SUMPROFITWITHINDEX:8
   : return
.formuladone
.formula formula=191 simple=false ; line 1777
   //start of if statement, line 1783
   : load 2 ; NITER
   : pushconst 0
   : cmpbig
   : iffalse L7
 L8:
   : load 3 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : load 2 ; NITER
   : cmpbig
   : iffalse L7
   : goto L3
 L7:
   : load 4 ; X1
   : load 5 ; X2
   : eq
   : iftrue L3
 L9:
   : load 7 ; FX2
   : load 0 ; TARGET
   : eq
   : iftrue L3
   : goto L6
 L6:
   : load 1 ; TOLERANCE
   : pushconst 0
   : cmpsml
   : iffalse L2
 L10:
   : load 4 ; X1
   : load 5 ; X2
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; TOLERANCE
   : cmpsml
   : iffalse L2
   : goto L3
 L2:
   : load 1 ; TOLERANCE
   : pushconst 0
   : cmpbig
   : iffalse L4
 L11:
   : load 7 ; FX2
   : load 0 ; TARGET
   : sub
   : builtin 30 1 ; ABS
   : load 1 ; TOLERANCE
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 3 ; VEC
   : load 5 ; X2
   : load 7 ; FX2
   : load 4 ; X1
   : load 6 ; FX1
   : pushconst "sec"
   : builtin 53 5 ; V_
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : builtin 53 4 ; V_
   : callfunc 12 3 ; F_LI_SOLVE_RESULT
   : goto L1
 L0:
   : load 0 ; TARGET
   : load 1 ; TOLERANCE
   : load 2 ; NITER
   : load 3 ; VEC
   : load 5 ; X2
   : load 7 ; FX2
   : load 4 ; X1
   : load 6 ; FX1
   : builtin 53 4 ; V_
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 5 ; X2
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : load 0 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : load 7 ; FX2
   : load 4 ; X1
   : load 5 ; X2
   : load 6 ; FX1
   : load 7 ; FX2
   : load 0 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : callnodecalcsum 8 160 1 1 ;  node Main_results calc P_LI_SOLVE_CALLF_SUMPROFITWITHINDEX:1
   : callnodecalcsum 8 159 8 1 ;  node Main_results calc P_LI_SOLVE_SEC0_SUMPROFITWITHINDEX:8
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=192 simple=false ; line 1859
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 1
   : sub
   : load 0 ; SUM
   : callnodecalcsum 8 102 2 1 ;  node Main_results calc P_LI_TOTALSUMLAYER:2
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 1
   : sub
   : pushconst 0
   : dup
   : store 1 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 1 ; CURRENT_INDLAYER
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : load 1 ; CURRENT_INDLAYER
   : sub
   : callnodecalcsum 8 163 2 1 ;  node Main_results calc P_LI_PROFITSUM_:2
   : load 1 ; CURRENT_INDLAYER
   : load 0 ; SUM
   : callnodecalcsum 8 103 2 1 ;  node Main_results calc P_LI_SUMLAYER:2
   : mult
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : add
   : return
.formuladone
.formula formula=193 simple=true ; line 8
   : getinput0 17 ; A_LI_MAINLAYERS
   : return
.formuladone
.formula formula=194 simple=false ; line 1877
   //start of if statement, line 1877
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : pushconst 2
   : cmpsmleq
   : iftrue L3
 L2:
   : load 0 ; T
   : pushconst 0
   : eq
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   : load 0 ; T
   : pushconst 1
   : sub
   : callnodecalc 11 44 1 ;  node Surrender_Benefit calc P_LI_RESERVETECHNICAL:1
   : pushconst 0
   : builtin 26 2 ; MAX
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=195 simple=false ; line 1894
   : load 0 ; T
   : callnodecalc 10 47 1 ;  node Profit_Calculation calc P_LI_PROFITBASE:1
   : load 0 ; T
   : callnodecalc 10 51 1 ;  node Profit_Calculation calc P_LI_PROFITRATE:1
   : mult
   : return
.formuladone
.formula formula=196 simple=false ; line 1899
   //start of if statement, line 1899
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : pushconst 3
   : cmpsml
   : iftrue L3
 L2:
   : load 0 ; T
   : pushconst 0
   : eq
   : iftrue L3
   : goto L4
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   : load 0 ; T
   : callnodecalc 10 48 1 ;  node Profit_Calculation calc P_LI_PROFITNEW:1
   : load 0 ; T
   : pushconst 1
   : sub
   : callnodecalc 10 49 1 ;  node Profit_Calculation calc P_LI_PROFITSUM:1
   : pushconst 1
   : callnodecalc 10 52 0 ;  node Profit_Calculation calc P_LI_PROFITINTERESTRATE:0
   : add
   : load 0 ; T
   : callnodecalc 10 51 1 ;  node Profit_Calculation calc P_LI_PROFITRATE:1
   : add
   : mult
   : add
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=197 simple=false ; line 1915
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : callnodecalc 10 49 1 ;  node Profit_Calculation calc P_LI_PROFITSUM:1
   : return
.formuladone
.formula formula=198 simple=false ; line 1923
   : callfunc 104 0 ; F_LI_PROFIT_SHARING
   : getinput0 5 ; A_LI_CURRENCY
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : builtin 51 1 ; YEAR
   : load 0 ; T
   : add
   : callfunc 103 2 ; F_LI_PROFIT_RATE
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : sub
   : mult
   : pushconst 0
   : builtin 26 2 ; MAX
   : return
.formuladone
.formula formula=199 simple=false ; line 1936
   : getinput0 5 ; A_LI_CURRENCY
   : callfunc 102 1 ; F_LI_PROFIT_IRATE
   : return
.formuladone
.formula formula=200 simple=false ; line 1941
   //start of if statement, line 1941
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 10 47 1 ;  node Profit_Calculation calc P_LI_PROFITBASE:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=201 simple=false ; line 1951
   //start of if statement, line 1951
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 10 48 1 ;  node Profit_Calculation calc P_LI_PROFITNEW:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=202 simple=false ; line 1961
   //start of if statement, line 1961
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 10 49 1 ;  node Profit_Calculation calc P_LI_PROFITSUM:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=203 simple=false ; line 1971
   //start of if statement, line 1971
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 10 50 0 ;  node Profit_Calculation calc P_LI_PROFIT:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=204 simple=false ; line 1978
   //start of if statement, line 1978
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 10 51 1 ;  node Profit_Calculation calc P_LI_PROFITRATE:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=205 simple=false ; line 1988
   //start of if statement, line 1988
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 10 52 0 ;  node Profit_Calculation calc P_LI_PROFITINTERESTRATE:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=206 simple=false ; line 1998
   : callnodecalc 13 210 0 ;  node Age_etc calc P_LI_AGEMAINLAYER:0
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : callfunc 44 7 ; F_LI_RESERVENET
   : return
.formuladone
.formula formula=207 simple=false ; line 2009
   : callnodecalc 13 210 0 ;  node Age_etc calc P_LI_AGEMAINLAYER:0
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushconst 0
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : callfunc 45 10 ; F_LI_RESERVEZILLMER
   : return
.formuladone
.formula formula=208 simple=false ; line 2023
   : callnodecalc 13 210 0 ;  node Age_etc calc P_LI_AGEMAINLAYER:0
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : callfunc 46 7 ; F_LI_RESERVEGAMMA
   : return
.formuladone
.formula formula=209 simple=false ; line 2034
   : callnodecalc 13 210 0 ;  node Age_etc calc P_LI_AGEMAINLAYER:0
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushconst 0
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : callfunc 47 10 ; F_LI_RESERVETECHNICAL
   : return
.formuladone
.formula formula=210 simple=false ; line 2048
   : callnodecalc 13 210 0 ;  node Age_etc calc P_LI_AGEMAINLAYER:0
   : getinput0 10 ; A_LI_SEX
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushconst 0
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : callfunc 50 12 ; F_LI_SURRENDERVALUE
   : return
.formuladone
.formula formula=211 simple=false ; line 2064
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : load 0 ; T
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : add
   : callfunc 51 3 ; F_LI_ACCRUALFACT
   : return
.formuladone
.formula formula=212 simple=false ; line 2071
   //start of if statement, line 2071
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 11 41 1 ;  node Surrender_Benefit calc P_LI_RESERVENET:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=213 simple=false ; line 2081
   //start of if statement, line 2081
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 11 42 1 ;  node Surrender_Benefit calc P_LI_RESERVEZILLMER:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=214 simple=false ; line 2091
   //start of if statement, line 2091
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 11 43 1 ;  node Surrender_Benefit calc P_LI_RESERVEGAMMA:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=215 simple=false ; line 2101
   //start of if statement, line 2101
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 11 44 1 ;  node Surrender_Benefit calc P_LI_RESERVETECHNICAL:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=216 simple=false ; line 2111
   //start of if statement, line 2111
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 11 45 1 ;  node Surrender_Benefit calc P_LI_SURRENDERVALUE:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=217 simple=false ; line 2121
   //start of if statement, line 2121
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 11 46 1 ;  node Surrender_Benefit calc P_LI_ACCRUALFACT:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=218 simple=false ; line 2134
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : load 0 ; SUM
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : load 1 ; RISK
   : getinput0 8 ; A_LI_CHANNEL
   : getinput0 5 ; A_LI_CURRENCY
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 29 12 ; F_LI_PREMOIP
   : return
.formuladone
.formula formula=219 simple=false ; line 2156
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 31 9 ; F_LI_GROSSPREMIUM
   : return
.formuladone
.formula formula=220 simple=false ; line 2175
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 33 6 ; F_LI_NETPREMIUM
   : return
.formuladone
.formula formula=221 simple=false ; line 2191
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 41 9 ; F_LI_PREMALPHA
   : return
.formuladone
.formula formula=222 simple=false ; line 2210
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 42 9 ; F_LI_PREMBETA
   : return
.formuladone
.formula formula=223 simple=false ; line 2229
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 43 6 ; F_LI_PREMGAMMA
   : return
.formuladone
.formula formula=224 simple=false ; line 2245
   //start of if statement, line 2245
   : load 0 ; I
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; SUM
   : load 2 ; RISK
   : callnodecalc 12 35 2 ;  node Premium_calculation calc P_LI_PREMIUMOIP:2
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=225 simple=false ; line 2256
   //start of if statement, line 2256
   : load 0 ; I
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 36 0 ;  node Premium_calculation calc P_LI_GROSSPREMIUM:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=226 simple=false ; line 2263
   //start of if statement, line 2263
   : load 0 ; I
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 37 0 ;  node Premium_calculation calc P_LI_NETPREMIUM:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=227 simple=false ; line 2270
   //start of if statement, line 2270
   : load 0 ; I
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 38 0 ;  node Premium_calculation calc P_LI_PREMIUMALPHA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=228 simple=false ; line 2277
   //start of if statement, line 2277
   : load 0 ; I
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 39 0 ;  node Premium_calculation calc P_LI_PREMIUMBETA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=229 simple=false ; line 2284
   //start of if statement, line 2284
   : load 0 ; I
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 40 0 ;  node Premium_calculation calc P_LI_PREMIUMGAMMA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=230 simple=false ; line 2291
   : getinput0 5 ; A_LI_CURRENCY
   : callfunc 101 1 ; F_LI_IRATE
   : return
.formuladone
.formula formula=231 simple=false ; line 2296
   : load 0 ; T
   : pushconst 1
   : add
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : callfunc 105 3 ; F_LI_ALPHA
   : return
.formuladone
.formula formula=232 simple=false ; line 2303
   : load 0 ; T
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : callfunc 106 3 ; F_LI_ALPHAZILL
   : return
.formuladone
.formula formula=233 simple=false ; line 2310
   : callfunc 108 0 ; F_LI_BETA
   : return
.formuladone
.formula formula=234 simple=false ; line 2312
   : callfunc 109 0 ; F_LI_GAMMA
   : return
.formuladone
.formula formula=235 simple=false ; line 2314
   : callfunc 110 0 ; F_LI_GAMMADASH
   : return
.formuladone
.formula formula=236 simple=false ; line 2316
   : getinput0 5 ; A_LI_CURRENCY
   : callfunc 111 1 ; F_LI_DELTA
   : return
.formuladone
.formula formula=237 simple=false ; line 2321
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : callfunc 97 1 ; F_LI_PAYMENTFREQUENCYFACT
   : return
.formuladone
.formula formula=238 simple=false ; line 2326
   : callfunc 114 0 ; F_LI_SUPERVISIONLEVY
   : return
.formuladone
.formula formula=239 simple=false ; line 2328
   : callfunc 113 0 ; F_LI_GUARANTEEFUNDCONTRIBUTION
   : return
.formuladone
.formula formula=240 simple=false ; line 2330
   : callfunc 114 0 ; F_LI_SUPERVISIONLEVY
   : callfunc 113 0 ; F_LI_GUARANTEEFUNDCONTRIBUTION
   : add
   : return
.formuladone
.formula formula=241 simple=false ; line 2332
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 58 3 ; F_LI_QX
   : return
.formuladone
.formula formula=242 simple=false ; line 2339
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 59 3 ; F_LI_LX
   : return
.formuladone
.formula formula=243 simple=false ; line 2346
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 60 4 ; F_LI_DX
   : return
.formuladone
.formula formula=244 simple=false ; line 2354
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 61 4 ; F_LI_NX
   : return
.formuladone
.formula formula=245 simple=false ; line 2362
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : callfunc 62 4 ; F_LI_MX
   : return
.formuladone
.formula formula=246 simple=false ; line 2370
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : load 0 ; T
   : callfunc 34 10 ; F_LI_ZILLMERPREMIUM
   : return
.formuladone
.formula formula=247 simple=false ; line 2390
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : load 0 ; T
   : sub
   : callfunc 55 5 ; F_LI_NAX
   : return
.formuladone
.formula formula=248 simple=false ; line 2402
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : load 0 ; T
   : sub
   : callfunc 56 5 ; F_LI_NEX
   : return
.formuladone
.formula formula=249 simple=false ; line 2417
   : load 0 ; T
   : callnodecalc 12 25 1 ;  node Premium_calculation calc P_LI_NAX:1
   : load 0 ; T
   : callnodecalc 12 26 1 ;  node Premium_calculation calc P_LI_NEX:1
   : add
   : return
.formuladone
.formula formula=250 simple=false ; line 2422
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : load 0 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : return
.formuladone
.formula formula=251 simple=false ; line 2434
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : load 0 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : return
.formuladone
.formula formula=252 simple=false ; line 2446
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : load 0 ; T
   : add
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : sub
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 93 1 ; F_LI_PAYMENTPERIODLAYER
   : load 0 ; T
   : sub
   : callfunc 54 6 ; F_LI_AEXN_K
   : return
.formuladone
.formula formula=253 simple=false ; line 2465
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : getinput0 8 ; A_LI_CHANNEL
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 35 8 ; F_LI_NEXALPHA
   : return
.formuladone
.formula formula=254 simple=false ; line 2480
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushconst 3
   : pushconst 2
   : callfunc 54 6 ; F_LI_AEXN_K
   : return
.formuladone
.formula formula=255 simple=false ; line 2490
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : callfunc 91 1 ; F_LI_TARIFFDURATIONLAYER
   : pushconst 5
   : sub
   : pushconst 5
   : builtin 25 2 ; MIN
   : pushconst 5
   : callfunc 54 6 ; F_LI_AEXN_K
   : return
.formuladone
.formula formula=256 simple=false ; line 2507
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : getinput0 10 ; A_LI_SEX
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : load 0 ; T
   : callfunc 56 5 ; F_LI_NEX
   : return
.formuladone
.formula formula=257 simple=false ; line 2516
   //start of if statement, line 2516
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 8 0 ;  node Premium_calculation calc P_LI_INTERESTRATE:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=258 simple=false ; line 2523
   //start of if statement, line 2523
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 9 1 ;  node Premium_calculation calc P_LI_ALPHA:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=259 simple=false ; line 2533
   //start of if statement, line 2533
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 10 1 ;  node Premium_calculation calc P_LI_ALPHAZILLMER:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=260 simple=false ; line 2543
   //start of if statement, line 2543
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 11 0 ;  node Premium_calculation calc P_LI_BETA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=261 simple=false ; line 2550
   //start of if statement, line 2550
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 12 0 ;  node Premium_calculation calc P_LI_GAMMA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=262 simple=false ; line 2557
   //start of if statement, line 2557
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 13 0 ;  node Premium_calculation calc P_LI_GAMMADASH:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=263 simple=false ; line 2564
   //start of if statement, line 2564
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 14 0 ;  node Premium_calculation calc P_LI_DELTA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=264 simple=false ; line 2571
   //start of if statement, line 2571
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 15 0 ;  node Premium_calculation calc P_LI_IFL:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=265 simple=false ; line 2578
   //start of if statement, line 2578
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 16 0 ;  node Premium_calculation calc P_LI_SL:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=266 simple=false ; line 2585
   //start of if statement, line 2585
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 17 0 ;  node Premium_calculation calc P_LI_GFC:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=267 simple=false ; line 2592
   //start of if statement, line 2592
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 18 0 ;  node Premium_calculation calc P_LI_TAXFACT:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=268 simple=false ; line 2599
   //start of if statement, line 2599
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 19 1 ;  node Premium_calculation calc P_LI_QX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=269 simple=false ; line 2609
   //start of if statement, line 2609
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 21 1 ;  node Premium_calculation calc P_LI_DX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=270 simple=false ; line 2619
   //start of if statement, line 2619
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 20 1 ;  node Premium_calculation calc P_LI_LX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=271 simple=false ; line 2629
   //start of if statement, line 2629
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 22 1 ;  node Premium_calculation calc P_LI_NX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=272 simple=false ; line 2639
   //start of if statement, line 2639
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 23 1 ;  node Premium_calculation calc P_LI_MX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=273 simple=false ; line 2649
   //start of if statement, line 2649
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 24 1 ;  node Premium_calculation calc P_LI_ZILLMERPREMIUM:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=274 simple=false ; line 2659
   //start of if statement, line 2659
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 25 1 ;  node Premium_calculation calc P_LI_NAX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=275 simple=false ; line 2669
   //start of if statement, line 2669
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 26 1 ;  node Premium_calculation calc P_LI_NEX:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=276 simple=false ; line 2679
   //start of if statement, line 2679
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 27 1 ;  node Premium_calculation calc P_LI_AXN:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=277 simple=false ; line 2689
   //start of if statement, line 2689
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 28 1 ;  node Premium_calculation calc P_LI_AEXK:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=278 simple=false ; line 2699
   //start of if statement, line 2699
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 29 1 ;  node Premium_calculation calc P_LI_AEXN:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=279 simple=false ; line 2709
   //start of if statement, line 2709
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 30 1 ;  node Premium_calculation calc P_LI_AEXN_K:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=280 simple=false ; line 2719
   //start of if statement, line 2719
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 31 0 ;  node Premium_calculation calc P_LI_SUMALPHA:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=281 simple=false ; line 2726
   //start of if statement, line 2726
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 32 0 ;  node Premium_calculation calc P_LI_AEX3_2:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=282 simple=false ; line 2733
   //start of if statement, line 2733
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : callnodecalc 12 33 0 ;  node Premium_calculation calc P_LI_AEX5_5:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=283 simple=false ; line 2740
   //start of if statement, line 2740
   : load 0 ; INDLAYER
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : eq
   : iffalse L0
   : load 1 ; T
   : callnodecalc 12 34 1 ;  node Premium_calculation calc P_LI_NEX_ALPHA:1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=284 simple=false ; line 2753
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : return
.formuladone
.formula formula=285 simple=false ; line 2759
   : getinput0 5 ; A_LI_CURRENCY
   : callfunc 101 1 ; F_LI_IRATE
   : return
.formuladone
.formula formula=286 simple=true ; line 2764
   : getinput0 13 ; A_LI_ADDRISK_PERC
   : pushconst 100
   : div
   : return
.formuladone
.formula formula=287 simple=false ; line 2766
   : getinput0 9 ; A_LI_CREATIONDATE
   : callfunc 68 1 ; F_LI_TARIFFGENERATION
   : return
.formuladone
.formula formula=288 simple=false ; line 2771
   //start of if statement, line 2771
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : load 0 ; I
   : eq
   : iffalse L0
   : callnodecalc 13 4 0 ;  node Age_etc calc P_LI_AGE:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=289 simple=false ; line 2778
   //start of if statement, line 2778
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : load 0 ; I
   : eq
   : iffalse L0
   : callnodecalc 13 5 0 ;  node Age_etc calc P_LI_IRATE:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=290 simple=false ; line 2785
   //start of if statement, line 2785
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : load 0 ; I
   : eq
   : iffalse L0
   : callnodecalc 13 6 0 ;  node Age_etc calc P_LI_RISK:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=291 simple=false ; line 2792
   //start of if statement, line 2792
   : pushtimescounter 0 ; CURRENT_A_LI_MAINLAYERS
   : load 0 ; I
   : eq
   : iffalse L0
   : callnodecalc 13 7 0 ;  node Age_etc calc P_LI_GEN:0
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=292 simple=false ; line 2799
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : pushconst 0
   : getinput 18 1 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : return
.formuladone
.formula formula=293 simple=true ; line 2808
   : getinput0 24 ; A_LI_RIDERS
   : return
.formuladone
.formula formula=294 simple=false ; line 2810
   : load 0 ; I
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : return
.formuladone
.formula formula=295 simple=false ; line 2812
   : load 0 ; I
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : callfunc 74 1 ; F_LI_RIDERPRODUCT_RIDERCODE
   : return
.formuladone
.formula formula=296 simple=false ; line 2817
   : load 0 ; I
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : callfunc 75 1 ; F_LI_RIDERPRODUCT_SPARTE
   : return
.formuladone
.formula formula=297 simple=false ; line 2822
   //start of if statement, line 2829
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 14 218 2 ;  node Riders calc P_LI_RIDERDATA_VEC1:2
   : builtin 63 1 ; V_LENGTH
   : pushconst 1
   : cmpbig
   : iffalse L0
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 14 218 2 ;  node Riders calc P_LI_RIDERDATA_VEC1:2
   : pushconst 1
   : builtin 57 2 ; E_
   : builtin 63 1 ; V_LENGTH
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=298 simple=false ; line 2847
   : load 0 ; I
   : load 2 ; SUM
   : callnodecalc 14 218 2 ;  node Riders calc P_LI_RIDERDATA_VEC1:2
   : pushconst 1
   : load 1 ; J
   : pushconst 0
   : builtin 57 4 ; E_
   : return
.formuladone
.formula formula=299 simple=false ; line 2859
   : load 0 ; I
   : load 2 ; SUM
   : callnodecalc 14 218 2 ;  node Riders calc P_LI_RIDERDATA_VEC1:2
   : pushconst 1
   : load 1 ; J
   : pushconst 1
   : builtin 57 4 ; E_
   : return
.formuladone
.formula formula=300 simple=false ; line 2871
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalclist 14 222 2 1 ;  node Riders calc P_LI_RIDERDATA:2
   : return
.formuladone
.formula formula=301 simple=false ; line 2877
   // start of loop statement
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 14 217 2 ;  node Riders calc P_LI_RIDERDATA_VEC:2
   : builtin 63 1 ; V_LENGTH
   : pushconst 1
   : sub
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 4
   : dup
   : store 2 ; store counter
   : over
   : ifsml L1
 L0:
   : load 4 ; load result
   //start of if statement, line 2885
   : load 2 ; CURRENT_J
   : pushconst 0
   : eq
   : iftrue L5
 L4:
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 14 217 2 ;  node Riders calc P_LI_RIDERDATA_VEC:2
   : load 2 ; CURRENT_J
   : builtin 57 2 ; E_
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : cmpbig
   : iftrue L5
   : goto L6
 L5:
   : pushconst1
   : goto L7
 L6:
   : pushconst0
 L7:
   : iffalse L2
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 14 217 2 ;  node Riders calc P_LI_RIDERDATA_VEC:2
   : load 2 ; CURRENT_J
   : builtin 57 2 ; E_
   : goto L3
 L2:
   : pushnull
 L3:
   //end of if statement
   : listappendelem1
   : store 4 ; store updated result
   // update counter and test
   : load 2
   : pushconst 1
   : add
   : dup
   : store 2
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 4
   // end of loop
   : return
.formuladone
.formula formula=302 simple=true ; line 2915
   : pushconst 0
   : return
.formuladone
.formula formula=303 simple=true ; line 2917
   : pushconst 0
   : return
.formuladone
.formula formula=304 simple=true ; line 2919
   : pushconst 0
   : return
.formuladone
.formula formula=305 simple=true ; line 2921
   : pushconst 0
   : return
.formuladone
.formula formula=306 simple=true ; line 2923
   : pushconst 0
   : return
.formuladone
.formula formula=307 simple=true ; line 2925
   : pushconst 0
   : return
.formuladone
.formula formula=308 simple=true ; line 19
   : getinput0 24 ; A_LI_RIDERS
   : return
.formuladone
.formula formula=309 simple=true ; line 20
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : pushconst 6105
   : eq
   : iftrue L1
 L0:
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : pushconst 6205
   : eq
   : iftrue L1
   : goto L2
 L1:
   : pushconst1
   : goto L3
 L2:
   : pushconst0
 L3:
   : pushconst 1
   : cmpseqi
   : return
.formuladone
.formula formula=310 simple=false ; line 2933
   //start of if statement, line 2933
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : pushconst "indexation_perc"
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : callfunc 73 1 ; F_LI_RIDERPRODUCT_INDEXATION_PERC
   : builtin 53 2 ; V_
   : builtin 53 1 ; V_
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=311 simple=false ; line 3035
   //start of if statement, line 3035
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 19 221 2 ;  node rider_calculation calc P_LI_RIDERSUM:2
   : getinput0 29 ; A_LI_RIDERADDRISKPROM
   : getinput0 30 ; A_LI_RIDERADDRISKPERC
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : callfunc 67 5 ; F_LI_PREMIUMRIDER
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=312 simple=false ; line 3053
   //start of if statement, line 3053
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalc 19 221 2 ;  node rider_calculation calc P_LI_RIDERSUM:2
   : pushconst 0
   : pushconst 0
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : callfunc 67 5 ; F_LI_PREMIUMRIDER
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=313 simple=false ; line 3071
   //start of if statement, line 3071
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : getinput0 27 ; A_LI_RIDERSUMCODE
   : getinput0 28 ; A_LI_RIDERSUMVALUE
   : getinput0 5 ; A_LI_CURRENCY
   : load 1 ; SUM
   : callfunc 70 5 ; F_LI_RIDERSUM
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=314 simple=false ; line 3085
   //start of if statement, line 3085
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : callfunc 113 0 ; F_LI_GUARANTEEFUNDCONTRIBUTION
   : callfunc 114 0 ; F_LI_SUPERVISIONLEVY
   : add
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=315 simple=true ; line 25
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : pushconst 6110
   : eq
   : iftrue L1
 L0:
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : pushconst 6210
   : eq
   : iftrue L1
   : goto L2
 L1:
   : pushconst1
   : goto L3
 L2:
   : pushconst0
 L3:
   : pushconst 1
   : cmpseqi
   : return
.formuladone
.formula formula=316 simple=false ; line 2956
   //start of if statement, line 2956
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : pushconst "indexation_perc"
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : callfunc 73 1 ; F_LI_RIDERPRODUCT_INDEXATION_PERC
   : builtin 53 2 ; V_
   : builtin 53 1 ; V_
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=317 simple=true ; line 30
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : pushconst 6115
   : eq
   : iftrue L1
 L0:
   : getinput0 25 ; A_LI_RIDERPRODUCT
   : pushconst 6215
   : eq
   : iftrue L1
   : goto L2
 L1:
   : pushconst1
   : goto L3
 L2:
   : pushconst0
 L3:
   : pushconst 1
   : cmpseqi
   : return
.formuladone
.formula formula=318 simple=false ; line 2979
   //start of if statement, line 2979
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : pushconst "wait_period"
   : pushconst 3
   : builtin 53 2 ; V_
   : pushconst "deduc_period"
   : pushconst 1
   : builtin 53 2 ; V_
   : pushconst "maxdays_year"
   : pushconst 180
   : builtin 53 2 ; V_
   : pushconst "maxdays_1acc"
   : pushconst 90
   : builtin 53 2 ; V_
   : pushconst "indexation_perc"
   : pushconst 0
   : builtin 53 2 ; V_
   : builtin 53 5 ; V_
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=319 simple=false ; line 3013
   //start of if statement, line 3013
   : load 0 ; I
   : pushtimescounter 1 ; CURRENT_A_LI_RIDERS
   : eq
   : iffalse L0
   : load 0 ; I
   : load 0 ; I
   : load 1 ; SUM
   : callnodecalcsum 22 221 2 1 ;  node Hospital_benefit calc P_LI_RIDERSUM:2
   : getinput0 5 ; A_LI_CURRENCY
   : callfunc 142 3 ; F_LI_CHECKRIDER_HOSPITAL_SUM
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=320 simple=false ; line 3328
   : load 0 ; X
   : pushconst 3
   : div
   : pushconst 3.14159265358979
   : pushconst 2
   : div
   : sub
   : builtin 37 1 ; SIN
   : pushconst 1
   : add
   : return
.formuladone
.formula formula=321 simple=false ; line 3330
   : pushconst "rfi"
   : pushconst 0 ; F_LI_SOLVE_TEST_F1   : pushconst 0
   : pushconst 1
   : pushconst 0
   : pushconst 6
   : pushconst 0.000000001
   : pushconst 20
   : callfunc 15 8 ; F_LI_SOLVE
   : builtin 71 1 ; V_STRINGX
   : return
.formuladone
.formula formula=322 simple=false ; line 3348
   : pushconst "sec"
   : pushconst 0 ; F_LI_SOLVE_TEST_F1   : pushconst 0
   : pushconst 1
   : pushconst 0
   : pushconst 6
   : pushconst 0.000000001
   : pushconst 20
   : callfunc 15 8 ; F_LI_SOLVE
   : builtin 71 1 ; V_STRINGX
   : return
.formuladone
.formula formula=323 simple=false ; line 3366
   : pushconst "bin"
   : pushconst 0 ; F_LI_SOLVE_TEST_F1   : pushconst 0
   : pushconst 1
   : pushconst 0
   : pushconst 6
   : pushconst 0.000000001
   : pushconst 20
   : callfunc 15 8 ; F_LI_SOLVE
   : builtin 71 1 ; V_STRINGX
   : return
.formuladone
.formula formula=324 simple=false ; line 3384
   : pushconst "rfi_bin"
   : pushconst 0 ; F_LI_SOLVE_TEST_F1   : pushconst 0
   : pushconst 1
   : pushconst 0
   : pushconst 6
   : pushconst 0.000000001
   : pushconst 20
   : callfunc 15 8 ; F_LI_SOLVE
   : builtin 71 1 ; V_STRINGX
   : return
.formuladone
.formula formula=325 simple=false ; line 3402
   //start of if statement, line 3405
   : load 0 ; VEC
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst "#NORESULT"
   : goto L1
 L0:
   : load 0 ; VEC
   : builtin 59 1 ; V_FIRST
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=326 simple=false ; line 3415
   //start of if statement, line 3418
   : load 0 ; VEC
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst "#NORESULT"
   : goto L1
 L0:
   : load 0 ; VEC
   : pushconst 0
   : builtin 57 2 ; E_
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=327 simple=false ; line 3429
   //start of if statement, line 3432
   : load 0 ; VEC
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst "#NORESULT"
   : goto L1
 L0:
   : load 0 ; VEC
   : pushconst 0
   : pushconst 1
   : builtin 57 3 ; E_
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=328 simple=false ; line 3444
   //start of if statement, line 3447
   : load 0 ; VEC
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   : load 0 ; VEC
   : pushconst 1
   : builtin 57 2 ; E_
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=329 simple=false ; line 3458
   //start of if statement, line 3461
   : load 0 ; VEC
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   : load 0 ; VEC
   : pushconst 2
   : builtin 57 2 ; E_
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=330 simple=false ; line 3472
   : load 0 ; VEC
   : load 1 ; V_RESULT
   : load 2 ; V_DATA
   : pushconst 0
   : callfunc 11 4 ; F_LI_SOLVE_ADD1
   : return
.formuladone
.formula formula=331 simple=false ; line 3480
   //start of if statement, line 3481
   : load 3 ; RESULT_BOOL
   : iffalse L0
   : load 1 ; V_RESULT
   : goto L1
 L0:
   : load 0 ; VEC
   : callfunc 5 1 ; F_LI_SOLVE_GET_RESULT
 L1:
   //end of if statement
   : load 0 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : pushconst 1
   : add
   //start of if statement, line 3494
   : callfunc 13 0 ; F_LI_SOLVE_TRACESWITCH
   : iffalse L2
   //start of if statement, line 3501
   : load 0 ; VEC
   : callfunc 9 1 ; F_LI_SOLVE_GET_TRACE
   : builtin 63 1 ; V_LENGTH
   : pushconst 0
   : cmpbig
   : iffalse L4
   : load 0 ; VEC
   : callfunc 9 1 ; F_LI_SOLVE_GET_TRACE
   : load 2 ; V_DATA
   : builtin 53 1 ; V_
   : builtin 54 2 ; V_CONCAT
   : goto L5
 L4:
   : load 2 ; V_DATA
   : builtin 53 1 ; V_
 L5:
   //end of if statement
   : goto L3
 L2:
   : pushconst "#tracelog_disabled_by_F_LI_solve_rf_traceswitch"
 L3:
   //end of if statement
   : builtin 53 3 ; V_
   : return
.formuladone
.formula formula=332 simple=false ; line 3527
   : load 0 ; VEC
   : load 1 ; V_RESULT
   : load 2 ; V_DATA
   : pushconst 1
   : callfunc 11 4 ; F_LI_SOLVE_ADD1
   : return
.formuladone
.formula formula=333 simple=true ; line 3535
   : pushconst 1
   : return
.formuladone
.formula formula=334 simple=true ; line 3537
   : load 2 ; X
   : load 1 ; F_DATA
   : load 0 ; F
   : calldynfunc 2   : return
.formuladone
.formula formula=335 simple=false ; line 3544
   : load 0 ; METHOD
   : dup
   : pushconst "sec"
   : ifseqi L0
   : dup
   : pushconst "rfi"
   : ifseqi L1
   : dup
   : pushconst "bin"
   : ifseqi L2
   : dup
   : pushconst "rfi_bin"
   : ifseqi L3
   : goto L4
 L0: 
   : pop
   : load 1 ; F
   : load 2 ; F_DATA
   : load 3 ; TARGET
   : load 4 ; XMIN
   : load 5 ; XMAX
   : load 6 ; TOLERANCE
   : load 7 ; NITER
   : callfunc 20 7 ; F_LI_SOLVE_SEC
   : goto L5
 L1: 
   : pop
   : load 1 ; F
   : load 2 ; F_DATA
   : load 3 ; TARGET
   : load 4 ; XMIN
   : load 5 ; XMAX
   : load 6 ; TOLERANCE
   : load 7 ; NITER
   : callfunc 16 7 ; F_LI_SOLVE_RFI
   : goto L5
 L2: 
   : pop
   : load 1 ; F
   : load 2 ; F_DATA
   : load 3 ; TARGET
   : load 4 ; XMIN
   : load 5 ; XMAX
   : load 6 ; TOLERANCE
   : load 7 ; NITER
   : callfunc 23 7 ; F_LI_SOLVE_BIN
   : goto L5
 L3: 
   : pop
   : load 1 ; F
   : load 2 ; F_DATA
   : load 3 ; TARGET
   : load 4 ; XMIN
   : load 5 ; XMAX
   : load 6 ; TOLERANCE
   : load 7 ; NITER
   : callfunc 26 7 ; F_LI_SOLVE_RFI_BIN
   : goto L5
 L4:
   : pop
   : pushconst "method '"
   : load 0 ; METHOD
   : sappend
   : pushconst "' not supported. Use one of 'sec'/'rfi'/'bin'/'rfi_bin'"
   : sappend
   : builtin 80 1 ; ERROR
   : goto L5
 L5:
   : return
.formuladone
.formula formula=336 simple=false ; line 3597
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 5 ; TOLERANCE
   : load 6 ; NITER
   : pushconst 0
   : load 3 ; XMIN
   : load 4 ; XMAX
   : load 0 ; F
   : load 1 ; F_DATA
   : load 3 ; XMIN
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : load 0 ; F
   : load 1 ; F_DATA
   : load 4 ; XMAX
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 17 10 ; F_LI_SOLVE_RFI0
   : return
.formuladone
.formula formula=337 simple=false ; line 3621
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : load 5 ; VEC
   : load 6 ; X1
   : load 7 ; X2
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; FX1
   : load 9 ; FX2
   : load 2 ; TARGET
   : callfunc 19 5 ; F_LI_SOLVE_RFI_INTERPOLZ
   : load 0 ; F
   : load 1 ; F_DATA
   : load 6 ; X1
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : load 0 ; F
   : load 1 ; F_DATA
   : load 7 ; X2
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : load 0 ; F
   : load 1 ; F_DATA
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; FX1
   : load 9 ; FX2
   : load 2 ; TARGET
   : callfunc 19 5 ; F_LI_SOLVE_RFI_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 18 12 ; F_LI_SOLVE_RFI1
   : return
.formuladone
.formula formula=338 simple=false ; line 3666
   //start of if statement, line 3672
   : load 4 ; NITER
   : pushconst 0
   : cmpbig
   : iffalse L7
 L8:
   : load 5 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : load 4 ; NITER
   : cmpbig
   : iffalse L7
   : goto L3
 L7:
   : load 6 ; X1
   : load 7 ; X2
   : eq
   : iftrue L3
 L9:
   : load 11 ; FZ
   : load 2 ; TARGET
   : eq
   : iftrue L3
   : goto L6
 L6:
   : load 3 ; TOLERANCE
   : pushconst 0
   : cmpsml
   : iffalse L2
 L10:
   : load 6 ; X1
   : load 7 ; X2
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; TOLERANCE
   : cmpsml
   : iffalse L2
   : goto L3
 L2:
   : load 3 ; TOLERANCE
   : pushconst 0
   : cmpbig
   : iffalse L4
 L11:
   : load 11 ; FZ
   : load 2 ; TARGET
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; TOLERANCE
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 5 ; VEC
   : load 8 ; Z
   : load 11 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : pushconst "rfi"
   : builtin 53 5 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FX1
   : load 10 ; FX2
   : load 11 ; FZ
   : builtin 53 6 ; V_
   : callfunc 12 3 ; F_LI_SOLVE_RESULT
   : goto L1
 L0:
   //start of if statement, line 3698
   : load 11 ; FZ
   : load 2 ; TARGET
   : sub
   : load 10 ; FX2
   : load 2 ; TARGET
   : sub
   : mult
   : pushconst 0
   : cmpsml
   : iffalse L12
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : load 5 ; VEC
   : load 8 ; Z
   : load 11 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : builtin 53 4 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FX1
   : load 10 ; FX2
   : load 11 ; FZ
   : builtin 53 6 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 7 ; X2
   : load 8 ; Z
   : load 7 ; X2
   : load 8 ; Z
   : load 10 ; FX2
   : load 11 ; FZ
   : load 2 ; TARGET
   : callfunc 19 5 ; F_LI_SOLVE_RFI_INTERPOLZ
   : load 10 ; FX2
   : load 11 ; FZ
   : load 0 ; F
   : load 1 ; F_DATA
   : load 7 ; X2
   : load 8 ; Z
   : load 10 ; FX2
   : load 11 ; FZ
   : load 2 ; TARGET
   : callfunc 19 5 ; F_LI_SOLVE_RFI_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 18 12 ; F_LI_SOLVE_RFI1
   : goto L13
 L12:
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : load 5 ; VEC
   : load 8 ; Z
   : load 11 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : builtin 53 4 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FX1
   : load 10 ; FX2
   : load 11 ; FZ
   : builtin 53 6 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 6 ; X1
   : load 8 ; Z
   : load 6 ; X1
   : load 8 ; Z
   : load 9 ; FX1
   : load 11 ; FZ
   : load 2 ; TARGET
   : callfunc 19 5 ; F_LI_SOLVE_RFI_INTERPOLZ
   : load 9 ; FX1
   : load 2 ; TARGET
   : sub
   : pushconst 0.5
   : mult
   : load 2 ; TARGET
   : add
   : load 8 ; Z
   : load 0 ; F
   : load 1 ; F_DATA
   : load 6 ; X1
   : load 8 ; Z
   : load 9 ; FX1
   : load 11 ; FZ
   : load 2 ; TARGET
   : callfunc 19 5 ; F_LI_SOLVE_RFI_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 18 12 ; F_LI_SOLVE_RFI1
 L13:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=339 simple=true ; line 3811
   : load 0 ; X1
   : load 2 ; FX1
   : load 4 ; TARGET
   : sub
   : load 1 ; X2
   : load 0 ; X1
   : sub
   : mult
   : load 3 ; FX2
   : load 2 ; FX1
   : sub
   : div
   : sub
   : return
.formuladone
.formula formula=340 simple=false ; line 3813
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 5 ; TOLERANCE
   : load 6 ; NITER
   : pushconst 0
   : load 3 ; XMIN
   : load 4 ; XMAX
   : load 0 ; F
   : load 1 ; F_DATA
   : load 3 ; XMIN
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : load 0 ; F
   : load 1 ; F_DATA
   : load 4 ; XMAX
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 21 10 ; F_LI_SOLVE_SEC0
   : return
.formuladone
.formula formula=341 simple=false ; line 3837
   //start of if statement, line 3843
   : load 4 ; NITER
   : pushconst 0
   : cmpbig
   : iffalse L7
 L8:
   : load 5 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : load 4 ; NITER
   : cmpbig
   : iffalse L7
   : goto L3
 L7:
   : load 6 ; X1
   : load 7 ; X2
   : eq
   : iftrue L3
 L9:
   : load 9 ; FX2
   : load 2 ; TARGET
   : eq
   : iftrue L3
   : goto L6
 L6:
   : load 3 ; TOLERANCE
   : pushconst 0
   : cmpsml
   : iffalse L2
 L10:
   : load 6 ; X1
   : load 7 ; X2
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; TOLERANCE
   : cmpsml
   : iffalse L2
   : goto L3
 L2:
   : load 3 ; TOLERANCE
   : pushconst 0
   : cmpbig
   : iffalse L4
 L11:
   : load 9 ; FX2
   : load 2 ; TARGET
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; TOLERANCE
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 5 ; VEC
   : load 7 ; X2
   : load 9 ; FX2
   : load 6 ; X1
   : load 8 ; FX1
   : pushconst "sec"
   : builtin 53 5 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; FX1
   : load 9 ; FX2
   : builtin 53 4 ; V_
   : callfunc 12 3 ; F_LI_SOLVE_RESULT
   : goto L1
 L0:
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : load 5 ; VEC
   : load 7 ; X2
   : load 9 ; FX2
   : load 6 ; X1
   : load 8 ; FX1
   : builtin 53 4 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; FX1
   : load 9 ; FX2
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 7 ; X2
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; FX1
   : load 9 ; FX2
   : load 2 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : load 9 ; FX2
   : load 0 ; F
   : load 1 ; F_DATA
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; FX1
   : load 9 ; FX2
   : load 2 ; TARGET
   : callfunc 22 5 ; F_LI_SOLVE_SEC_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 21 10 ; F_LI_SOLVE_SEC0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=342 simple=true ; line 3919
   : load 1 ; X2
   : load 3 ; FX2
   : load 4 ; TARGET
   : sub
   : load 1 ; X2
   : load 0 ; X1
   : sub
   : mult
   : load 3 ; FX2
   : load 2 ; FX1
   : sub
   : div
   : sub
   : return
.formuladone
.formula formula=343 simple=false ; line 3921
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 5 ; TOLERANCE
   : load 6 ; NITER
   : pushconst 0
   : load 3 ; XMIN
   : load 4 ; XMAX
   : load 3 ; XMIN
   : load 4 ; XMAX
   : callfunc 25 2 ; F_LI_SOLVE_BIN_INTERPOLZ
   : load 0 ; F
   : load 1 ; F_DATA
   : load 3 ; XMIN
   : load 4 ; XMAX
   : callfunc 25 2 ; F_LI_SOLVE_BIN_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 24 10 ; F_LI_SOLVE_BIN0
   : return
.formuladone
.formula formula=344 simple=false ; line 3948
   //start of if statement, line 3954
   : load 4 ; NITER
   : pushconst 0
   : cmpbig
   : iffalse L7
 L8:
   : load 5 ; VEC
   : callfunc 8 1 ; F_LI_SOLVE_GET_ITER
   : load 4 ; NITER
   : cmpbig
   : iffalse L7
   : goto L3
 L7:
   : load 6 ; X1
   : load 7 ; X2
   : cmpbigeq
   : iftrue L3
 L11:
   : load 6 ; X1
   : load 8 ; Z
   : eq
   : iftrue L3
   : goto L10
 L10:
   : load 7 ; X2
   : load 8 ; Z
   : eq
   : iftrue L3
   : goto L9
 L9:
   : load 9 ; FZ
   : load 2 ; TARGET
   : eq
   : iftrue L3
   : goto L6
 L6:
   : load 3 ; TOLERANCE
   : pushconst 0
   : cmpsml
   : iffalse L2
 L12:
   : load 6 ; X1
   : load 7 ; X2
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; TOLERANCE
   : cmpsml
   : iffalse L2
   : goto L3
 L2:
   : load 3 ; TOLERANCE
   : pushconst 0
   : cmpbig
   : iffalse L4
 L13:
   : load 9 ; FZ
   : load 2 ; TARGET
   : sub
   : builtin 30 1 ; ABS
   : load 3 ; TOLERANCE
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   //start of if statement, line 3958
   : load 6 ; X1
   : load 7 ; X2
   : cmpbig
   : iffalse L14
   : load 5 ; VEC
   : load 8 ; Z
   : load 9 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : builtin 53 4 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FZ
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : goto L15
 L14:
   : load 5 ; VEC
   : load 8 ; Z
   : load 9 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : pushconst "bin"
   : builtin 53 5 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FZ
   : builtin 53 4 ; V_
   : callfunc 12 3 ; F_LI_SOLVE_RESULT
 L15:
   //end of if statement
   : goto L1
 L0:
   //start of if statement, line 4000
   : load 9 ; FZ
   : load 2 ; TARGET
   : cmpsmleq
   : iffalse L16
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : load 5 ; VEC
   : load 8 ; Z
   : load 9 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : builtin 53 4 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FZ
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 8 ; Z
   : load 7 ; X2
   : load 8 ; Z
   : load 7 ; X2
   : callfunc 25 2 ; F_LI_SOLVE_BIN_INTERPOLZ
   : load 0 ; F
   : load 1 ; F_DATA
   : load 8 ; Z
   : load 7 ; X2
   : callfunc 25 2 ; F_LI_SOLVE_BIN_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 24 10 ; F_LI_SOLVE_BIN0
   : goto L17
 L16:
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; TOLERANCE
   : load 4 ; NITER
   : load 5 ; VEC
   : load 8 ; Z
   : load 9 ; FZ
   : load 6 ; X1
   : load 7 ; X2
   : builtin 53 4 ; V_
   : load 6 ; X1
   : load 7 ; X2
   : load 8 ; Z
   : load 9 ; FZ
   : builtin 53 4 ; V_
   : callfunc 10 3 ; F_LI_SOLVE_ADD
   : load 6 ; X1
   : load 8 ; Z
   : load 6 ; X1
   : load 8 ; Z
   : callfunc 25 2 ; F_LI_SOLVE_BIN_INTERPOLZ
   : load 0 ; F
   : load 1 ; F_DATA
   : load 6 ; X1
   : load 8 ; Z
   : callfunc 25 2 ; F_LI_SOLVE_BIN_INTERPOLZ
   : callfunc 14 3 ; F_LI_SOLVE_CALLF
   : callfunc 24 10 ; F_LI_SOLVE_BIN0
 L17:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=345 simple=true ; line 4093
   : load 0 ; X1
   : load 1 ; X2
   : load 0 ; X1
   : sub
   : pushconst 2
   : div
   : add
   : return
.formuladone
.formula formula=346 simple=false ; line 4095
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; XMIN
   : load 4 ; XMAX
   : load 5 ; TOLERANCE
   : load 6 ; NITER
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   : load 3 ; XMIN
   : load 4 ; XMAX
   : load 5 ; TOLERANCE
   : pushconst 7
   : callfunc 16 7 ; F_LI_SOLVE_RFI
   : callfunc 27 8 ; F_LI_SOLVE_RFI_BIN1
   : return
.formuladone
.formula formula=347 simple=false ; line 4116
   : load 7 ; RET_RFI
   : load 0 ; F
   : load 1 ; F_DATA
   : load 2 ; TARGET
   //start of if statement, line 4127
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 2
   : builtin 57 3 ; E_
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 3
   : builtin 57 3 ; E_
   : cmpsmleq
   : iffalse L0
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 2
   : builtin 57 3 ; E_
   : goto L1
 L0:
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 3
   : builtin 57 3 ; E_
 L1:
   //end of if statement
   //start of if statement, line 4153
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 2
   : builtin 57 3 ; E_
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 3
   : builtin 57 3 ; E_
   : cmpsmleq
   : iffalse L2
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 3
   : builtin 57 3 ; E_
   : goto L3
 L2:
   : load 7 ; RET_RFI
   : pushconst 0
   : pushconst 2
   : builtin 57 3 ; E_
 L3:
   //end of if statement
   : load 5 ; TOLERANCE
   : load 6 ; NITER
   : callfunc 23 7 ; F_LI_SOLVE_BIN
   : callfunc 28 2 ; F_LI_SOLVE_RFI_BIN2
   : return
.formuladone
.formula formula=348 simple=false ; line 4181
   : load 1 ; RET_BIN
   : load 0 ; RET_RFI
   : builtin 53 2 ; V_
   : return
.formuladone
.formula formula=349 simple=false ; line 4209
   : load 4 ; SUM
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 6 ; IRATE
   : load 7 ; RISK
   : load 8 ; CHANNEL
   : load 10 ; GEN
   : load 11 ; OFFSET
   : callfunc 31 9 ; F_LI_GROSSPREMIUM
   : mult
   //start of if statement, line 4198
   : load 11 ; OFFSET
   : pushconst 0
   : eq
   : iffalse L0
   : load 9 ; CURRENCY
   : callfunc 111 1 ; F_LI_DELTA
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : add
   : pushconst 1
   : load 5 ; PAYFREQ
   : callfunc 97 1 ; F_LI_PAYMENTFREQUENCYFACT
   : add
   : mult
   : load 5 ; PAYFREQ
   : pushconst 1
   : callfunc 113 0 ; F_LI_GUARANTEEFUNDCONTRIBUTION
   : sub
   : callfunc 114 0 ; F_LI_SUPERVISIONLEVY
   : sub
   : mult
   : div
   : return
.formuladone
.formula formula=350 simple=false ; line 4217
   : load 4 ; PREM
   : load 5 ; PAYFREQ
   : mult
   : pushconst 1
   : callfunc 113 0 ; F_LI_GUARANTEEFUNDCONTRIBUTION
   : sub
   : callfunc 114 0 ; F_LI_SUPERVISIONLEVY
   : sub
   : mult
   : pushconst 1
   : load 5 ; PAYFREQ
   : callfunc 97 1 ; F_LI_PAYMENTFREQUENCYFACT
   : add
   : div
   : load 9 ; CURRENCY
   : callfunc 111 1 ; F_LI_DELTA
   : sub
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 6 ; IRATE
   : load 7 ; RISK
   : load 8 ; CHANNEL
   : load 10 ; GEN
   : load 11 ; OFFSET
   : callfunc 31 9 ; F_LI_GROSSPREMIUM
   : div
   : return
.formuladone
.formula formula=351 simple=false ; line 4260
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : callfunc 33 6 ; F_LI_NETPREMIUM
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 41 9 ; F_LI_PREMALPHA
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 42 9 ; F_LI_PREMBETA
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : callfunc 43 6 ; F_LI_PREMGAMMA
   : add
   : return
.formuladone
.formula formula=352 simple=false ; line 4299
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : callfunc 55 5 ; F_LI_NAX
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : callfunc 56 5 ; F_LI_NEX
   : add
   : callfunc 109 0 ; F_LI_GAMMA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : add
   : callfunc 110 0 ; F_LI_GAMMADASH
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 3 ; K
   : sub
   : load 3 ; K
   : callfunc 54 6 ; F_LI_AEXN_K
   : mult
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : pushconst 1
   : callfunc 108 0 ; F_LI_BETA
   : sub
   : mult
   : load 3 ; K
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 35 8 ; F_LI_NEXALPHA
   : mult
   : sub
   : div
   : return
.formuladone
.formula formula=353 simple=false ; line 4332
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : callfunc 55 5 ; F_LI_NAX
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : callfunc 56 5 ; F_LI_NEX
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : div
   : return
.formuladone
.formula formula=354 simple=false ; line 4349
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : callfunc 33 6 ; F_LI_NETPREMIUM
   //start of if statement, line 4354
   : load 9 ; T
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : callfunc 106 3 ; F_LI_ALPHAZILL
   : pushconst 0
   : cmpbig
   : iffalse L0
   : load 3 ; K
   : load 9 ; T
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : callfunc 106 3 ; F_LI_ALPHAZILL
   : mult
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 31 9 ; F_LI_GROSSPREMIUM
   : mult
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : div
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=355 simple=false ; line 4384
   : load 5 ; CHANNEL
   : dup
   : pushconst 1.0
   : ifnumequal L0
   : dup
   : pushconst 2.0
   : ifnumequal L1
   : dup
   : pushconst 3.0
   : ifnumequal L2
   : goto L3
 L0: 
   : pop
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : load 7 ; OFFSET
   : callfunc 36 8 ; F_LI_NEXALPHA_BANK
   : goto L4
 L1: 
   : pop
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : load 7 ; OFFSET
   : callfunc 37 8 ; F_LI_NEXALPHA_AGENT
   : goto L4
 L2: 
   : pop
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : load 7 ; OFFSET
   : callfunc 40 8 ; F_LI_NEXALPHA_BROKER
   : goto L4
 L3:
   : pop
   : pushconst "invalid channel "
   : load 5 ; CHANNEL
   : sappend
   : pushconst " in F_LI_nExAlpha"
   : sappend
   : builtin 80 1 ; ERROR
   : goto L4
 L4:
   : return
.formuladone
.formula formula=356 simple=false ; line 4429
   // start of loop statement
   // init result
   : pushconst0
   : store 9
   : pushconst 2
   : pushconst 0
   : dup
   : store 8 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   //start of if statement, line 4430
   : load 7 ; OFFSET
   : load 8 ; CURRENT_I
   : cmpsmleq
   : iffalse L2
   : load 8 ; CURRENT_I
   : pushconst 1
   : add
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 7 ; OFFSET
   : sub
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 8 ; CURRENT_I
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : load 9 ; load result
   : add
   : store 9 ; store updated result
   // update counter and test
   : load 8
   : pushconst 1
   : add
   : dup
   : store 8
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 9
   // end of loop
   : return
.formuladone
.formula formula=357 simple=false ; line 4450
   : load 6 ; GEN
   : dup
   : pushconst 201001.0
   : ifnumequal L0
   : dup
   : pushconst 201109.0
   : ifnumequal L1
   : goto L2
 L0: 
   : pop
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : load 7 ; OFFSET
   : callfunc 38 8 ; F_LI_NEXALPHA_AGENT_GEN201001
   : goto L3
 L1: 
   : pop
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : load 7 ; OFFSET
   : callfunc 39 8 ; F_LI_NEXALPHA_AGENT_GEN201109
   : goto L3
 L2:
   : pop
   : pushconst "tariff generation "
   : load 6 ; GEN
   : sappend
   : pushconst " unknown in F_LI_nExAlpha_Agent"
   : sappend
   : builtin 80 1 ; ERROR
   : goto L3
 L3:
   : return
.formuladone
.formula formula=358 simple=false ; line 4513
   : pushconst 1
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : pushconst 2
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : pushconst 1
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : add
   : pushconst 3
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : pushconst 3
   : pushconst 2
   : callfunc 54 6 ; F_LI_AEXN_K
   : mult
   : add
   : pushconst 4
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : pushconst 5
   : sub
   : pushconst 5
   : builtin 25 2 ; MIN
   : pushconst 5
   : callfunc 54 6 ; F_LI_AEXN_K
   : mult
   : add
   : return
.formuladone
.formula formula=359 simple=false ; line 4585
   : pushconst 1
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : pushconst 2
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : pushconst 1
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : add
   : pushconst 3
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : pushconst 2
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : add
   : pushconst 4
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : pushconst 3
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : add
   : pushconst 4
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : pushconst 4
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : add
   : pushconst 5
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 4 ; N
   : pushconst 5
   : sub
   : pushconst 5
   : builtin 25 2 ; MIN
   : pushconst 5
   : callfunc 54 6 ; F_LI_AEXN_K
   : mult
   : add
   : return
.formuladone
.formula formula=360 simple=false ; line 4604
   // start of loop statement
   // init result
   : pushconst0
   : store 9
   : pushconst 4
   : pushconst 0
   : dup
   : store 8 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   : load 8 ; CURRENT_I
   : pushconst 1
   : add
   : load 5 ; CHANNEL
   : load 6 ; GEN
   : callfunc 105 3 ; F_LI_ALPHA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : load 8 ; CURRENT_I
   : callfunc 56 5 ; F_LI_NEX
   : mult
   : load 9 ; load result
   : add
   : store 9 ; store updated result
   // update counter and test
   : load 8
   : pushconst 1
   : add
   : dup
   : store 8
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 9
   // end of loop
   : return
.formuladone
.formula formula=361 simple=false ; line 4641
   : load 3 ; K
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 32 9 ; F_LI_GROSSPREMIUMFORMULA
   : mult
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 35 8 ; F_LI_NEXALPHA
   : mult
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : div
   : return
.formuladone
.formula formula=362 simple=false ; line 4650
   : callfunc 108 0 ; F_LI_BETA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 32 9 ; F_LI_GROSSPREMIUMFORMULA
   : mult
   : return
.formuladone
.formula formula=363 simple=false ; line 4678
   : callfunc 109 0 ; F_LI_GAMMA
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : callfunc 110 0 ; F_LI_GAMMADASH
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 3 ; K
   : sub
   : load 3 ; K
   : callfunc 54 6 ; F_LI_AEXN_K
   : mult
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : div
   : return
.formuladone
.formula formula=364 simple=false ; line 4701
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 55 5 ; F_LI_NAX
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 56 5 ; F_LI_NEX
   : add
   //start of if statement, line 4701
   : load 6 ; T
   : load 3 ; K
   : cmpsml
   : iffalse L0
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : callfunc 33 6 ; F_LI_NETPREMIUM
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : load 6 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : sub
   : return
.formuladone
.formula formula=365 simple=false ; line 4723
   //start of if statement, line 4723
   : load 9 ; T
   : load 3 ; K
   : cmpsml
   : iffalse L0
   : load 0 ; AGE
   : load 9 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 9 ; T
   : sub
   : callfunc 55 5 ; F_LI_NAX
   : load 0 ; AGE
   : load 9 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 9 ; T
   : sub
   : callfunc 56 5 ; F_LI_NEX
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : load 9 ; T
   : callfunc 34 10 ; F_LI_ZILLMERPREMIUM
   : load 0 ; AGE
   : load 9 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : load 9 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : sub
   : goto L1
 L0:
   : pushconst "no Zillmer reserve for t>=k (t="
   : load 9 ; T
   : sappend
   : pushconst ",k="
   : sappend
   : load 3 ; K
   : sappend
   : pushconst ")"
   : sappend
   : builtin 80 1 ; ERROR
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=366 simple=false ; line 4766
   //start of if statement, line 4766
   : load 6 ; T
   : load 2 ; N
   : cmpbig
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   //start of if statement, line 4769
   : load 6 ; T
   : load 3 ; K
   : cmpsml
   : iffalse L2
   : callfunc 109 0 ; F_LI_GAMMA
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 3 ; K
   : sub
   : load 3 ; K
   : load 6 ; T
   : sub
   : callfunc 54 6 ; F_LI_AEXN_K
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 3 ; K
   : sub
   : load 3 ; K
   : callfunc 54 6 ; F_LI_AEXN_K
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : div
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : load 6 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : sub
   : mult
   : goto L3
 L2:
   : callfunc 110 0 ; F_LI_GAMMADASH
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=367 simple=false ; line 4815
   //start of if statement, line 4815
   : load 9 ; T
   : load 2 ; N
   : cmpbig
   : iffalse L0
   : pushconst 1
   : goto L1
 L0:
   //start of if statement, line 4818
   : load 9 ; T
   : load 3 ; K
   : cmpsml
   : iffalse L2
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : load 9 ; T
   : callfunc 45 10 ; F_LI_RESERVEZILLMER
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 9 ; T
   : callfunc 46 7 ; F_LI_RESERVEGAMMA
   : add
   : goto L3
 L2:
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 9 ; T
   : callfunc 44 7 ; F_LI_RESERVENET
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 9 ; T
   : callfunc 46 7 ; F_LI_RESERVEGAMMA
   : add
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=368 simple=false ; line 4880
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 55 5 ; F_LI_NAX
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 56 5 ; F_LI_NEX
   : add
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : callfunc 33 6 ; F_LI_NETPREMIUM
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : sub
   : return
.formuladone
.formula formula=369 simple=false ; line 4920
   : load 9 ; T
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : callfunc 106 3 ; F_LI_ALPHAZILL
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; N
   : load 3 ; K
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 6 ; CHANNEL
   : load 7 ; GEN
   : load 8 ; OFFSET
   : callfunc 31 9 ; F_LI_GROSSPREMIUM
   : mult
   : load 0 ; AGE
   : load 9 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : load 9 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 3 ; K
   : callfunc 53 5 ; F_LI_AEXN
   : div
   : return
.formuladone
.formula formula=370 simple=false ; line 4929
   //start of if statement, line 4929
   : load 11 ; T
   : load 4 ; NLAYER
   : cmpsml
   : iffalse L0
   : load 0 ; AGE
   : load 1 ; SEX
   : load 4 ; NLAYER
   : load 5 ; KLAYER
   : load 6 ; IRATE
   : load 7 ; RISK
   : load 8 ; CHANNEL
   : load 9 ; GEN
   : load 10 ; OFFSET
   : load 11 ; T
   : callfunc 47 10 ; F_LI_RESERVETECHNICAL
   : load 2 ; NCONTRACT
   : load 3 ; KCONTRACT
   : load 11 ; T
   : load 10 ; OFFSET
   : add
   : callfunc 51 3 ; F_LI_ACCRUALFACT
   : mult
   : goto L1
 L0:
   : pushconst 1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=371 simple=false ; line 4953
   //start of if statement, line 4953
   : load 2 ; T
   : load 1 ; K
   : cmpsml
   : iffalse L0
   : load 2 ; T
   : dup
   : pushconst 0.0
   : cmpbigeq    : over
   : pushconst "2.0"
   : cmpsmleq 
   : and
   : iftrue L2
   : dup
   : pushconst 3.0
   : ifnumequal L3
   : goto L4
 L2: 
   : pop
   : pushconst 0
   : goto L5
 L3: 
   : pop
   : pushconst 0.75
   : goto L5
 L4:
   : pop
   : pushconst 0.95
   : pushconst 0.75
   : pushconst 0.25
   : load 2 ; T
   : pushconst 3
   : sub
   : mult
   : load 0 ; N
   : pushconst 3
   : sub
   : div
   : add
   : builtin 25 2 ; MIN
   : goto L5
 L5:
   : goto L1
 L0:
   : pushconst 0.75
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=372 simple=false ; line 4972
   : load 7 ; SVT
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 55 5 ; F_LI_NAX
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 56 5 ; F_LI_NEX
   : add
   : callfunc 110 0 ; F_LI_GAMMADASH
   : load 0 ; AGE
   : load 6 ; T
   : add
   : load 1 ; SEX
   : load 4 ; IRATE
   : load 5 ; RISK
   : load 2 ; N
   : load 6 ; T
   : sub
   : callfunc 53 5 ; F_LI_AEXN
   : mult
   : add
   : div
   : return
.formuladone
.formula formula=373 simple=false ; line 5007
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : load 0 ; AGE
   : load 4 ; N
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : sub
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 60 4 ; F_LI_DX
   : div
   : return
.formuladone
.formula formula=374 simple=false ; line 5027
   : load 0 ; AGE
   : load 5 ; DELAY
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : load 0 ; AGE
   : load 4 ; N
   : add
   : load 5 ; DELAY
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : sub
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 60 4 ; F_LI_DX
   : div
   : return
.formuladone
.formula formula=375 simple=false ; line 5047
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 62 4 ; F_LI_MX
   : load 0 ; AGE
   : load 4 ; N
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 62 4 ; F_LI_MX
   : sub
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 60 4 ; F_LI_DX
   : div
   : return
.formuladone
.formula formula=376 simple=false ; line 5055
   //start of if statement, line 5055
   : load 4 ; N
   : pushconst 0
   : cmpbig
   : iffalse L0
   : load 0 ; AGE
   : load 4 ; N
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 60 4 ; F_LI_DX
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 60 4 ; F_LI_DX
   : div
   : goto L1
 L0:
   //start of if statement, line 5070
   : load 4 ; N
   : pushconst 0
   : eq
   : iffalse L2
   : pushconst 1
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=377 simple=true ; line 5079
   : pushconst 1
   : pushconst 1
   : load 0 ; IRATE
   : add
   : load 1 ; N
   : power
   : div
   : return
.formuladone
.formula formula=378 simple=false ; line 5081
   //start of if statement, line 5081
   : load 0 ; AGE
   : pushconst 16
   : cmpsml
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   //start of if statement, line 5084
   : load 0 ; AGE
   : pushconst 100
   : cmpbig
   : iffalse L2
   : pushconst 1
   : goto L3
 L2:
   //start of if statement, line 5087
   : load 1 ; SEX
   : pushconst 1
   : eq
   : iffalse L4
   : load 0 ; AGE
   : pushconst 0
   : add
   : tabfindexactcolumn 25 1 1 ; search in table T_LI_RO_200406, column qx with 1 argument(s)
   : pushconst 1
   : load 2 ; RISKQ
   : add
   : mult
   : pushconst 1
   : builtin 25 2 ; MIN
   : goto L5
 L4:
   : load 0 ; AGE
   : pushconst 0
   : add
   : tabfindexactcolumn 25 1 2 ; search in table T_LI_RO_200406, column qy with 1 argument(s)
   : pushconst 1
   : load 2 ; RISKQ
   : add
   : mult
   : pushconst 1
   : builtin 25 2 ; MIN
 L5:
   //end of if statement
 L3:
   //end of if statement
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=379 simple=false ; line 5106
   //start of if statement, line 5106
   : load 0 ; AGE
   : pushconst 0
   : cmpsmleq
   : iffalse L0
   : pushconst 100000
   : goto L1
 L0:
   : load 0 ; AGE
   : pushconst 1
   : sub
   : load 1 ; SEX
   : load 2 ; RISK
   : callfunc 59 3 ; F_LI_LX
   : pushconst 1
   : load 0 ; AGE
   : pushconst 1
   : sub
   : load 1 ; SEX
   : load 2 ; RISK
   : callfunc 58 3 ; F_LI_QX
   : sub
   : mult
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=380 simple=false ; line 5128
   : load 0 ; AGE
   : load 1 ; SEX
   : load 3 ; RISK
   : callfunc 59 3 ; F_LI_LX
   : load 2 ; IRATE
   : load 0 ; AGE
   : callfunc 57 2 ; F_LI_VN
   : mult
   : return
.formuladone
.formula formula=381 simple=false ; line 5134
   //start of if statement, line 5134
   : load 0 ; AGE
   : pushconst 113
   : cmpsmleq
   : iffalse L0
   : load 0 ; AGE
   : pushconst 1
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 60 4 ; F_LI_DX
   : add
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=382 simple=false ; line 5163
   : load 2 ; IRATE
   : pushconst 1
   : callfunc 57 2 ; F_LI_VN
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : mult
   : load 0 ; AGE
   : pushconst 1
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 61 4 ; F_LI_NX
   : sub
   : return
.formuladone
.formula formula=383 simple=false ; line 5171
   //start of if statement, line 5171
   : load 0 ; AGE
   : pushconst 113
   : cmpsmleq
   : iffalse L0
   : load 0 ; AGE
   : pushconst 1
   : add
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 63 4 ; F_LI_RX
   : load 0 ; AGE
   : load 1 ; SEX
   : load 2 ; IRATE
   : load 3 ; RISK
   : callfunc 62 4 ; F_LI_MX
   : add
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=384 simple=true ; line 5190
   : getinput0 14 ; A_LI_PRODUCT
   : pushconst 6200
   : eq
   : iffalse L2
 L0:
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst "RON"
   : cmpseqi
   : iffalse L2
   : goto L1
 L1:
   : pushconst1
   : goto L3
 L2:
   : pushconst0
 L3:
   : return
.formuladone
.formula formula=385 simple=false ; line 5192
   //start of if statement, line 5192
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L0
   : pushconst 3
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=386 simple=true ; line 5199
   //start of if statement, line 5199
   : load 2 ; LAYERIND
   : pushconst 0
   : eq
   : iffalse L0
   : load 0 ; MAINSUM
   : goto L1
 L0:
   : load 0 ; MAINSUM
   : pushconst 1
   : load 1 ; INDEXATION_PERC
   : pushconst 100
   : div
   : add
   : load 2 ; LAYERIND
   : pushconst 1
   : sub
   : power
   : mult
   : load 1 ; INDEXATION_PERC
   : pushconst 100
   : div
   : mult
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=387 simple=false ; line 5226
   : load 1 ; RIDERSUM
   : load 0 ; PRODUCT
   : callfunc 71 2 ; F_LI_PREMIUMRIDERBASE
   //start of if statement, line 5210
   : load 2 ; ADDRISKPROM
   : pushconst 0.000001
   : cmpbig
   : iffalse L0
   : load 1 ; RIDERSUM
   : load 2 ; ADDRISKPROM
   : mult
   : pushconst 1000
   : div
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : add
   //start of if statement, line 5218
   : load 3 ; ADDRISKPERC
   : builtin 30 1 ; ABS
   : pushconst 0.0001
   : cmpbig
   : iffalse L2
   : pushconst 1
   : load 3 ; ADDRISKPERC
   : pushconst 100
   : div
   : add
   : goto L3
 L2:
   : pushconst 1
 L3:
   //end of if statement
   : mult
   : pushconst 1
   : load 4 ; PAYMENTFREQUENCY
   : callfunc 97 1 ; F_LI_PAYMENTFREQUENCYFACT
   : add
   : mult
   : pushconst 1
   : callfunc 113 0 ; F_LI_GUARANTEEFUNDCONTRIBUTION
   : sub
   : callfunc 114 0 ; F_LI_SUPERVISIONLEVY
   : sub
   : div
   : return
.formuladone
.formula formula=388 simple=false ; line 5228
   : load 0 ; DECISIONDATE
   : builtin 44 1 ; DATEDAY
   : pushconst 2 ; nr. rows T_LI_TARIFFGENERATION
   : callfunc 69 2 ; F_LI_TARIFFGENERATION1
   : return
.formuladone
.formula formula=389 simple=false ; line 5240
   //start of if statement, line 5240
   : load 0 ; DECISIONDATEDAY
   : load 1 ; INDROW
   : pushconst 1
   : tabcell 12 ; T_LI_TARIFFGENERATION
   : builtin 44 1 ; DATEDAY
   : cmpbigeq
   : iffalse L0
   : load 1 ; INDROW
   : pushconst "generation"
   : tabcell_cn 12 ; T_LI_TARIFFGENERATION
   : goto L1
 L0:
   : load 0 ; DECISIONDATEDAY
   : load 1 ; INDROW
   : pushconst 1
   : sub
   : callfunc 69 2 ; F_LI_TARIFFGENERATION1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=390 simple=false ; line 5264
   : load 1 ; SUMCODE
   : dup
   : pushconst 0.0
   : ifnumequal L0
   : dup
   : pushconst 1.0
   : ifnumequal L1
   : dup
   : pushconst 2.0
   : ifnumequal L2
   : pushconst ": not found in case statement"
   : sappend
   : error 
   : goto L3
 L0: 
   : pop
   : load 4 ; SUM
   : goto L3
 L1: 
   : pop
   : load 2 ; SUMVALUE
   : goto L3
 L2: 
   : pop
   : load 4 ; SUM
   : load 2 ; SUMVALUE
   : mult
   : pushconst 100
   : div
   : goto L3
 L3:
   : return
.formuladone
.formula formula=391 simple=false ; line 5277
   : load 1 ; PRODUCT
   : callfunc 72 1 ; F_LI_RIDERPRODUCT_FACT
   : load 0 ; SUM
   : mult
   : return
.formuladone
.formula formula=392 simple=false ; line 5279
   : load 0 ; PRODUCT
   : tabfindexactcolumn 14 1 4 ; search in table T_LI_RIDERPRODUCT, column fact_prom with 1 argument(s)
   : pushconst 1000
   : div
   : return
.formuladone
.formula formula=393 simple=false ; line 5281
   //start of if statement, line 5284
   : load 0 ; PRODUCT
   : tabfindexactcolumn 14 1 6 ; search in table T_LI_RIDERPRODUCT, column indexation_perc with 1 argument(s)
   : builtin 76 1 ; ISNUMBER
   : iffalse L4
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : load 0 ; PRODUCT
   : tabfindexactcolumn 14 1 6 ; search in table T_LI_RIDERPRODUCT, column indexation_perc with 1 argument(s)
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=394 simple=false ; line 5291
   : load 0 ; PRODUCT
   : tabfindexactcolumn 14 1 5 ; search in table T_LI_RIDERPRODUCT, column ridercode with 1 argument(s)
   : return
.formuladone
.formula formula=395 simple=false ; line 5293
   : load 0 ; PRODUCT
   : tabfindexactcolumn 14 1 7 ; search in table T_LI_RIDERPRODUCT, column sparte with 1 argument(s)
   : return
.formuladone
.formula formula=396 simple=false ; line 5295
   : load 0 ; PRODUCT
   : pushconst "sum_"
   : load 1 ; CURRENCY
   : sappend
   : tabfindexactcolumnbyname 14 1 ; T_LI_RIDERPRODUCT
   : return
.formuladone
.formula formula=397 simple=false ; line 5297
   : load 0 ; PRODUCT
   : pushconst "prem_year_"
   : load 1 ; CURRENCY
   : sappend
   : tabfindexactcolumnbyname 14 1 ; T_LI_RIDERPRODUCT
   : return
.formuladone
.formula formula=398 simple=false ; line 5308
   : load 0 ; PRODUCT
   : load 1 ; CURRENCY
   : callfunc 77 2 ; F_LI_RIDERPRODUCT_PREMYEAR
   //start of if statement, line 5303
   : load 3 ; ADDRISKPROM
   : pushconst 0.000001
   : cmpbig
   : iffalse L0
   : load 2 ; RIDERSUM
   : load 3 ; ADDRISKPROM
   : mult
   : pushconst 1000
   : div
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : add
   //start of if statement, line 5311
   : load 4 ; ADDRISKPERC
   : builtin 30 1 ; ABS
   : pushconst 0.0001
   : cmpbig
   : iffalse L2
   : pushconst 1
   : load 4 ; ADDRISKPERC
   : pushconst 100
   : div
   : add
   : goto L3
 L2:
   : pushconst 1
 L3:
   //end of if statement
   : mult
   : return
.formuladone
.formula formula=399 simple=false ; line 5318
   // start of loop statement
   : pushconst 2 ; nr. rows T_LI_CURRENCY
   : pushconst 2 ; nr. rows T_LI_PRODUCT
   : mult
   : pushconst 1
   : sub
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 2
   : dup
   : store 0 ; store counter
   : over
   : ifsml L1
 L0:
   : load 2 ; load result
   : load 0 ; CURRENT_INDROW
   : pushconst 2 ; nr. rows T_LI_CURRENCY
   : divint
   : pushconst 1
   : add
   : pushconst 1
   : tabcell 11 ; T_LI_PRODUCT
   : load 0 ; CURRENT_INDROW
   : pushconst 2 ; nr. rows T_LI_CURRENCY
   : modint
   : pushconst 1
   : add
   : pushconst 1
   : tabcell 2 ; T_LI_CURRENCY
   : callfunc 80 2 ; F_LI_RIDER_HOSPITAL_SUM_VEC
   : listappendelem1
   : store 2 ; store updated result
   // update counter and test
   : load 0
   : pushconst 1
   : add
   : dup
   : store 0
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : callfunc 85 1 ; F_V_CONCAT
   : callfunc 87 1 ; F_V_REMOVEDUP
   : callfunc 82 1 ; F_LI_RIDER_HOSPITAL_SORT
   : return
.formuladone
.formula formula=400 simple=false ; line 5357
   : load 1 ; CURRENCY
   : pushconst "T_LI_Rider_Hospital_Sum_"
   : load 0 ; PRODUCT
   : callfunc 84 1 ; F_LI_PRODUCT2RIDERHOSPITAL
   : sappend
   : pushconst "_"
   : sappend
   : load 1 ; CURRENCY
   : sappend
   : callfunc 81 2 ; F_LI_RIDER_HOSPITAL_SUM_VEC1
   : return
.formuladone
.formula formula=401 simple=false ; line 5366
   // start of loop statement
   : load 1 ; TABNAME
   : tabrows    : pushconst 1
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 4
   : dup
   : store 2 ; store counter
   : over
   : ifsml L1
 L0:
   : load 4 ; load result
   : load 0 ; CURRENCY
   : pushconst ":"
   : sappend
   : load 2 ; CURRENT_I
   : pushconst 1
   : load 1 ; TABNAME
   : tabrefcell
   : sappend
   : load 2 ; CURRENT_I
   : pushconst 2
   : load 1 ; TABNAME
   : tabrefcell
   : load 0 ; CURRENCY
   : pushconst ":"
   : sappend
   : load 2 ; CURRENT_I
   : pushconst 1
   : load 1 ; TABNAME
   : tabrefcell
   : pushconst "8.2"
   : builtin 7 2 ; FORMAT
   : sappend
   : builtin 53 3 ; V_
   : listappendelem1
   : store 4 ; store updated result
   // update counter and test
   : load 2
   : pushconst 1
   : add
   : dup
   : store 2
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 4
   // end of loop
   : return
.formuladone
.formula formula=402 simple=false ; line 5397
   // start of loop statement
   : load 0 ; V
   : builtin 63 1 ; V_LENGTH
   : pushconst 1
   : sub
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 3
   : dup
   : store 1 ; store counter
   : over
   : ifsml L1
 L0:
   : load 3 ; load result
   : load 0 ; V
   : load 1 ; CURRENT_I
   : pushconst 2
   : builtin 57 3 ; E_
   : load 0 ; V
   : load 1 ; CURRENT_I
   : pushconst 0
   : builtin 57 3 ; E_
   : load 0 ; V
   : load 1 ; CURRENT_I
   : pushconst 1
   : builtin 57 3 ; E_
   : builtin 53 3 ; V_
   : listappendelem1
   : store 3 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 3
   // end of loop
   : builtin 69 1 ; V_SORT
   : callfunc 83 1 ; F_LI_RIDER_HOSPITAL_SORT1
   : return
.formuladone
.formula formula=403 simple=false ; line 5430
   // start of loop statement
   : load 0 ; V
   : builtin 63 1 ; V_LENGTH
   : pushconst 1
   : sub
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 3
   : dup
   : store 1 ; store counter
   : over
   : ifsml L1
 L0:
   : load 3 ; load result
   : load 0 ; V
   : load 1 ; CURRENT_I
   : pushconst 1
   : builtin 57 3 ; E_
   : load 0 ; V
   : load 1 ; CURRENT_I
   : pushconst 2
   : builtin 57 3 ; E_
   : builtin 53 2 ; V_
   : listappendelem1
   : store 3 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 3
   // end of loop
   : return
.formuladone
.formula formula=404 simple=false ; line 5451
   // start of loop statement
   // init result
   : pushconst0
   : store 2
   : pushconst 6 ; nr. rows T_LI_RIDERPRODUCT
   : pushconst 1
   : dup
   : store 1 ; store counter
   : over
   : ifbig L1 ; end if from>to
 L0:
   //start of if statement, line 5464
   : load 1 ; CURRENT_ROW
   : pushconst "products"
   : tabcell_cn 14 ; T_LI_RIDERPRODUCT
   : load 0 ; PRODUCT
   : builtin 8 2 ; INSTR
   : pushconst 0
   : cmpbig
   : iffalse L6
 L4:
   : load 1 ; CURRENT_ROW
   : pushconst "ridercode"
   : tabcell_cn 14 ; T_LI_RIDERPRODUCT
   : pushconst "HOSP"
   : cmpseqi
   : iffalse L6
   : goto L5
 L5:
   : pushconst1
   : goto L7
 L6:
   : pushconst0
 L7:
   : iffalse L2
   : load 1 ; CURRENT_ROW
   : pushconst 1
   : tabcell 14 ; T_LI_RIDERPRODUCT
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : load 2 ; load result
   : add
   : store 2 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifsmleq L0
 L1:
   : pop ; pop value_to
   : load 2
   // end of loop
   : return
.formuladone
.formula formula=405 simple=false ; line 5482
   : load 0 ; V
   : builtin 63 1 ; V_LENGTH
   : dup
   : pushconst 0.0
   : ifnumequal L0
   : dup
   : pushconst 1.0
   : ifnumequal L1
   : goto L2
 L0: 
   : pop
   : load 0 ; V
   : goto L3
 L1: 
   : pop
   : load 0 ; V
   : builtin 59 1 ; V_FIRST
   : goto L3
 L2:
   : pop
   : load 0 ; V
   : pushconst 1
   : load 0 ; V
   : builtin 59 1 ; V_FIRST
   : callfunc 86 3 ; F_V_CONCAT1
   : goto L3
 L3:
   : return
.formuladone
.formula formula=406 simple=false ; line 5506
   //start of if statement, line 5506
   : load 1 ; IND
   : load 0 ; V
   : builtin 63 1 ; V_LENGTH
   : cmpbigeq
   : iffalse L0
   : load 2 ; RES
   : goto L1
 L0:
   : load 0 ; V
   : load 1 ; IND
   : pushconst 1
   : add
   : load 2 ; RES
   : load 0 ; V
   : load 1 ; IND
   : builtin 57 2 ; E_
   : builtin 54 2 ; V_CONCAT
   : callfunc 86 3 ; F_V_CONCAT1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=407 simple=false ; line 5529
   : load 0 ; V
   : builtin 69 1 ; V_SORT
   : callfunc 88 1 ; F_V_REMOVEDUP1
   : return
.formuladone
.formula formula=408 simple=false ; line 5537
   // start of loop statement
   : load 0 ; V
   : builtin 63 1 ; V_LENGTH
   : pushconst 1
   : sub
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 3
   : dup
   : store 1 ; store counter
   : over
   : ifsml L1
 L0:
   : load 3 ; load result
   //start of if statement, line 5541
   : load 1 ; CURRENT_I
   : pushconst 0
   : eq
   : iftrue L5
 L4:
   : load 0 ; V
   : load 1 ; CURRENT_I
   : builtin 57 2 ; E_
   : load 0 ; V
   : load 1 ; CURRENT_I
   : pushconst 1
   : sub
   : builtin 57 2 ; E_
   : cmpsneq
   : iftrue L5
   : goto L6
 L5:
   : pushconst1
   : goto L7
 L6:
   : pushconst0
 L7:
   : iffalse L2
   : load 0 ; V
   : load 1 ; CURRENT_I
   : builtin 57 2 ; E_
   : goto L3
 L2:
   : pushnull
 L3:
   //end of if statement
   : listappendelem1
   : store 3 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 3
   // end of loop
   : return
.formuladone
.formula formula=409 simple=false ; line 5561
   : load 1 ; POLICYBEGIN
   : builtin 52 1 ; YEARS
   : load 0 ; DATEOFBIRTH
   : builtin 52 1 ; YEARS
   : sub
   : pushconst 0.00001
   : add
   : builtin 24 1 ; FLOOR
   : return
.formuladone
.formula formula=410 simple=false ; line 5572
   //start of if statement, line 5572
   : pushconst 0
   : getinput 20 1 ; A_LI_DURATIONCODE
   : pushconst 1
   : eq
   : iffalse L0
   : pushconst 0
   : getinput 21 1 ; A_LI_DURATIONVALUE
   : goto L1
 L0:
   : pushconst 0
   : getinput 21 1 ; A_LI_DURATIONVALUE
   : pushconst 0
   : getinput 18 1 ; A_LI_TARIFFBEGIN
   : builtin 51 1 ; YEAR
   : sub
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : builtin 51 1 ; YEAR
   : add
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=411 simple=false ; line 5585
   //start of if statement, line 5585
   : load 0 ; I
   : getinput 20 1 ; A_LI_DURATIONCODE
   : pushconst 1
   : eq
   : iffalse L0
   : load 0 ; I
   : getinput 21 1 ; A_LI_DURATIONVALUE
   : goto L1
 L0:
   : load 0 ; I
   : getinput 21 1 ; A_LI_DURATIONVALUE
   : load 0 ; I
   : getinput 18 1 ; A_LI_TARIFFBEGIN
   : builtin 51 1 ; YEAR
   : sub
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : builtin 51 1 ; YEAR
   : add
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=412 simple=false ; line 5598
   //start of if statement, line 5598
   : pushconst 0
   : getinput 22 1 ; A_LI_PAYMENTPERIODCODE
   : pushconst 1
   : eq
   : iffalse L0
   : pushconst 0
   : getinput 23 1 ; A_LI_PAYMENTPERIODVALUE
   : goto L1
 L0:
   : pushconst 0
   : getinput 23 1 ; A_LI_PAYMENTPERIODVALUE
   : pushconst 0
   : getinput 18 1 ; A_LI_TARIFFBEGIN
   : builtin 51 1 ; YEAR
   : sub
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : builtin 51 1 ; YEAR
   : add
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=413 simple=false ; line 5611
   //start of if statement, line 5611
   : load 0 ; I
   : getinput 22 1 ; A_LI_PAYMENTPERIODCODE
   : pushconst 1
   : eq
   : iffalse L0
   : load 0 ; I
   : getinput 23 1 ; A_LI_PAYMENTPERIODVALUE
   : goto L1
 L0:
   : load 0 ; I
   : getinput 23 1 ; A_LI_PAYMENTPERIODVALUE
   : load 0 ; I
   : getinput 18 1 ; A_LI_TARIFFBEGIN
   : builtin 51 1 ; YEAR
   : sub
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : builtin 51 1 ; YEAR
   : add
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=414 simple=true ; line 5624
   : load 0 ; X
   : load 1 ; Y
   : load 0 ; X
   : sub
   : load 2 ; INTERVALS
   : div
   : load 3 ; IND
   : mult
   : add
   : return
.formuladone
.formula formula=415 simple=false ; line 5626
   : load 1 ; BEG
   : pushconst 0
   : pushconst 0
   : load 0 ; D
   : builtin 51 1 ; YEAR
   : load 1 ; BEG
   : builtin 51 1 ; YEAR
   : sub
   //start of if statement, line 5642
   : load 0 ; D
   : builtin 48 1 ; MONTH
   : load 1 ; BEG
   : builtin 48 1 ; MONTH
   : cmpsml
   : iftrue L3
 L2:
   : load 0 ; D
   : builtin 48 1 ; MONTH
   : load 1 ; BEG
   : builtin 48 1 ; MONTH
   : eq
   : iffalse L4
 L6:
   : load 0 ; D
   : builtin 45 1 ; DAY
   : load 1 ; BEG
   : builtin 45 1 ; DAY
   : cmpsml
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : pushconst 1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : add
   : pushconst "D.M.Y"
   : builtin 43 5 ; DATE
   : return
.formuladone
.formula formula=416 simple=false ; line 5664
   : load 0 ; D
   : load 1 ; BEG
   : callfunc 95 2 ; F_LI_CALCULATIONDATEPREV
   : pushconst 0
   : pushconst 0
   : pushconst 1
   : pushconst "D.M.Y"
   : builtin 43 5 ; DATE
   : return
.formuladone
.formula formula=417 simple=false ; line 5677
   : load 0 ; PAYMENTFREQUENCY
   : pushconst 0
   : add
   : tabfindexactcolumn 20 1 3 ; search in table T_LI_PAYMENTFREQUENCY, column surchargePerc with 1 argument(s)
   : pushconst 100
   : div
   : return
.formuladone
.formula formula=418 simple=true ; line 5679
   : pushconst "text_"
   : getinput0 2 ; A_LI_LANGUAGE
   : sappend
   : return
.formuladone
.formula formula=419 simple=false ; line 5681
   : load 0 ; CHANNEL
   : tabfindexactcolumn 8 1 3 ; search in table T_LI_CHANNEL, column longcode with 1 argument(s)
   : return
.formuladone
.formula formula=420 simple=false ; line 5690
   : load 1 ; RIDERPRODUCT
   : builtin 75 1 ; ISINTEGER
   : iffalse L2
 L4:
   : load 1 ; RIDERPRODUCT
   : pushconst 0
   : add
   : tabfindrowexact 14 1 ; T_LI_RIDERPRODUCT
   : bigeq0 ; found the row?
   : iffalse L2
   : goto L0
 L0:
   : load 0 ; PRODUCT
   : builtin 75 1 ; ISINTEGER
   : pushconst 0
   : eq
   : iftrue L1
 L5:
   : load 1 ; RIDERPRODUCT
   : pushconst 0
   : add
   : tabfindexactcolumn 14 1 1 ; search in table T_LI_RIDERPRODUCT, column products with 1 argument(s)
   : load 0 ; PRODUCT
   : pushconst 0
   : add
   : builtin 8 2 ; INSTR
   : pushconst 0
   : cmpbig
   : iftrue L1
   : goto L2
 L1:
   : pushconst1
   : goto L3
 L2:
   : pushconst0
 L3:
   : return
.formuladone
.formula formula=421 simple=false ; line 5699
   //start of if statement, line 5699
   : pushconst "irate_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindrowexact 26 1 ; T_LI_CONSTANTS
   : bigeq0 ; found the row?
   : iffalse L0
   : pushconst "irate_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : goto L1
 L0:
   : pushconst "currency '"
   : load 0 ; CURRENCY
   : sappend
   : pushconst "': no technical interest rate in T_LI_Constants!"
   : sappend
   : builtin 80 1 ; ERROR
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=422 simple=false ; line 5713
   //start of if statement, line 5713
   : pushconst "profit_irate_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindrowexact 26 1 ; T_LI_CONSTANTS
   : bigeq0 ; found the row?
   : iffalse L0
   : pushconst "profit_irate_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : goto L1
 L0:
   : pushconst "currency '"
   : load 0 ; CURRENCY
   : sappend
   : pushconst "': no technical profit interest rate in T_LI_Constants!"
   : sappend
   : builtin 80 1 ; ERROR
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=423 simple=false ; line 5727
   : load 1 ; MYYEAR
   : pushconst "rate_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindintervalupcolumn 27 1 ; T_LI_PROFIT
   : return
.formuladone
.formula formula=424 simple=false ; line 5734
   : pushconst "profit_sharing"
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=425 simple=false ; line 5736
   //start of if statement, line 5736
   : load 0 ; N
   : pushconst 0
   : add
   : pushconst "T_LI_Alpha_Gen"
   : load 2 ; GEN
   : sappend
   : tabreffindrowexact 1
   : bigeq0 ; found the row?
   : iffalse L0
   : load 0 ; N
   : pushconst 0
   : add
   : pushconst "chan_"
   : load 1 ; CHANNEL
   : callfunc 99 1 ; F_LI_CHANNEL_LONGCODE
   : sappend
   : pushconst "T_LI_Alpha_Gen"
   : load 2 ; GEN
   : sappend
   : tabreffindexactcolumn 1
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=426 simple=false ; line 5750
   : load 0 ; T
   : pushconst 1
   : add
   : pushconst "chan_"
   : load 1 ; CHANNEL
   : callfunc 99 1 ; F_LI_CHANNEL_LONGCODE
   : sappend
   : pushconst "T_LI_AlphaZill_Gen"
   : load 2 ; GEN
   : sappend
   : tabreffindintervalupcolumn 1
   : callfunc 107 1 ; F_LI_ALPHAZILL1
   : return
.formuladone
.formula formula=427 simple=false ; line 5763
   //start of if statement, line 5763
   : load 0 ; VALUE
   : builtin 76 1 ; ISNUMBER
   : iffalse L0
   : load 0 ; VALUE
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=428 simple=false ; line 5773
   : pushconst "beta"
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=429 simple=false ; line 5775
   : pushconst "gamma"
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=430 simple=false ; line 5777
   : pushconst "gammaDash"
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=431 simple=false ; line 5779
   : pushconst "delta_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=432 simple=false ; line 5781
   : pushconst "policyfee_"
   : load 0 ; CURRENCY
   : sappend
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=433 simple=false ; line 5783
   : pushconst "GFC"
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=434 simple=false ; line 5785
   : pushconst "SL"
   : tabfindexact 26 1 ; T_LI_CONSTANTS
   : return
.formuladone
.formula formula=435 simple=false ; line 5787
   : load 0 ; ID
   : callfunc 119 1 ; F_LI_VISS_ID
   : load 0 ; ID
   : callfunc 117 1 ; F_LI_MESSAGE
   : load 1 ; V_PARAMETER
   : pushconst 1
   : callfunc 120 3 ; F_LI_SUBST
   : sappend
   : load 2 ; REFERENZ
   : builtin 80 2 ; ERROR
   : return
.formuladone
.formula formula=436 simple=false ; line 5804
   : load 0 ; ID
   : callfunc 119 1 ; F_LI_VISS_ID
   : load 0 ; ID
   : callfunc 118 1 ; F_LI_MESSAGEEN
   : load 1 ; V_PARAMETER
   : pushconst 1
   : callfunc 120 3 ; F_LI_SUBST
   : sappend
   : load 2 ; REFERENZ
   : builtin 80 2 ; ERROR
   : return
.formuladone
.formula formula=437 simple=false ; line 5821
   : load 0 ; ID
   : pushconst 0
   : add
   : pushconst "text_"
   : getinput0 2 ; A_LI_LANGUAGE
   : sappend
   : tabfindexactcolumnbyname 28 1 ; T_LI_MESSAGE
   : return
.formuladone
.formula formula=438 simple=false ; line 5823
   : load 0 ; ID
   : pushconst 0
   : add
   : tabfindexactcolumn 28 1 1 ; search in table T_LI_MESSAGE, column text_en with 1 argument(s)
   : return
.formuladone
.formula formula=439 simple=true ; line 5825
   : pushconst "->"
   : load 0 ; ID
   : sappend
   : pushconst "< "
   : sappend
   : return
.formuladone
.formula formula=440 simple=false ; line 5827
   : load 1 ; V_PAR
   : builtin 63 1 ; V_LENGTH
   : dup
   : pushconst 0.0
   : ifnumequal L0
   : dup
   : pushconst 1.0
   : ifnumequal L1
   : goto L2
 L0: 
   : pop
   : load 0 ; TEXT
   : goto L3
 L1: 
   : pop
   : load 0 ; TEXT
   : pushconst "XXX"
   : load 2 ; I
   : sappend
   : load 1 ; V_PAR
   : pushconst 0
   : builtin 57 2 ; E_
   : builtin 15 3 ; SUBST
   : goto L3
 L2:
   : pop
   : load 0 ; TEXT
   : pushconst "XXX"
   : load 2 ; I
   : sappend
   : load 1 ; V_PAR
   : pushconst 0
   : builtin 57 2 ; E_
   : builtin 15 3 ; SUBST
   : load 1 ; V_PAR
   : builtin 68 1 ; V_REST
   : load 2 ; I
   : pushconst 1
   : add
   : callfunc 120 3 ; F_LI_SUBST
   : goto L3
 L3:
   : return
.formuladone
.formula formula=441 simple=false ; line 5866
   : load 0 ; X
   : pushconst ".1,2"
   : builtin 7 2 ; FORMAT
   : pushconst ",00"
   : pushconst ",-"
   : builtin 15 3 ; SUBST
   : return
.formuladone
.formula formula=442 simple=false ; line 5877
   //start of if statement, line 5877
   : load 0 ; X
   : pushconst 0
   : cmpbigeq
   : iffalse L0
   : load 0 ; X
   : pushconst 1000
   : mult
   : pushconst 0.0001
   : add
   : builtin 24 1 ; FLOOR
   : pushconst 1000
   : div
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 1000
   : mult
   : pushconst 0.0001
   : sub
   : builtin 23 1 ; CEIL
   : pushconst 1000
   : div
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=443 simple=false ; line 5890
   //start of if statement, line 5890
   : load 0 ; X
   : pushconst 0
   : cmpbigeq
   : iffalse L0
   : load 0 ; X
   : pushconst 100
   : mult
   : pushconst 0.00001
   : add
   : builtin 24 1 ; FLOOR
   : pushconst 100
   : div
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 100
   : mult
   : pushconst 0.00001
   : sub
   : builtin 23 1 ; CEIL
   : pushconst 100
   : div
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=444 simple=false ; line 5903
   //start of if statement, line 5903
   : load 0 ; X
   : pushconst 0
   : cmpbigeq
   : iffalse L0
   : load 0 ; X
   : pushconst 10
   : mult
   : pushconst 0.000001
   : add
   : builtin 24 1 ; FLOOR
   : pushconst 10
   : div
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 10
   : mult
   : pushconst 0.000001
   : sub
   : builtin 23 1 ; CEIL
   : pushconst 10
   : div
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=445 simple=false ; line 5916
   //start of if statement, line 5916
   : load 0 ; X
   : pushconst 0
   : cmpbigeq
   : iffalse L0
   : load 0 ; X
   : pushconst 0.0000001
   : add
   : builtin 24 1 ; FLOOR
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 0.0000001
   : sub
   : builtin 23 1 ; CEIL
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=446 simple=false ; line 5929
   //start of if statement, line 5930
   : load 0 ; X
   : pushconst 0
   : cmpbig
   : iffalse L0
   : load 0 ; X
   : pushconst 0.0000001
   : add
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 0.0000001
   : sub
 L1:
   //end of if statement
   : pushconst 2
   : builtin 22 2 ; ROUND
   : return
.formuladone
.formula formula=447 simple=false ; line 5940
   //start of if statement, line 5941
   : load 0 ; X
   : pushconst 0
   : cmpbig
   : iffalse L0
   : load 0 ; X
   : pushconst 0.0000001
   : add
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 0.0000001
   : sub
 L1:
   //end of if statement
   : pushconst 1
   : builtin 22 2 ; ROUND
   : return
.formuladone
.formula formula=448 simple=false ; line 5951
   //start of if statement, line 5952
   : load 0 ; X
   : pushconst 0
   : cmpbig
   : iffalse L0
   : load 0 ; X
   : pushconst 0.0000001
   : add
   : goto L1
 L0:
   : load 0 ; X
   : pushconst 0.0000001
   : sub
 L1:
   //end of if statement
   : pushconst 0
   : builtin 22 2 ; ROUND
   : return
.formuladone
.formula formula=449 simple=true ; line 5962
   : load 0 ; N
   : pushconst 1
   : add
   : return
.formuladone
.formula formula=450 simple=false ; line 6011
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : builtin 74 1 ; ISDATE
   : iffalse L2
 L18:
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : builtin 74 1 ; ISDATE
   : iffalse L2
   : goto L17
 L17:
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : pushconst 0
   : cmpbigeq
   : iffalse L2
   : goto L16
 L16:
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : pushconst 100
   : cmpsmleq
   : iffalse L2
   : goto L15
 L15:
   : getinput0 10 ; A_LI_SEX
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L14
 L14:
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L13
 L13:
   : getinput0 8 ; A_LI_CHANNEL
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L12
 L12:
   : getinput0 10 ; A_LI_SEX
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L11
 L11:
   : getinput0 13 ; A_LI_ADDRISK_PERC
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L10
 L10:
   : getinput0 20 ; A_LI_DURATIONCODE
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L9
 L9:
   : getinput0 21 ; A_LI_DURATIONVALUE
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L8
 L8:
   : getinput0 22 ; A_LI_PAYMENTPERIODCODE
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L7
 L7:
   : getinput0 23 ; A_LI_PAYMENTPERIODVALUE
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L6
 L6:
   : getinput0 15 ; A_LI_BASECODE
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L5
 L5:
   : getinput0 16 ; A_LI_BASEVALUE
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L4
 L4:
   : getinput0 16 ; A_LI_BASEVALUE
   : pushconst 0
   : cmpbig
   : iffalse L2
   : goto L0
 L0:
   : getinput0 7 ; A_LI_PAYMENTMETHOD
   : builtin 76 1 ; ISNUMBER
   : iffalse L2
   : goto L1
 L1:
   : pushconst1
   : goto L3
 L2:
   : pushconst0
 L3:
   : return
.formuladone
.formula formula=451 simple=false ; line 6032
   //start of if statement, line 6019
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : builtin 74 1 ; ISDATE
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 1006
   : pushconst "contract begin date"
   : builtin 53 1 ; V_
   : pushconst "A_LI_TariffBegin"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   //start of if statement, line 6035
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : builtin 44 1 ; DATEDAY
   : getinput0 3 ; A_LI_CURRENTDATE
   : builtin 44 1 ; DATEDAY
   : cmpsmleq
   : iffalse L2
   : pushconst 1007
   : getinput0 3 ; A_LI_CURRENTDATE
   : pushconst 1
   : pushconst 0
   : pushconst 0
   : pushconst "D.M.Y"
   : builtin 43 5 ; DATE
   : builtin 53 1 ; V_
   : pushconst "A_LI_TariffBegin"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=452 simple=false ; line 6082
   //start of if statement, line 6064
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : pushconst 16
   : cmpsml
   : iffalse L0
   : pushconst 1000
   : pushconst 16
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : builtin 53 2 ; V_
   : pushconst "A_LI_DateOfBirth"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   //start of if statement, line 6086
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : pushconst 65
   : cmpbig
   : iffalse L2
   : pushconst 1001
   : pushconst 65
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : builtin 53 2 ; V_
   : pushconst "A_LI_DateOfBirth"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=453 simple=false ; line 6153
   //start of if statement, line 6109
   : getinput0 21 ; A_LI_DURATIONVALUE
   : builtin 76 1 ; ISNUMBER
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 1006
   : pushconst "duration"
   : builtin 53 1 ; V_
   : pushconst "A_LI_DurationValue"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   //start of if statement, line 6122
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 5
   : cmpsml
   : iftrue L5
 L4:
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : pushconst 25
   : cmpbig
   : iftrue L5
   : goto L6
 L5:
   : pushconst1
   : goto L7
 L6:
   : pushconst0
 L7:
   : iffalse L2
   : pushconst 1003
   : pushconst 5
   : pushconst 25
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : builtin 53 3 ; V_
   : pushconst "A_LI_TariffDuration"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
   //start of if statement, line 6140
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : builtin 74 1 ; ISDATE
   : pushconst 0
   : eq
   : iffalse L8
   : pushconst 1006
   : pushconst "date of birth"
   : builtin 53 1 ; V_
   : pushconst "A_LI_DateOfBirth"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L9
 L8:
   : pushconst 0
 L9:
   //end of if statement
   : add
   //start of if statement, line 6157
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : add
   : pushconst 70
   : cmpbig
   : iffalse L10
   : pushconst 1002
   : pushconst 70
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : add
   : builtin 53 2 ; V_
   : pushconst "A_LI_TariffDuration"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L11
 L10:
   : pushconst 0
 L11:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=454 simple=false ; line 6193
   //start of if statement, line 6180
   : getinput0 23 ; A_LI_PAYMENTPERIODVALUE
   : builtin 76 1 ; ISNUMBER
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 1006
   : pushconst "payment period"
   : builtin 53 1 ; V_
   : pushconst "A_LI_PaymentPeriodValue"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   //start of if statement, line 6193
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : cmpneq
   : iffalse L2
   : pushconst 1005
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : builtin 53 2 ; V_
   : pushconst "A_LI_TariffDuration"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=455 simple=false ; line 6209
   : getinput0 5 ; A_LI_CURRENCY
   : dup
   : pushconst "EUR"
   : ifseqi L0
   : dup
   : pushconst "RON"
   : ifseqi L1
   : goto L2
 L0: 
   : pop
   : load 0 ; SUM
   : pushconst 500
   : pushconst 30000
   : pushconst 50000
   : pushconst 200000
   : callfunc 136 5 ; F_LI_CHECK_SUM1
   : goto L3
 L1: 
   : pop
   : load 0 ; SUM
   : pushconst 2500
   : pushconst 125000
   : pushconst 215000
   : pushconst 800000
   : callfunc 136 5 ; F_LI_CHECK_SUM1
   : goto L3
 L2:
   : pop
   : pushconst "currency "
   : getinput0 5 ; A_LI_CURRENCY
   : sappend
   : pushconst " not supported"
   : sappend
   : builtin 80 1 ; ERROR
   : goto L3
 L3:
   : return
.formuladone
.formula formula=456 simple=false ; line 6276
   //start of if statement, line 6236
   : load 0 ; SUM
   : load 1 ; MINSUM
   : cmpsml
   : iffalse L0
   : pushconst 1004
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 1 ; MINSUM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 0 ; SUM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : builtin 53 2 ; V_
   : pushconst "A_LI_BaseValue"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   //start of if statement, line 6256
   : load 0 ; SUM
   : load 4 ; MAXSUM_WITHEX
   : cmpbig
   : iffalse L2
   : pushconst 1008
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 4 ; MAXSUM_WITHEX
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 0 ; SUM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : builtin 53 2 ; V_
   : pushconst "A_LI_BaseValue"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
   //start of if statement, line 6276
   : getinput0 12 ; A_LI_EXAMINATION_YN
   : pushconst 0
   : eq
   : iffalse L4
   //start of if statement, line 6281
   : getinput0 11 ; A_LI_DATEOFBIRTH
   : getinput0 18 ; A_LI_TARIFFBEGIN
   : callfunc 89 2 ; F_LI_AGE_BEGIN
   : pushconst 41
   : cmpbigeq
   : iffalse L6
   //start of if statement, line 6282
   : load 0 ; SUM
   : load 2 ; MAXSUM_NOEX_OLD
   : cmpbig
   : iffalse L8
   : pushconst 1009
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 2 ; MAXSUM_NOEX_OLD
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 0 ; SUM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : builtin 53 2 ; V_
   : pushconst "A_LI_Examination_YN"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L9
 L8:
   : pushconst 0
 L9:
   //end of if statement
   : goto L7
 L6:
   //start of if statement, line 6304
   : load 0 ; SUM
   : load 3 ; MAXSUM_NOEX_YOUNG
   : cmpbig
   : iffalse L10
   : pushconst 1009
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 3 ; MAXSUM_NOEX_YOUNG
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 0 ; SUM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : builtin 53 2 ; V_
   : pushconst "A_LI_Examination_YN"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L11
 L10:
   : pushconst 0
 L11:
   //end of if statement
 L7:
   //end of if statement
   : goto L5
 L4:
   : pushconst 0
 L5:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=457 simple=false ; line 6332
   : getinput0 5 ; A_LI_CURRENCY
   : dup
   : pushconst "EUR"
   : ifseqi L0
   : dup
   : pushconst "RON"
   : ifseqi L1
   : goto L2
 L0: 
   : pop
   : load 0 ; PREM
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : dup
   : pushconst 1.0
   : ifnumequal L4
   : dup
   : pushconst 2.0
   : ifnumequal L5
   : dup
   : pushconst 4.0
   : ifnumequal L6
   : dup
   : pushconst 12.0
   : ifnumequal L7
   : pushconst ": not found in case statement"
   : sappend
   : error 
   : goto L8
 L4: 
   : pop
   : pushconst 100
   : goto L8
 L5: 
   : pop
   : pushconst 50
   : goto L8
 L6: 
   : pop
   : pushconst 25
   : goto L8
 L7: 
   : pop
   : pushconst 10
   : goto L8
 L8:
   : callfunc 138 2 ; F_LI_CHECK_PREM1
   : goto L3
 L1: 
   : pop
   : load 0 ; PREM
   : getinput0 6 ; A_LI_PAYMENTFREQUENCY
   : dup
   : pushconst 1.0
   : ifnumequal L9
   : dup
   : pushconst 2.0
   : ifnumequal L10
   : dup
   : pushconst 4.0
   : ifnumequal L11
   : dup
   : pushconst 12.0
   : ifnumequal L12
   : pushconst ": not found in case statement"
   : sappend
   : error 
   : goto L13
 L9: 
   : pop
   : pushconst 450
   : goto L13
 L10: 
   : pop
   : pushconst 220
   : goto L13
 L11: 
   : pop
   : pushconst 110
   : goto L13
 L12: 
   : pop
   : pushconst 45
   : goto L13
 L13:
   : callfunc 138 2 ; F_LI_CHECK_PREM1
   : goto L3
 L2:
   : pop
   : pushconst "currency "
   : getinput0 5 ; A_LI_CURRENCY
   : sappend
   : pushconst " not supported"
   : sappend
   : builtin 80 1 ; ERROR
   : goto L3
 L3:
   : return
.formuladone
.formula formula=458 simple=false ; line 6373
   //start of if statement, line 6373
   : load 0 ; PREM
   : load 1 ; MINPREM
   : cmpsml
   : iffalse L0
   : pushconst 1010
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 1 ; MINPREM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst " "
   : sappend
   : load 0 ; PREM
   : callfunc 121 1 ; F_LI_FORMAT_CURRENCY
   : sappend
   : builtin 53 2 ; V_
   : pushconst "A_LI_BaseValue"
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=459 simple=false ; line 6412
   //start of if statement, line 6399
   : load 0 ; IND_RIDER
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : pushconst 0
   : add
   : tabfindrowexact 14 1 ; T_LI_RIDERPRODUCT
   : bigeq0 ; found the row?
   : pushconst 0
   : eq
   : iffalse L0
   : pushconst 1013
   : load 0 ; IND_RIDER
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : builtin 53 1 ; V_
   : pushconst "A_LI_Rider["
   : load 0 ; IND_RIDER
   : sappend
   : pushconst "]"
   : sappend
   : callfunc 115 3 ; F_LI_ERROR
   : goto L1
 L0:
   : pushconst 0
 L1:
   //end of if statement
   //start of if statement, line 6416
   : getinput0 14 ; A_LI_PRODUCT
   : load 0 ; IND_RIDER
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : callfunc 100 2 ; F_LI_RIDER_ALLOWED
   : pushconst 0
   : eq
   : iffalse L2
   : pushconst 1012
   : load 0 ; IND_RIDER
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : load 0 ; IND_RIDER
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : pushconst 0
   : add
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : tabfindexactcolumnbyname 14 1 ; T_LI_RIDERPRODUCT
   : getinput0 14 ; A_LI_PRODUCT
   : callfunc 140 1 ; F_LI_ALLOWEDRIDERS
   : builtin 53 3 ; V_
   : pushconst "A_LI_Rider["
   : load 0 ; IND_RIDER
   : sappend
   : pushconst "]"
   : sappend
   : callfunc 115 3 ; F_LI_ERROR
   : goto L3
 L2:
   : pushconst 0
 L3:
   //end of if statement
   : add
   : return
.formuladone
.formula formula=460 simple=false ; line 6436
   //start of if statement, line 6442
   : load 0 ; PRODUCT
   : callfunc 141 1 ; F_LI_ALLOWEDRIDERS_VEC
   : builtin 63 1 ; V_LENGTH
   : pushconst 2
   : cmpsml
   : iffalse L0
   : pushconst "none"
   : goto L1
 L0:
   : load 0 ; PRODUCT
   : callfunc 141 1 ; F_LI_ALLOWEDRIDERS_VEC
   : builtin 68 1 ; V_REST
   : pushconst ", "
   : builtin 70 2 ; V_STRING
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=461 simple=false ; line 6459
   // start of loop statement
   : pushconst 6 ; nr. rows T_LI_RIDERPRODUCT
   : pushconst 0
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 3
   : dup
   : store 1 ; store counter
   : over
   : ifsml L1
 L0:
   : load 3 ; load result
   //start of if statement, line 6463
   : load 1 ; CURRENT_I
   : pushconst 0
   : eq
   : iffalse L2
   : pushconst 0
   : goto L3
 L2:
   //start of if statement, line 6466
   : load 0 ; PRODUCT
   : load 1 ; CURRENT_I
   : pushconst 1
   : tabcell 14 ; T_LI_RIDERPRODUCT
   : callfunc 100 2 ; F_LI_RIDER_ALLOWED
   : iffalse L4
   : load 1 ; CURRENT_I
   : pushconst 1
   : tabcell 14 ; T_LI_RIDERPRODUCT
   : goto L5
 L4:
   : pushnull
 L5:
   //end of if statement
 L3:
   //end of if statement
   : listappendelem1
   : store 3 ; store updated result
   // update counter and test
   : load 1
   : pushconst 1
   : add
   : dup
   : store 1
   : over
   : ifbigeq L0
 L1:
   : pop ; pop value_to
   : load 3
   // end of loop
   : return
.formuladone
.formula formula=462 simple=false ; line 6490
   : load 0 ; I
   : load 1 ; RIDERSUM
   : getinput0 5 ; A_LI_CURRENCY
   : pushconst "T_LI_Rider_Hospital_Sum_"
   : load 0 ; I
   : getinput 25 1 ; A_LI_RIDERPRODUCT
   : sappend
   : pushconst "_"
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : sappend
   : callfunc 143 4 ; F_LI_CHECKRIDER_HOSPITAL_SUM1
   : return
.formuladone
.formula formula=463 simple=false ; line 6498
   //start of if statement, line 6498
   : load 1 ; RIDERSUM
   : load 3 ; TABNAME
   : tabreffindrowexact 1
   : bigeq0 ; found the row?
   : iffalse L0
   : pushconst 0
   : goto L1
 L0:
   : pushconst 1011
   : load 1 ; RIDERSUM
   // start of loop statement
   : load 3 ; TABNAME
   : tabrows    : pushconst 1
   : over
   : over
   : sub
   // init result
   : createlistn
   : store 6
   : dup
   : store 4 ; store counter
   : over
   : ifsml L3
 L2:
   : load 6 ; load result
   : load 4 ; CURRENT_I
   : pushconst 1
   : load 3 ; TABNAME
   : tabrefcell
   : listappendelem1
   : store 6 ; store updated result
   // update counter and test
   : load 4
   : pushconst 1
   : add
   : dup
   : store 4
   : over
   : ifbigeq L2
 L3:
   : pop ; pop value_to
   : load 6
   // end of loop
   : pushconst ", "
   : builtin 70 2 ; V_STRING
   : builtin 53 2 ; V_
   : pushconst "A_LI_RiderSumValue["
   : load 0 ; I
   : sappend
   : pushconst "]"
   : sappend
   : callfunc 115 3 ; F_LI_ERROR
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=464 simple=true ; line 6785
   : pushconst "f"
   : pushconst 1
   : sappend
   : getfuncref
   : return
.formuladone
.formula formula=465 simple=true ; line 6786
   : pushconst 147 ; F2   : return
.formuladone
.formula formula=466 simple=true ; line 6787
   : load 0 ; X
   : pushconst 10
   : mult
   : return
.formuladone
.formula formula=467 simple=true ; line 6788
   : load 0 ; Y
   : pushconst 100
   : mult
   : return
.formuladone
.formula formula=468 simple=false ; line 6789
   : callfunc 144 0 ; F_REF1
   : callfunc 145 0 ; F_REF2
   : builtin 53 2 ; LIST
   : return
.formuladone
.formula formula=469 simple=false ; line 6790
   : pushconst 1
   : load 0 ; V
   : builtin 59 1 ; V_FIRST
   : calldynfunc 1   : pushconst ";"
   : sappend
   : pushconst 1
   : load 0 ; V
   : builtin 62 1 ; V_LAST
   : calldynfunc 1   : sappend
   : return
.formuladone
.formula formula=470 simple=false ; line 6791
   : callfunc 148 0 ; F_REFVEC
   : callfunc 149 1 ; F_TEST2
   : return
.formuladone
.formula formula=471 simple=true ; line 0
   : pushconst "TcGen 20.06.2012 20:16:09"
   : return
.formuladone
.formula formula=472 simple=true ; line 3095
   : pushconst "T_LI_Context"
   : return
.formuladone
.formula formula=473 simple=true ; line 3099
   : pushconst 0
   : return
.formuladone
.formula formula=474 simple=true ; line 3100
   : pushconst "T_LI_YN"
   : return
.formuladone
.formula formula=475 simple=false ; line 3101
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=476 simple=true ; line 3105
   : pushconst "RO"
   : return
.formuladone
.formula formula=477 simple=true ; line 3106
   : pushconst "T_LI_Language"
   : return
.formuladone
.formula formula=478 simple=false ; line 3110
   : pushconst "D.M.Y"
   : builtin 50 1 ; TODAY
   : return
.formuladone
.formula formula=479 simple=true ; line 3119
   : pushconst "EUR"
   : return
.formuladone
.formula formula=480 simple=true ; line 3120
   : pushconst "T_LI_Currency"
   : return
.formuladone
.formula formula=481 simple=false ; line 3121
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=482 simple=true ; line 3125
   : pushconst 1
   : return
.formuladone
.formula formula=483 simple=true ; line 3126
   : pushconst "T_LI_PaymentFrequency"
   : return
.formuladone
.formula formula=484 simple=false ; line 3127
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=485 simple=true ; line 3131
   : pushconst "T_LI_PaymentMethod"
   : return
.formuladone
.formula formula=486 simple=true ; line 3132
   : pushconst 3
   : return
.formuladone
.formula formula=487 simple=true ; line 3136
   : pushconst 1
   : return
.formuladone
.formula formula=488 simple=true ; line 3137
   : pushconst "T_LI_Channel"
   : return
.formuladone
.formula formula=489 simple=false ; line 3138
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=490 simple=true ; line 3142
   : getinput0 3 ; A_LI_CURRENTDATE
   : return
.formuladone
.formula formula=491 simple=true ; line 3146
   : pushconst 1
   : return
.formuladone
.formula formula=492 simple=true ; line 3147
   : pushconst "T_LI_Sex"
   : return
.formuladone
.formula formula=493 simple=false ; line 3148
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=494 simple=true ; line 3152
   : pushconst "1.1.1974"
   : return
.formuladone
.formula formula=495 simple=true ; line 3156
   : pushconst 0
   : return
.formuladone
.formula formula=496 simple=true ; line 3157
   : pushconst "T_LI_YN"
   : return
.formuladone
.formula formula=497 simple=false ; line 3158
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=498 simple=true ; line 3162
   : pushconst 0
   : return
.formuladone
.formula formula=499 simple=true ; line 3166
   : pushconst "T_LI_Product"
   : return
.formuladone
.formula formula=500 simple=false ; line 3167
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=501 simple=true ; line 3168
   : pushconst ""
   : return
.formuladone
.formula formula=502 simple=true ; line 3172
   : pushconst 1
   : return
.formuladone
.formula formula=503 simple=true ; line 3173
   : pushconst "T_LI_BaseCode"
   : return
.formuladone
.formula formula=504 simple=false ; line 3174
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=505 simple=true ; line 3178
   : pushconst 0
   : return
.formuladone
.formula formula=506 simple=false ; line 3182
   //start of if statement, line 3182
   : callfunc 65 0 ; F_LI_INDEXATION_PERC
   : pushconst 0
   : cmpbig
   : iffalse L0
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : goto L1
 L0:
   : pushconst 1
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=507 simple=false ; line 3191
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 0 ; counter CURRENT_A_LI_MAINLAYERS
   : listappendelem1
   : return
.formuladone
.formula formula=508 simple=false ; line 3192
   : getinput0 3 ; A_LI_CURRENTDATE
   : pushconst 1
   : pushconst 0
   : pushconst 0
   : pushconst "D.M.Y"
   : builtin 43 5 ; DATE
   : return
.formuladone
.formula formula=509 simple=false ; line 3200
   //start of if statement, line 3200
   : load 0 ; INDEX
   : pushconst 0
   : cmpbig
   : iffalse L4
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : pushconst 0
   : getinputraw 18 1 ; A_LI_TARIFFBEGIN.UNCHECKED
   : pushconst 0
   : pushconst 0
   : load 0 ; INDEX
   : pushconst "D.M.Y"
   : builtin 43 5 ; DATE
   : goto L1
 L0:
   : load 0 //index
   : getinputrawself 18 ; A_LI_TARIFFBEGIN
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=510 simple=false ; line 3216
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 0 ; counter CURRENT_A_LI_MAINLAYERS
   : listappendelem1
   : return
.formuladone
.formula formula=511 simple=true ; line 3217
   : pushconst 1
   : return
.formuladone
.formula formula=512 simple=false ; line 3221
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 0 ; counter CURRENT_A_LI_MAINLAYERS
   : listappendelem1
   : return
.formuladone
.formula formula=513 simple=true ; line 3222
   : pushconst 1
   : return
.formuladone
.formula formula=514 simple=true ; line 3223
   : pushconst "T_LI_DurationCode"
   : return
.formuladone
.formula formula=515 simple=false ; line 3224
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=516 simple=false ; line 3225
   //start of if statement, line 3225
   : load 0 ; INDEX
   : pushconst 0
   : cmpbig
   : iffalse L4
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : pushconst 1
   : goto L1
 L0:
   : load 0 //index
   : getinputrawself 20 ; A_LI_DURATIONCODE
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=517 simple=false ; line 3234
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 0 ; counter CURRENT_A_LI_MAINLAYERS
   : listappendelem1
   : return
.formuladone
.formula formula=518 simple=true ; line 3235
   : pushconst 10
   : return
.formuladone
.formula formula=519 simple=false ; line 3236
   //start of if statement, line 3236
   : load 0 ; INDEX
   : pushconst 0
   : cmpbig
   : iffalse L4
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : load 0 ; INDEX
   : sub
   : goto L1
 L0:
   : load 0 //index
   : getinputrawself 21 ; A_LI_DURATIONVALUE
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=520 simple=false ; line 3245
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 0 ; counter CURRENT_A_LI_MAINLAYERS
   : listappendelem1
   : return
.formuladone
.formula formula=521 simple=true ; line 3246
   : pushconst 1
   : return
.formuladone
.formula formula=522 simple=true ; line 3247
   : pushconst "T_LI_PaymentPeriodCode"
   : return
.formuladone
.formula formula=523 simple=false ; line 3248
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=524 simple=false ; line 3249
   //start of if statement, line 3249
   : load 0 ; INDEX
   : pushconst 0
   : cmpbig
   : iffalse L4
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : pushconst 1
   : goto L1
 L0:
   : load 0 //index
   : getinputrawself 22 ; A_LI_PAYMENTPERIODCODE
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=525 simple=false ; line 3258
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 0 ; counter CURRENT_A_LI_MAINLAYERS
   : listappendelem1
   : return
.formuladone
.formula formula=526 simple=false ; line 3259
   : callfunc 90 0 ; F_LI_TARIFFDURATION
   : return
.formuladone
.formula formula=527 simple=false ; line 3260
   //start of if statement, line 3260
   : load 0 ; INDEX
   : pushconst 0
   : cmpbig
   : iffalse L4
 L2:
   : callfunc 64 0 ; F_LI_INDEXATION_YN
   : iffalse L4
   : goto L3
 L3:
   : pushconst1
   : goto L5
 L4:
   : pushconst0
 L5:
   : iffalse L0
   : callfunc 92 0 ; F_LI_PAYMENTPERIOD
   : load 0 ; INDEX
   : sub
   : goto L1
 L0:
   : load 0 //index
   : getinputrawself 23 ; A_LI_PAYMENTPERIODVALUE
 L1:
   //end of if statement
   : return
.formuladone
.formula formula=528 simple=true ; line 3269
   : pushconst 0
   : return
.formuladone
.formula formula=529 simple=false ; line 3273
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 1 ; counter CURRENT_A_LI_RIDERS
   : listappendelem1
   : return
.formuladone
.formula formula=530 simple=true ; line 3274
   : pushconst "T_LI_RiderProduct"
   : return
.formuladone
.formula formula=531 simple=false ; line 3275
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=532 simple=false ; line 3276
   : getinput0 14 ; A_LI_PRODUCT
   : load 2 ; KEY
   : callfunc 100 2 ; F_LI_RIDER_ALLOWED
   : return
.formuladone
.formula formula=533 simple=false ; line 3284
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 1 ; counter CURRENT_A_LI_RIDERS
   : listappendelem1
   : return
.formuladone
.formula formula=534 simple=true ; line 3285
   : pushconst 1
   : return
.formuladone
.formula formula=535 simple=false ; line 3289
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 1 ; counter CURRENT_A_LI_RIDERS
   : listappendelem1
   : return
.formuladone
.formula formula=536 simple=true ; line 3290
   : pushconst 0
   : return
.formuladone
.formula formula=537 simple=true ; line 3291
   : pushconst "T_LI_RiderSumCode"
   : return
.formuladone
.formula formula=538 simple=false ; line 3292
   : callfunc 98 0 ; F_LI_TEXTCOLUMN
   : return
.formuladone
.formula formula=539 simple=false ; line 3296
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 1 ; counter CURRENT_A_LI_RIDERS
   : listappendelem1
   : return
.formuladone
.formula formula=540 simple=true ; line 3297
   : pushconst 0
   : return
.formuladone
.formula formula=541 simple=false ; line 3301
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 1 ; counter CURRENT_A_LI_RIDERS
   : listappendelem1
   : return
.formuladone
.formula formula=542 simple=true ; line 3302
   : pushconst 0
   : return
.formuladone
.formula formula=543 simple=false ; line 3306
   : pushconst 1
   : createlistn 
   : dup
   : pushconst 1 ; counter CURRENT_A_LI_RIDERS
   : listappendelem1
   : return
.formuladone
.formula formula=544 simple=true ; line 3307
   : pushconst 0
   : return
.formuladone
.formula formula=545 simple=false ; line 3314
   : pushconst "T_LI_Rider_Hospital_Sum_"
   : getinput0 14 ; A_LI_PRODUCT
   : callfunc 84 1 ; F_LI_PRODUCT2RIDERHOSPITAL
   : sappend
   : pushconst "_"
   : sappend
   : getinput0 5 ; A_LI_CURRENCY
   : sappend
   : return
.formuladone
.formula formula=546 simple=false ; line 3318
   : callfunc 79 0 ; F_LI_RIDER_HOSPITAL_SUM_ALL_VEC
   : return
.formuladone
.formula formula=547 simple=true ; line 3322
   : pushconst 0
   : return
.formuladone
